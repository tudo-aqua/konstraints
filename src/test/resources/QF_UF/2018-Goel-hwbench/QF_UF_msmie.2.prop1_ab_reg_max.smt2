(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: msmie.2.prop1
query-maker: "Yices 2"
query-time: 0.001000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status unsat)
(declare-sort utt$8 0)
(declare-sort utt$32 0)
(declare-fun y$1 () Bool)
(declare-fun y$101 () Bool)
(declare-fun y$103 () Bool)
(declare-fun y$105 () Bool)
(declare-fun y$107 () Bool)
(declare-fun y$109 () Bool)
(declare-fun y$11 () Bool)
(declare-fun y$111 () Bool)
(declare-fun y$113 () Bool)
(declare-fun y$115 () Bool)
(declare-fun y$117 () Bool)
(declare-fun y$119 () Bool)
(declare-fun y$121 () Bool)
(declare-fun y$123 () Bool)
(declare-fun y$125 () Bool)
(declare-fun y$127 () Bool)
(declare-fun y$129 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$131 () Bool)
(declare-fun y$133 () Bool)
(declare-fun y$135 () Bool)
(declare-fun y$137 () Bool)
(declare-fun y$139 () Bool)
(declare-fun y$141 () Bool)
(declare-fun y$143 () Bool)
(declare-fun y$145 () Bool)
(declare-fun y$147 () Bool)
(declare-fun y$149 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$151 () Bool)
(declare-fun y$153 () Bool)
(declare-fun y$155 () Bool)
(declare-fun y$157 () Bool)
(declare-fun y$159 () Bool)
(declare-fun y$161 () Bool)
(declare-fun y$163 () Bool)
(declare-fun y$165 () Bool)
(declare-fun y$167 () Bool)
(declare-fun y$169 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$171 () Bool)
(declare-fun y$173 () Bool)
(declare-fun y$175 () Bool)
(declare-fun y$177 () Bool)
(declare-fun y$179 () Bool)
(declare-fun y$181 () Bool)
(declare-fun y$183 () Bool)
(declare-fun y$185 () Bool)
(declare-fun y$187 () Bool)
(declare-fun y$189 () Bool)
(declare-fun y$19 () Bool)
(declare-fun y$191 () Bool)
(declare-fun y$193 () Bool)
(declare-fun y$196 () Bool)
(declare-fun y$198 () Bool)
(declare-fun y$200 () Bool)
(declare-fun y$202 () Bool)
(declare-fun y$204 () Bool)
(declare-fun y$21 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$25 () Bool)
(declare-fun y$27 () Bool)
(declare-fun y$29 () Bool)
(declare-fun y$3 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$33 () Bool)
(declare-fun y$35 () Bool)
(declare-fun y$37 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$41 () Bool)
(declare-fun y$43 () Bool)
(declare-fun y$45 () Bool)
(declare-fun y$47 () Bool)
(declare-fun y$49 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$51 () Bool)
(declare-fun y$53 () Bool)
(declare-fun y$55 () Bool)
(declare-fun y$57 () Bool)
(declare-fun y$59 () Bool)
(declare-fun y$61 () Bool)
(declare-fun y$63 () Bool)
(declare-fun y$65 () Bool)
(declare-fun y$67 () Bool)
(declare-fun y$69 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$71 () Bool)
(declare-fun y$7139 () Bool)
(declare-fun y$7140 () Bool)
(declare-fun y$73 () Bool)
(declare-fun y$7320 () Bool)
(declare-fun y$7327 () Bool)
(declare-fun y$75 () Bool)
(declare-fun y$77 () Bool)
(declare-fun y$79 () Bool)
(declare-fun y$81 () Bool)
(declare-fun y$83 () Bool)
(declare-fun y$85 () Bool)
(declare-fun y$87 () Bool)
(declare-fun y$89 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$91 () Bool)
(declare-fun y$93 () Bool)
(declare-fun y$95 () Bool)
(declare-fun y$97 () Bool)
(declare-fun y$99 () Bool)
(declare-fun y$a_change_master_1 () Bool)
(declare-fun y$a_change_master_2 () Bool)
(declare-fun y$a_change_master_3 () Bool)
(declare-fun y$a_change_master_4 () Bool)
(declare-fun y$a_change_master_5 () Bool)
(declare-fun y$a_change_master_6 () Bool)
(declare-fun y$a_error_state_slave_1 () Bool)
(declare-fun y$a_error_state_slave_2 () Bool)
(declare-fun y$a_error_state_slave_3 () Bool)
(declare-fun y$a_error_state_slave_4 () Bool)
(declare-fun y$a_error_state_slave_5 () Bool)
(declare-fun y$a_error_state_slave_6 () Bool)
(declare-fun y$a_error_state_slave_7 () Bool)
(declare-fun y$a_idle_master_1 () Bool)
(declare-fun y$a_idle_master_2 () Bool)
(declare-fun y$a_idle_master_3 () Bool)
(declare-fun y$a_idle_master_4 () Bool)
(declare-fun y$a_idle_master_5 () Bool)
(declare-fun y$a_idle_master_6 () Bool)
(declare-fun y$a_idle_slave_1 () Bool)
(declare-fun y$a_idle_slave_2 () Bool)
(declare-fun y$a_idle_slave_3 () Bool)
(declare-fun y$a_idle_slave_4 () Bool)
(declare-fun y$a_idle_slave_5 () Bool)
(declare-fun y$a_idle_slave_6 () Bool)
(declare-fun y$a_idle_slave_7 () Bool)
(declare-fun y$a_master_master_1 () Bool)
(declare-fun y$a_master_master_2 () Bool)
(declare-fun y$a_master_master_3 () Bool)
(declare-fun y$a_master_master_4 () Bool)
(declare-fun y$a_master_master_5 () Bool)
(declare-fun y$a_master_master_6 () Bool)
(declare-fun y$a_no_master_master_1 () Bool)
(declare-fun y$a_no_master_master_2 () Bool)
(declare-fun y$a_no_master_master_3 () Bool)
(declare-fun y$a_no_master_master_4 () Bool)
(declare-fun y$a_no_master_master_5 () Bool)
(declare-fun y$a_no_master_master_6 () Bool)
(declare-fun y$a_no_readers_master_1 () Bool)
(declare-fun y$a_no_readers_master_2 () Bool)
(declare-fun y$a_no_readers_master_3 () Bool)
(declare-fun y$a_no_readers_master_4 () Bool)
(declare-fun y$a_no_readers_master_5 () Bool)
(declare-fun y$a_no_readers_master_6 () Bool)
(declare-fun y$a_q0_master_1 () Bool)
(declare-fun y$a_q0_master_2 () Bool)
(declare-fun y$a_q0_master_3 () Bool)
(declare-fun y$a_q0_master_4 () Bool)
(declare-fun y$a_q0_master_5 () Bool)
(declare-fun y$a_q0_master_6 () Bool)
(declare-fun y$a_q0_slave_1 () Bool)
(declare-fun y$a_q0_slave_2 () Bool)
(declare-fun y$a_q0_slave_3 () Bool)
(declare-fun y$a_q0_slave_4 () Bool)
(declare-fun y$a_q0_slave_5 () Bool)
(declare-fun y$a_q0_slave_6 () Bool)
(declare-fun y$a_q0_slave_7 () Bool)
(declare-fun y$a_q1_slave_1 () Bool)
(declare-fun y$a_q1_slave_2 () Bool)
(declare-fun y$a_q1_slave_3 () Bool)
(declare-fun y$a_q1_slave_4 () Bool)
(declare-fun y$a_q1_slave_5 () Bool)
(declare-fun y$a_q1_slave_6 () Bool)
(declare-fun y$a_q1_slave_7 () Bool)
(declare-fun y$a_q2_slave_1 () Bool)
(declare-fun y$a_q2_slave_2 () Bool)
(declare-fun y$a_q2_slave_3 () Bool)
(declare-fun y$a_q2_slave_4 () Bool)
(declare-fun y$a_q2_slave_5 () Bool)
(declare-fun y$a_q2_slave_6 () Bool)
(declare-fun y$a_q2_slave_7 () Bool)
(declare-fun y$a_q3_slave_1 () Bool)
(declare-fun y$a_q3_slave_2 () Bool)
(declare-fun y$a_q3_slave_3 () Bool)
(declare-fun y$a_q3_slave_4 () Bool)
(declare-fun y$a_q3_slave_5 () Bool)
(declare-fun y$a_q3_slave_6 () Bool)
(declare-fun y$a_q3_slave_7 () Bool)
(declare-fun y$a_r0_master_1 () Bool)
(declare-fun y$a_r0_master_2 () Bool)
(declare-fun y$a_r0_master_3 () Bool)
(declare-fun y$a_r0_master_4 () Bool)
(declare-fun y$a_r0_master_5 () Bool)
(declare-fun y$a_r0_master_6 () Bool)
(declare-fun y$a_r1_master_1 () Bool)
(declare-fun y$a_r1_master_2 () Bool)
(declare-fun y$a_r1_master_3 () Bool)
(declare-fun y$a_r1_master_4 () Bool)
(declare-fun y$a_r1_master_5 () Bool)
(declare-fun y$a_r1_master_6 () Bool)
(declare-fun y$a_reading_master_1 () Bool)
(declare-fun y$a_reading_master_2 () Bool)
(declare-fun y$a_reading_master_3 () Bool)
(declare-fun y$a_reading_master_4 () Bool)
(declare-fun y$a_reading_master_5 () Bool)
(declare-fun y$a_reading_master_6 () Bool)
(declare-fun y$dve_invalid () Bool)
(declare-fun y$id104 () Bool)
(declare-fun y$id104_op () Bool)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n0s8 () utt$8)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s8 () utt$8)
(declare-fun y$n2s8 () utt$8)
(declare-fun y$n3s8 () utt$8)
(declare-fun y$prop () Bool)
(declare-fun y$v_b_0 () utt$8)
(declare-fun y$v_b_1 () utt$8)
(declare-fun y$v_change_to () utt$8)
(declare-fun y$v_readers () utt$8)
(declare-fun y$v_sem () utt$8)
(assert (distinct y$n0s8 y$n3s8 y$n2s8 y$n1s8))
(assert (not (= y$n1s32 y$n0s32)))
(assert (= y$a_change_master_1 (not y$1)))
(assert (= y$a_change_master_2 (not y$3)))
(assert (= y$a_change_master_3 (not y$5)))
(assert (= y$a_change_master_4 (not y$7)))
(assert (= y$a_change_master_5 (not y$9)))
(assert (= y$a_change_master_6 (not y$11)))
(assert (= y$a_error_state_slave_1 (not y$13)))
(assert (= y$a_error_state_slave_2 (not y$15)))
(assert (= y$a_error_state_slave_3 (not y$17)))
(assert (= y$a_error_state_slave_4 (not y$19)))
(assert (= y$a_error_state_slave_5 (not y$21)))
(assert (= y$a_error_state_slave_6 (not y$23)))
(assert (= y$a_error_state_slave_7 (not y$25)))
(assert (= y$a_idle_master_1 (not y$27)))
(assert (= y$a_idle_master_2 (not y$29)))
(assert (= y$a_idle_master_3 (not y$31)))
(assert (= y$a_idle_master_4 (not y$33)))
(assert (= y$a_idle_master_5 (not y$35)))
(assert (= y$a_idle_master_6 (not y$37)))
(assert (= y$a_idle_slave_1 (not y$39)))
(assert (= y$a_idle_slave_2 (not y$41)))
(assert (= y$a_idle_slave_3 (not y$43)))
(assert (= y$a_idle_slave_4 (not y$45)))
(assert (= y$a_idle_slave_5 (not y$47)))
(assert (= y$a_idle_slave_6 (not y$49)))
(assert (= y$a_idle_slave_7 (not y$51)))
(assert (= y$a_master_master_1 (not y$53)))
(assert (= y$a_master_master_2 (not y$55)))
(assert (= y$a_master_master_3 (not y$57)))
(assert (= y$a_master_master_4 (not y$59)))
(assert (= y$a_master_master_5 (not y$61)))
(assert (= y$a_master_master_6 (not y$63)))
(assert (= y$a_no_master_master_1 (not y$65)))
(assert (= y$a_no_master_master_2 (not y$67)))
(assert (= y$a_no_master_master_3 (not y$69)))
(assert (= y$a_no_master_master_4 (not y$71)))
(assert (= y$a_no_master_master_5 (not y$73)))
(assert (= y$a_no_master_master_6 (not y$75)))
(assert (= y$a_no_readers_master_1 (not y$77)))
(assert (= y$a_no_readers_master_2 (not y$79)))
(assert (= y$a_no_readers_master_3 (not y$81)))
(assert (= y$a_no_readers_master_4 (not y$83)))
(assert (= y$a_no_readers_master_5 (not y$85)))
(assert (= y$a_no_readers_master_6 (not y$87)))
(assert (= y$a_q0_master_1 (not y$89)))
(assert (= y$a_q0_master_2 (not y$91)))
(assert (= y$a_q0_master_3 (not y$93)))
(assert (= y$a_q0_master_4 (not y$95)))
(assert (= y$a_q0_master_5 (not y$97)))
(assert (= y$a_q0_master_6 (not y$99)))
(assert (= y$a_q0_slave_1 (not y$101)))
(assert (= y$a_q0_slave_2 (not y$103)))
(assert (= y$a_q0_slave_3 (not y$105)))
(assert (= y$a_q0_slave_4 (not y$107)))
(assert (= y$a_q0_slave_5 (not y$109)))
(assert (= y$a_q0_slave_6 (not y$111)))
(assert (= y$a_q0_slave_7 (not y$113)))
(assert (= y$a_q1_slave_1 (not y$115)))
(assert (= y$a_q1_slave_2 (not y$117)))
(assert (= y$a_q1_slave_3 (not y$119)))
(assert (= y$a_q1_slave_4 (not y$121)))
(assert (= y$a_q1_slave_5 (not y$123)))
(assert (= y$a_q1_slave_6 (not y$125)))
(assert (= y$a_q1_slave_7 (not y$127)))
(assert (= y$a_q2_slave_1 (not y$129)))
(assert (= y$a_q2_slave_2 (not y$131)))
(assert (= y$a_q2_slave_3 (not y$133)))
(assert (= y$a_q2_slave_4 (not y$135)))
(assert (= y$a_q2_slave_5 (not y$137)))
(assert (= y$a_q2_slave_6 (not y$139)))
(assert (= y$a_q2_slave_7 (not y$141)))
(assert (= y$a_q3_slave_1 (not y$143)))
(assert (= y$a_q3_slave_2 (not y$145)))
(assert (= y$a_q3_slave_3 (not y$147)))
(assert (= y$a_q3_slave_4 (not y$149)))
(assert (= y$a_q3_slave_5 (not y$151)))
(assert (= y$a_q3_slave_6 (not y$153)))
(assert (= y$a_q3_slave_7 (not y$155)))
(assert (= y$a_r0_master_1 (not y$157)))
(assert (= y$a_r0_master_2 (not y$159)))
(assert (= y$a_r0_master_3 (not y$161)))
(assert (= y$a_r0_master_4 (not y$163)))
(assert (= y$a_r0_master_5 (not y$165)))
(assert (= y$a_r0_master_6 (not y$167)))
(assert (= y$a_r1_master_1 (not y$169)))
(assert (= y$a_r1_master_2 (not y$171)))
(assert (= y$a_r1_master_3 (not y$173)))
(assert (= y$a_r1_master_4 (not y$175)))
(assert (= y$a_r1_master_5 (not y$177)))
(assert (= y$a_r1_master_6 (not y$179)))
(assert (= y$a_reading_master_1 (not y$181)))
(assert (= y$a_reading_master_2 (not y$183)))
(assert (= y$a_reading_master_3 (not y$185)))
(assert (= y$a_reading_master_4 (not y$187)))
(assert (= y$a_reading_master_5 (not y$189)))
(assert (= y$a_reading_master_6 (not y$191)))
(assert (= y$dve_invalid (not y$193)))
(assert (= y$196 (= y$n0s8 y$v_b_0)))
(assert (= y$198 (= y$n0s8 y$v_b_1)))
(assert (= y$200 (= y$n0s8 y$v_change_to)))
(assert (= y$202 (= y$n0s8 y$v_readers)))
(assert (= y$204 (= y$n0s8 y$v_sem)))
(assert (= y$prop (not y$7320)))
(assert (= y$id104_op (and y$a_error_state_slave_1 y$193)))
(assert (= y$id104_op (not y$7139)))
(assert (= y$7140 (= y$prop y$7139)))
(assert (= y$7327 (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$61 y$63 y$65 y$67 y$69 y$71 y$73 y$75 y$77 y$79 y$81 y$83 y$85 y$87 y$89 y$91 y$93 y$95 y$97 y$99 y$101 y$103 y$105 y$107 y$109 y$111 y$113 y$115 y$117 y$119 y$121 y$123 y$125 y$127 y$129 y$131 y$133 y$135 y$137 y$139 y$141 y$143 y$145 y$147 y$149 y$151 y$153 y$155 y$157 y$159 y$161 y$163 y$165 y$167 y$169 y$171 y$173 y$175 y$177 y$179 y$181 y$183 y$185 y$187 y$189 y$191 y$193 y$196 y$198 y$200 y$202 y$204 y$7320 y$7140)))
(assert y$7327)
(check-sat)
(exit)
