(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: needham.2.prop2
query-maker: "Yices 2"
query-time: 0.002000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status unsat)
(declare-sort utt$8 0)
(declare-sort utt$16 0)
(declare-sort utt$32 0)
(declare-fun y$1 () Bool)
(declare-fun y$101 () Bool)
(declare-fun y$103 () Bool)
(declare-fun y$11 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$19 () Bool)
(declare-fun y$21 () Bool)
(declare-fun y$2231 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$25 () Bool)
(declare-fun y$27 () Bool)
(declare-fun y$29 () Bool)
(declare-fun y$3 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$33 () Bool)
(declare-fun y$35 () Bool)
(declare-fun y$37 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$41 () Bool)
(declare-fun y$4256 () Bool)
(declare-fun y$4257 () Bool)
(declare-fun y$43 () Bool)
(declare-fun y$4362 () Bool)
(declare-fun y$4370 () Bool)
(declare-fun y$45 () Bool)
(declare-fun y$47 () Bool)
(declare-fun y$49 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$51 () Bool)
(declare-fun y$53 () Bool)
(declare-fun y$55 () Bool)
(declare-fun y$57 () Bool)
(declare-fun y$59 () Bool)
(declare-fun y$61 () Bool)
(declare-fun y$63 () Bool)
(declare-fun y$65 () Bool)
(declare-fun y$67 () Bool)
(declare-fun y$69 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$72 () Bool)
(declare-fun y$74 () Bool)
(declare-fun y$76 () Bool)
(declare-fun y$78 () Bool)
(declare-fun y$80 () Bool)
(declare-fun y$83 () Bool)
(declare-fun y$85 () Bool)
(declare-fun y$87 () Bool)
(declare-fun y$89 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$91 () Bool)
(declare-fun y$93 () Bool)
(declare-fun y$95 () Bool)
(declare-fun y$97 () Bool)
(declare-fun y$99 () Bool)
(declare-fun y$a_c1 () Bool)
(declare-fun y$a_c2 () Bool)
(declare-fun y$a_commited_initiator_0 () Bool)
(declare-fun y$a_commited_initiator_1 () Bool)
(declare-fun y$a_corrupted_initiator_0 () Bool)
(declare-fun y$a_corrupted_initiator_1 () Bool)
(declare-fun y$a_corrupted_responder_0 () Bool)
(declare-fun y$a_corrupted_responder_1 () Bool)
(declare-fun y$a_d1 () Bool)
(declare-fun y$a_e1 () Bool)
(declare-fun y$a_f1 () Bool)
(declare-fun y$a_finished_initiator_0 () Bool)
(declare-fun y$a_finished_initiator_1 () Bool)
(declare-fun y$a_finished_responder_0 () Bool)
(declare-fun y$a_finished_responder_1 () Bool)
(declare-fun y$a_got2 () Bool)
(declare-fun y$a_got3 () Bool)
(declare-fun y$a_got_msg_responder_0 () Bool)
(declare-fun y$a_got_msg_responder_1 () Bool)
(declare-fun y$a_got_resp_initiator_0 () Bool)
(declare-fun y$a_got_resp_initiator_1 () Bool)
(declare-fun y$a_got_resp_responder_0 () Bool)
(declare-fun y$a_got_resp_responder_1 () Bool)
(declare-fun y$a_q () Bool)
(declare-fun y$a_send_reply_responder_0 () Bool)
(declare-fun y$a_send_reply_responder_1 () Bool)
(declare-fun y$a_start_initiator_0 () Bool)
(declare-fun y$a_start_initiator_1 () Bool)
(declare-fun y$a_start_responder_0 () Bool)
(declare-fun y$a_start_responder_1 () Bool)
(declare-fun y$a_wait_resp_initiator_0 () Bool)
(declare-fun y$a_wait_resp_initiator_1 () Bool)
(declare-fun y$a_wait_resp_responder_0 () Bool)
(declare-fun y$a_wait_resp_responder_1 () Bool)
(declare-fun y$dve_invalid () Bool)
(declare-fun y$id55 () Bool)
(declare-fun y$id55_op () Bool)
(declare-fun y$n0s16 () utt$16)
(declare-fun y$n0s8 () utt$8)
(declare-fun y$n10s32 () utt$32)
(declare-fun y$n11s32 () utt$32)
(declare-fun y$n150s32 () utt$32)
(declare-fun y$n154s16 () utt$16)
(declare-fun y$n1591s16 () utt$16)
(declare-fun y$n15s32 () utt$32)
(declare-fun y$n1606s16 () utt$16)
(declare-fun y$n1636s16 () utt$16)
(declare-fun y$n165s32 () utt$32)
(declare-fun y$n1681s16 () utt$16)
(declare-fun y$n16s32 () utt$32)
(declare-fun y$n1726s16 () utt$16)
(declare-fun y$n1771s16 () utt$16)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s8 () utt$8)
(declare-fun y$n225s32 () utt$32)
(declare-fun y$n2281s16 () utt$16)
(declare-fun y$n2282s16 () utt$16)
(declare-fun y$n2284s16 () utt$16)
(declare-fun y$n2287s16 () utt$16)
(declare-fun y$n2290s16 () utt$16)
(declare-fun y$n2293s16 () utt$16)
(declare-fun y$n2356s16 () utt$16)
(declare-fun y$n2357s16 () utt$16)
(declare-fun y$n2359s16 () utt$16)
(declare-fun y$n2362s16 () utt$16)
(declare-fun y$n2365s16 () utt$16)
(declare-fun y$n2368s16 () utt$16)
(declare-fun y$n2401s16 () utt$16)
(declare-fun y$n2402s16 () utt$16)
(declare-fun y$n2404s16 () utt$16)
(declare-fun y$n2407s16 () utt$16)
(declare-fun y$n2410s16 () utt$16)
(declare-fun y$n2413s16 () utt$16)
(declare-fun y$n2597s16 () utt$16)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$n4s32 () utt$32)
(declare-fun y$n5s32 () utt$32)
(declare-fun y$n60s32 () utt$32)
(declare-fun y$n75s32 () utt$32)
(declare-fun y$n7s32 () utt$32)
(declare-fun y$n8s32 () utt$32)
(declare-fun y$prop () Bool)
(declare-fun y$v_kNa () utt$8)
(declare-fun y$v_kNb () utt$8)
(declare-fun y$v_k_Na_A__B () utt$8)
(declare-fun y$v_k_Na_Nb__A () utt$8)
(declare-fun y$v_k_Nb__B () utt$8)
(declare-fun y$v_m_initiator_0 () utt$16)
(declare-fun y$v_m_initiator_1 () utt$16)
(declare-fun y$v_m_intruder () utt$16)
(declare-fun y$v_m_responder_0 () utt$16)
(declare-fun y$v_m_responder_1 () utt$16)
(declare-fun y$v_party_nonce_initiator_0 () utt$16)
(declare-fun y$v_party_nonce_initiator_1 () utt$16)
(declare-fun y$v_party_nonce_responder_0 () utt$16)
(declare-fun y$v_party_nonce_responder_1 () utt$16)
(declare-fun y$v_party_responder_0 () utt$16)
(declare-fun y$v_party_responder_1 () utt$16)
(assert (not (= y$n0s8 y$n1s8)))
(assert (distinct y$n0s16 y$n1771s16 y$n1636s16 y$n1591s16 y$n154s16 y$n2284s16 y$n2404s16 y$n2359s16 y$n2281s16 y$n2401s16 y$n2356s16 y$n1606s16 y$n1726s16 y$n1681s16 y$n2282s16 y$n2402s16 y$n2357s16 y$n2290s16 y$n2410s16 y$n2365s16 y$n2287s16 y$n2407s16 y$n2362s16 y$n2293s16 y$n2413s16 y$n2368s16 y$n2597s16))
(assert (distinct y$n15s32 y$n75s32 y$n16s32 y$n60s32 y$n1s32 y$n225s32 y$n165s32 y$n150s32 y$n7s32 y$n2s32 y$n8s32 y$n10s32 y$n4s32 y$n11s32 y$n5s32))
(assert (= y$a_c1 (not y$1)))
(assert (= y$a_c2 (not y$3)))
(assert (= y$a_commited_initiator_0 (not y$5)))
(assert (= y$a_commited_initiator_1 (not y$7)))
(assert (= y$a_corrupted_initiator_0 (not y$9)))
(assert (= y$a_corrupted_initiator_1 (not y$11)))
(assert (= y$a_corrupted_responder_0 (not y$13)))
(assert (= y$a_corrupted_responder_1 (not y$15)))
(assert (= y$a_d1 (not y$17)))
(assert (= y$a_e1 (not y$19)))
(assert (= y$a_f1 (not y$21)))
(assert (= y$a_finished_initiator_0 (not y$23)))
(assert (= y$a_finished_initiator_1 (not y$25)))
(assert (= y$a_finished_responder_0 (not y$27)))
(assert (= y$a_finished_responder_1 (not y$29)))
(assert (= y$a_got2 (not y$31)))
(assert (= y$a_got3 (not y$33)))
(assert (= y$a_got_msg_responder_0 (not y$35)))
(assert (= y$a_got_msg_responder_1 (not y$37)))
(assert (= y$a_got_resp_initiator_0 (not y$39)))
(assert (= y$a_got_resp_initiator_1 (not y$41)))
(assert (= y$a_got_resp_responder_0 (not y$43)))
(assert (= y$a_got_resp_responder_1 (not y$45)))
(assert (= y$a_q (not y$47)))
(assert (= y$a_send_reply_responder_0 (not y$49)))
(assert (= y$a_send_reply_responder_1 (not y$51)))
(assert (= y$a_start_initiator_0 (not y$53)))
(assert (= y$a_start_initiator_1 (not y$55)))
(assert (= y$a_start_responder_0 (not y$57)))
(assert (= y$a_start_responder_1 (not y$59)))
(assert (= y$a_wait_resp_initiator_0 (not y$61)))
(assert (= y$a_wait_resp_initiator_1 (not y$63)))
(assert (= y$a_wait_resp_responder_0 (not y$65)))
(assert (= y$a_wait_resp_responder_1 (not y$67)))
(assert (= y$dve_invalid (not y$69)))
(assert (= y$72 (= y$n0s8 y$v_kNa)))
(assert (= y$74 (= y$n0s8 y$v_kNb)))
(assert (= y$76 (= y$n0s8 y$v_k_Na_A__B)))
(assert (= y$78 (= y$n0s8 y$v_k_Na_Nb__A)))
(assert (= y$80 (= y$n0s8 y$v_k_Nb__B)))
(assert (= y$83 (= y$n0s16 y$v_m_initiator_0)))
(assert (= y$85 (= y$n0s16 y$v_m_initiator_1)))
(assert (= y$87 (= y$n0s16 y$v_m_intruder)))
(assert (= y$89 (= y$n0s16 y$v_m_responder_0)))
(assert (= y$91 (= y$n0s16 y$v_m_responder_1)))
(assert (= y$93 (= y$n0s16 y$v_party_nonce_initiator_0)))
(assert (= y$95 (= y$n0s16 y$v_party_nonce_initiator_1)))
(assert (= y$97 (= y$n0s16 y$v_party_nonce_responder_0)))
(assert (= y$99 (= y$n0s16 y$v_party_nonce_responder_1)))
(assert (= y$101 (= y$n0s16 y$v_party_responder_0)))
(assert (= y$103 (= y$n0s16 y$v_party_responder_1)))
(assert (= y$prop (not y$4362)))
(assert (= y$2231 (= y$n1s8 y$v_kNa)))
(assert (= y$id55_op (and y$69 y$2231)))
(assert (= y$id55_op (not y$4256)))
(assert (= y$4257 (= y$prop y$4256)))
(assert (= y$4370 (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$61 y$63 y$65 y$67 y$69 y$72 y$74 y$76 y$78 y$80 y$83 y$85 y$87 y$89 y$91 y$93 y$95 y$97 y$99 y$101 y$103 y$4362 y$4257)))
(assert y$4370)
(check-sat)
(exit)
