(set-info :smt-lib-version 2.6)
(set-logic QF_IDL)
(set-info :source |The Averest Framework (http://www.averest.org)|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun cvclZero () Int)
(declare-fun F0 () Int)
(declare-fun F2 () Int)
(declare-fun F4 () Int)
(declare-fun F6 () Int)
(declare-fun F8 () Int)
(declare-fun F14 () Int)
(declare-fun F16 () Int)
(declare-fun F18 () Int)
(declare-fun F20 () Int)
(declare-fun F22 () Int)
(declare-fun F36 () Int)
(declare-fun F37 () Int)
(declare-fun F38 () Int)
(declare-fun F39 () Int)
(declare-fun F40 () Int)
(declare-fun F43 () Int)
(declare-fun F44 () Int)
(declare-fun F45 () Int)
(declare-fun F46 () Int)
(declare-fun F47 () Int)
(declare-fun F74 () Int)
(declare-fun F75 () Int)
(declare-fun F76 () Int)
(declare-fun F77 () Int)
(declare-fun F78 () Int)
(declare-fun F85 () Int)
(declare-fun F86 () Int)
(declare-fun F87 () Int)
(declare-fun F88 () Int)
(declare-fun F89 () Int)
(declare-fun F92 () Int)
(declare-fun F93 () Int)
(declare-fun F94 () Int)
(declare-fun F95 () Int)
(declare-fun F96 () Int)
(declare-fun P10 () Bool)
(declare-fun P12 () Bool)
(declare-fun P24 () Bool)
(declare-fun P26 () Bool)
(declare-fun P28 () Bool)
(declare-fun P30 () Bool)
(declare-fun P32 () Bool)
(declare-fun P34 () Bool)
(declare-fun P41 () Bool)
(declare-fun P42 () Bool)
(declare-fun P48 () Bool)
(declare-fun P49 () Bool)
(declare-fun P50 () Bool)
(declare-fun P51 () Bool)
(declare-fun P52 () Bool)
(declare-fun P53 () Bool)
(declare-fun P72 () Bool)
(declare-fun P73 () Bool)
(declare-fun P79 () Bool)
(declare-fun P80 () Bool)
(declare-fun P81 () Bool)
(declare-fun P82 () Bool)
(declare-fun P83 () Bool)
(declare-fun P84 () Bool)
(declare-fun P90 () Bool)
(declare-fun P91 () Bool)
(declare-fun P97 () Bool)
(declare-fun P98 () Bool)
(declare-fun P99 () Bool)
(declare-fun P100 () Bool)
(declare-fun P101 () Bool)
(declare-fun P102 () Bool)
(assert (let ((?v_1 (not P72))) (let ((?v_0 (or (and P81 P72) ?v_1)) (?v_5 (and P79 P72)) (?v_2 (or (and P82 P72) ?v_1)) (?v_4 (and P80 P72))) (let ((?v_3 (= ?v_2 ?v_4)) (?v_7 (not ?v_4)) (?v_6 (not ?v_5))) (let ((?v_9 (and ?v_6 P72))) (let ((?v_19 (and ?v_7 ?v_9)) (?v_14 (and ?v_6 ?v_1))) (let ((?v_18 (and ?v_14 ?v_7)) (?v_10 (and ?v_5 P72))) (let ((?v_8 (and ?v_7 ?v_10)) (?v_11 (and ?v_1 ?v_5))) (let ((?v_17 (and ?v_7 ?v_11)) (?v_16 (and ?v_4 ?v_9)) (?v_13 (and ?v_4 ?v_10)) (?v_12 (and ?v_4 ?v_11)) (?v_15 (and ?v_14 ?v_4)) (?v_22 (not P90))) (let ((?v_20 (or ?v_22 (and P90 P100))) (?v_24 (and P90 P98))) (let ((?v_21 (= ?v_20 ?v_24))) (let ((?v_26 (not ?v_21)) (?v_23 (or (and P90 P99) ?v_22)) (?v_25 (and P90 P97))) (let ((?v_27 (not (= ?v_23 ?v_25)))) (let ((?v_32 (and P91 (or (and ?v_20 ?v_26) (and ?v_21 (and ?v_23 ?v_27)))))) (let ((?v_35 (not ?v_32)) (?v_29 (and ?v_23 ?v_25))) (let ((?v_28 (or (and ?v_20 ?v_24) (and ?v_29 ?v_26))) (?v_30 (not (= ?v_29 ?v_26)))) (let ((?v_31 (not ?v_28))) (let ((?v_33 (or (and (or (and ?v_28 ?v_27) (and ?v_28 (not (= ?v_28 ?v_27)))) (not (= ?v_30 ?v_31))) (and ?v_30 ?v_31)))) (let ((?v_34 (or (and (or (and ?v_35 P101) (and ?v_33 ?v_32)) P90) (and ?v_33 ?v_22)))) (let ((?v_41 (not ?v_34))) (let ((?v_37 (and ?v_41 ?v_22)) (?v_38 (or (and (or (and ?v_35 P102) (and ?v_28 ?v_32)) P90) (and ?v_28 ?v_22)))) (let ((?v_36 (not ?v_38))) (let ((?v_42 (and ?v_37 ?v_36)) (?v_39 (and ?v_34 P90))) (let ((?v_43 (and ?v_39 ?v_36)) (?v_40 (and ?v_34 ?v_22))) (let ((?v_44 (and ?v_40 ?v_36)) (?v_46 (and ?v_37 ?v_38)) (?v_47 (and ?v_39 ?v_38)) (?v_48 (and ?v_40 ?v_38)) (?v_45 (and ?v_41 P90))) (let ((?v_50 (and ?v_45 ?v_36)) (?v_49 (and ?v_45 ?v_38)) (?v_57 (not (= ?v_34 ?v_38))) (?v_70 (not P41)) (?v_77 (and P41 P48))) (let ((?v_76 (or ?v_70 (and P41 P50)))) (let ((?v_79 (and ?v_77 ?v_76)) (?v_71 (and P41 P49)) (?v_72 (or ?v_70 (and P41 P51)))) (let ((?v_75 (= ?v_71 ?v_72))) (let ((?v_74 (not ?v_75))) (let ((?v_73 (or (and ?v_79 ?v_74) (and ?v_71 ?v_72))) (?v_80 (not (= ?v_77 ?v_76)))) (let ((?v_78 (and P42 (or (and ?v_72 ?v_74) (and ?v_75 (and ?v_76 ?v_80)))))) (let ((?v_84 (not ?v_78))) (let ((?v_86 (or (and ?v_70 ?v_73) (and P41 (or (and ?v_73 ?v_78) (and P53 ?v_84))))) (?v_81 (not ?v_73)) (?v_82 (not (= ?v_79 ?v_74)))) (let ((?v_83 (or (and (not (= ?v_81 ?v_82)) (or (and ?v_73 (not (= ?v_73 ?v_80))) (and ?v_73 ?v_80))) (and ?v_81 ?v_82)))) (let ((?v_85 (or (and ?v_70 ?v_83) (and P41 (or (and ?v_78 ?v_83) (and P52 ?v_84)))))) (let ((?v_91 (not ?v_85))) (let ((?v_93 (and P41 ?v_91)) (?v_94 (not ?v_86))) (let ((?v_100 (and ?v_93 ?v_94)) (?v_97 (and P41 ?v_85))) (let ((?v_90 (and ?v_86 ?v_97)) (?v_95 (and ?v_70 ?v_85))) (let ((?v_101 (and ?v_86 ?v_95)) (?v_98 (and ?v_70 ?v_91))) (let ((?v_102 (and ?v_98 ?v_86)) (?v_103 (and ?v_93 ?v_86)) (?v_105 (and ?v_94 ?v_95)) (?v_106 (and ?v_94 ?v_97)) (?v_108 (and ?v_98 ?v_94)) (?v_114 (not (= ?v_86 ?v_85))) (?v_120 (not P10))) (let ((?v_122 (or ?v_120 (and P10 P30))) (?v_124 (and P10 P26))) (let ((?v_123 (= ?v_122 ?v_124)) (?v_121 (or ?v_120 (and P10 P28))) (?v_125 (and P10 P24)) (?v_128 (not ?v_124))) (let ((?v_129 (not ?v_125))) (let ((?v_132 (and P10 ?v_129))) (let ((?v_126 (and ?v_128 ?v_132)) (?v_134 (and ?v_120 ?v_129))) (let ((?v_143 (and ?v_128 ?v_134)) (?v_139 (and ?v_120 ?v_125))) (let ((?v_131 (and ?v_128 ?v_139)) (?v_133 (and ?v_124 ?v_132)) (?v_136 (and ?v_124 ?v_134)) (?v_141 (and P10 ?v_125))) (let ((?v_137 (and ?v_124 ?v_141)) (?v_140 (and ?v_124 ?v_139)) (?v_142 (and ?v_128 ?v_141)) (?v_130 (= (- F6 F0) 0)) (?v_138 (= (- F2 F0) 0)) (?v_135 (= (- F4 F0) 0)) (?v_127 (= (- F8 F0) 0)) (?v_63 (- F96 F94)) (?v_66 (- F96 F92)) (?v_69 (- F89 F85)) (?v_62 (- F88 F85)) (?v_64 (- F87 F85)) (?v_67 (- F86 F85)) (?v_65 (- F96 F93)) (?v_68 (- F96 F95))) (let ((?v_52 (or (or (and (and ?v_42 P90) (> (- F96 F89) 0)) (or (and (and ?v_43 P90) (> ?v_63 0)) (or (and (> (- F96 F88) 0) (and ?v_44 P90)) (or (or (and (and ?v_46 P90) (> (- F96 F87) 0)) (or (and (> ?v_66 0) (and ?v_47 P90)) (or (and (> (- F96 F86) 0) (and ?v_48 P90)) (or (and (< (- F95 F85) 0) (and ?v_50 ?v_22)) (or (and (< ?v_69 0) (and ?v_42 ?v_22)) (or (and (< (- F94 F85) 0) (and ?v_43 ?v_22)) (or (and (< ?v_62 0) (and ?v_44 ?v_22)) (or (and (and ?v_49 ?v_22) (< (- F93 F85) 0)) (or (and (and ?v_46 ?v_22) (< ?v_64 0)) (or (and (< (- F92 F85) 0) (and ?v_47 ?v_22)) (and (< ?v_67 0) (and ?v_48 ?v_22)))))))))))) (and (> ?v_65 0) (and ?v_49 P90)))))) (and (> ?v_68 0) (and ?v_50 P90))))) (let ((?v_51 (and ?v_52 ?v_32))) (let ((?v_61 (not ?v_51)) (?v_53 (and ?v_52 ?v_22))) (let ((?v_60 (not ?v_53)) (?v_55 (not ?v_52))) (let ((?v_54 (and ?v_55 ?v_22))) (let ((?v_58 (not ?v_54)) (?v_56 (and ?v_55 ?v_32))) (let ((?v_59 (not ?v_56)) (?v_87 (- F47 F46)) (?v_88 (- F47 F43)) (?v_89 (- F37 F36)) (?v_92 (- F38 F36)) (?v_96 (- F39 F36)) (?v_99 (- F40 F36)) (?v_104 (- F47 F44)) (?v_107 (- F47 F45))) (let ((?v_109 (or (and (and ?v_100 P41) (> ?v_87 0)) (or (or (or (or (or (or (and (and P41 ?v_90) (> ?v_88 0)) (or (or (or (or (or (or (or (or (and (< ?v_89 0) (and ?v_70 ?v_101)) (and (and ?v_70 ?v_90) (< (- F43 F36) 0))) (and (and ?v_70 ?v_102) (< ?v_92 0))) (and (and ?v_70 ?v_103) (< (- F44 F36) 0))) (and (and ?v_70 ?v_105) (< ?v_96 0))) (and (and ?v_70 ?v_106) (< (- F45 F36) 0))) (and (and ?v_108 ?v_70) (< ?v_99 0))) (and (and ?v_100 ?v_70) (< (- F46 F36) 0))) (and (and P41 ?v_101) (> (- F47 F37) 0)))) (and (and P41 ?v_102) (> (- F47 F38) 0))) (and (and P41 ?v_103) (> ?v_104 0))) (and (and P41 ?v_105) (> (- F47 F39) 0))) (and (and P41 ?v_106) (> ?v_107 0))) (and (and ?v_108 P41) (> (- F47 F40) 0)))))) (let ((?v_111 (and ?v_109 ?v_70)) (?v_110 (and ?v_109 ?v_78))) (let ((?v_113 (not ?v_110)) (?v_112 (not ?v_111)) (?v_115 (not ?v_109))) (let ((?v_117 (and ?v_70 ?v_115)) (?v_116 (and ?v_78 ?v_115))) (let ((?v_119 (not ?v_116)) (?v_118 (not ?v_117)) (?v_147 (= (- F22 F20) 0)) (?v_145 (= (- F22 F16) 0)) (?v_144 (= (- F22 F14) 0)) (?v_146 (= (- F22 F18) 0))) (or (and (not (or (or (not (and (not (or (and (and (not (= ?v_0 ?v_5)) ?v_0) ?v_3) (and ?v_2 (not ?v_3)))) P73)) (or (or (and (= (- F77 F0) 0) (and ?v_1 ?v_19)) (or (and (= (- F78 F8) 0) (and ?v_18 P72)) (or (or (and (= (- F78 F76) 0) (and ?v_8 P72)) (or (and (and ?v_1 ?v_8) (= (- F76 F0) 0)) (or (or (and ?v_130 (and ?v_1 ?v_17)) (or (or (and (and ?v_1 ?v_16) (= (- F75 F0) 0)) (or (or (or (or (and (= (- F74 F0) 0) (and ?v_1 ?v_13)) (or (and (= (- F78 F2) 0) (and ?v_12 P72)) (and ?v_138 (and ?v_1 ?v_12)))) (and (and ?v_13 P72) (= (- F78 F74) 0))) (and ?v_135 (and ?v_1 ?v_15))) (and (and ?v_15 P72) (= (- F78 F4) 0)))) (and (and ?v_16 P72) (= (- F78 F75) 0)))) (and (and ?v_17 P72) (= (- F78 F6) 0))))) (and ?v_127 (and ?v_1 ?v_18))))) (and (and ?v_19 P72) (= (- F78 F77) 0)))) (not (and (and (and (= ?v_34 P83) (and (and (= (or (and (or (and ?v_61 ?v_23) (and ?v_34 ?v_51)) ?v_60) (and ?v_34 ?v_53)) P81) (and (= (or (and ?v_54 ?v_57) (and ?v_58 (or (and ?v_59 ?v_24) (and ?v_56 ?v_57)))) P80) (and (and (and (or (and (= (- F95 F77) 0) P90) (and (= (- F89 F77) 0) ?v_22)) (and (and (or (and (= (- F87 F75) 0) ?v_22) (and (= (- F93 F75) 0) P90)) (and (and (= (or ?v_22 ?v_32) P73) P72) (or (and (= (- F92 F74) 0) P90) (and (= (- F86 F74) 0) ?v_22)))) (or (and (= (- F88 F76) 0) ?v_22) (and (= (- F94 F76) 0) P90)))) (or (and (= (- F96 F78) 0) P90) (and (= (- F85 F78) 0) ?v_22))) (= P79 (or (and ?v_58 (or (and ?v_41 ?v_56) (and ?v_59 ?v_25))) (and ?v_41 ?v_54)))))) (= (or (and ?v_38 ?v_53) (and ?v_60 (or (and ?v_38 ?v_51) (and ?v_61 ?v_20)))) P82))) (= ?v_38 P84)) (and (and (not P102) (and (and (not P100) (and (and (and (and (= (- cvclZero F96) 0) (and (= (- cvclZero F95) 0) (and (= (- cvclZero F94) 0) (and (and (= (- cvclZero F92) 0) (and (not P91) ?v_22)) (= (- cvclZero F93) 0))))) (not P97)) (not P98)) (not P99))) (not P101))) (and (or (or (or (and (= ?v_62 0) ?v_22) (and (= ?v_63 0) P90)) (or (or (and (= ?v_64 0) ?v_22) (and (= ?v_65 0) P90)) (or (and (= ?v_66 0) P90) (and (= ?v_67 0) ?v_22)))) (or (and (= ?v_68 0) P90) (and (= ?v_69 0) ?v_22))) (and (and (or (and (<= (- F94 F93) 0) P90) (and (<= (- F88 F87) 0) ?v_22)) (or (and (<= (- F93 F92) 0) P90) (and (<= (- F87 F86) 0) ?v_22))) (or (and (<= (- F89 F88) 0) ?v_22) (and (<= (- F95 F94) 0) P90))))))))) (and (and (and (and (or (and (<= (- F46 F45) 0) P41) (and (<= (- F40 F39) 0) ?v_70)) (and (or (and P41 (<= (- F44 F43) 0)) (and ?v_70 (<= (- F38 F37) 0))) (or (and P41 (<= (- F45 F44) 0)) (and ?v_70 (<= (- F39 F38) 0))))) (or (or (and P41 (= ?v_87 0)) (and ?v_70 (= ?v_99 0))) (or (or (and ?v_70 (= ?v_96 0)) (and P41 (= ?v_107 0))) (or (or (and ?v_70 (= ?v_92 0)) (and P41 (= ?v_104 0))) (or (and ?v_70 (= ?v_89 0)) (and P41 (= ?v_88 0))))))) (and (not P53) (and (not P52) (and (not P51) (and (not P50) (and (not P49) (and (not P48) (and (and (and (and (= (- cvclZero F44) 0) (and (and ?v_70 (not P42)) (= (- cvclZero F43) 0))) (= (- cvclZero F45) 0)) (= (- cvclZero F46) 0)) (= (- cvclZero F47) 0))))))))) (and (= P34 ?v_86) (and (= P32 ?v_85) (and (= P30 (or (and ?v_111 ?v_86) (and (or (and ?v_113 ?v_72) (and ?v_110 ?v_86)) ?v_112))) (and (= P28 (or (and ?v_111 ?v_85) (and ?v_112 (or (and ?v_113 ?v_76) (and ?v_110 ?v_85))))) (and (= P26 (or (and ?v_114 ?v_117) (and (or (and ?v_114 ?v_116) (and ?v_71 ?v_119)) ?v_118))) (and (= P24 (or (and ?v_91 ?v_117) (and ?v_118 (or (and ?v_77 ?v_119) (and ?v_91 ?v_116))))) (and (or (and ?v_70 (= (- F36 F22) 0)) (and P41 (= (- F47 F22) 0))) (and (or (and P41 (= (- F46 F20) 0)) (and ?v_70 (= (- F40 F20) 0))) (and (or (and P41 (= (- F45 F18) 0)) (and ?v_70 (= (- F39 F18) 0))) (and (or (and P41 (= (- F44 F16) 0)) (and ?v_70 (= (- F38 F16) 0))) (and (or (and P41 (= (- F43 F14) 0)) (and ?v_70 (= (- F37 F14) 0))) (and P10 (= P12 (or ?v_70 ?v_78)))))))))))))))) (not (or (or (not (and P12 (not (or (and ?v_123 (and ?v_121 (not (= ?v_121 ?v_125)))) (and ?v_122 (not ?v_123)))))) (or (and ?v_147 (and P10 ?v_126)) (or (and (= (- F20 F0) 0) (and ?v_120 ?v_126)) (or (or (and ?v_127 (and ?v_120 ?v_143)) (or (or (or (and (= (- F22 F6) 0) (and P10 ?v_131)) (or (and ?v_130 (and ?v_120 ?v_131)) (or (and ?v_145 (and P10 ?v_133)) (or (and (= (- F16 F0) 0) (and ?v_120 ?v_133)) (or (and (= (- F22 F4) 0) (and P10 ?v_136)) (or (and ?v_135 (and ?v_120 ?v_136)) (or (and ?v_144 (and P10 ?v_137)) (or (and (= (- F14 F0) 0) (and ?v_120 ?v_137)) (or (and ?v_138 (and ?v_120 ?v_140)) (and (= (- F22 F2) 0) (and P10 ?v_140))))))))))) (and (= (- F18 F0) 0) (and ?v_120 ?v_142))) (and ?v_146 (and P10 ?v_142)))) (and (= (- F22 F8) 0) (and P10 ?v_143)))))) (not (and (and (and (and (and (and (and (and (= (- cvclZero F22) 0) (and (= (- cvclZero F20) 0) (and (= (- cvclZero F18) 0) (and (and (= (- cvclZero F14) 0) (and ?v_120 (not P12))) (= (- cvclZero F16) 0))))) (not P24)) (not P26)) (not P28)) (not P30)) (not P32)) (not P34)) (and (or (or (or (or (and P10 ?v_144) (and ?v_120 ?v_138)) (or (and P10 ?v_145) (and ?v_120 ?v_135))) (or (and P10 ?v_146) (and ?v_120 ?v_130))) (or (and ?v_120 ?v_127) (and P10 ?v_147))) (and (and (or (and ?v_120 (<= (- F6 F4) 0)) (and P10 (<= (- F18 F16) 0))) (or (and ?v_120 (<= (- F4 F2) 0)) (and P10 (<= (- F16 F14) 0)))) (or (and ?v_120 (<= (- F8 F6) 0)) (and P10 (<= (- F20 F18) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
