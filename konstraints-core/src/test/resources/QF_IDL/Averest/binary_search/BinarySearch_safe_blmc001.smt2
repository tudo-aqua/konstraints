(set-info :smt-lib-version 2.6)
(set-logic QF_IDL)
(set-info :source |The Averest Framework (http://www.averest.org)|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun cvclZero () Int)
(declare-fun F0 () Int)
(declare-fun F2 () Int)
(declare-fun F4 () Int)
(declare-fun F6 () Int)
(declare-fun F8 () Int)
(declare-fun F14 () Int)
(declare-fun F16 () Int)
(declare-fun F18 () Int)
(declare-fun F20 () Int)
(declare-fun F22 () Int)
(declare-fun F36 () Int)
(declare-fun F37 () Int)
(declare-fun F38 () Int)
(declare-fun F39 () Int)
(declare-fun F40 () Int)
(declare-fun F43 () Int)
(declare-fun F44 () Int)
(declare-fun F45 () Int)
(declare-fun F46 () Int)
(declare-fun F47 () Int)
(declare-fun F54 () Int)
(declare-fun F55 () Int)
(declare-fun F56 () Int)
(declare-fun F57 () Int)
(declare-fun F58 () Int)
(declare-fun F61 () Int)
(declare-fun F62 () Int)
(declare-fun F63 () Int)
(declare-fun F64 () Int)
(declare-fun F65 () Int)
(declare-fun F105 () Int)
(declare-fun F106 () Int)
(declare-fun F107 () Int)
(declare-fun F108 () Int)
(declare-fun F109 () Int)
(declare-fun F116 () Int)
(declare-fun F117 () Int)
(declare-fun F118 () Int)
(declare-fun F119 () Int)
(declare-fun F120 () Int)
(declare-fun F123 () Int)
(declare-fun F124 () Int)
(declare-fun F125 () Int)
(declare-fun F126 () Int)
(declare-fun F127 () Int)
(declare-fun P10 () Bool)
(declare-fun P12 () Bool)
(declare-fun P24 () Bool)
(declare-fun P26 () Bool)
(declare-fun P28 () Bool)
(declare-fun P30 () Bool)
(declare-fun P32 () Bool)
(declare-fun P34 () Bool)
(declare-fun P41 () Bool)
(declare-fun P42 () Bool)
(declare-fun P48 () Bool)
(declare-fun P49 () Bool)
(declare-fun P50 () Bool)
(declare-fun P51 () Bool)
(declare-fun P52 () Bool)
(declare-fun P53 () Bool)
(declare-fun P59 () Bool)
(declare-fun P60 () Bool)
(declare-fun P66 () Bool)
(declare-fun P67 () Bool)
(declare-fun P68 () Bool)
(declare-fun P69 () Bool)
(declare-fun P70 () Bool)
(declare-fun P71 () Bool)
(declare-fun P103 () Bool)
(declare-fun P104 () Bool)
(declare-fun P110 () Bool)
(declare-fun P111 () Bool)
(declare-fun P112 () Bool)
(declare-fun P113 () Bool)
(declare-fun P114 () Bool)
(declare-fun P115 () Bool)
(declare-fun P121 () Bool)
(declare-fun P122 () Bool)
(declare-fun P128 () Bool)
(declare-fun P129 () Bool)
(declare-fun P130 () Bool)
(declare-fun P131 () Bool)
(declare-fun P132 () Bool)
(declare-fun P133 () Bool)
(assert (let ((?v_0 (not P10))) (let ((?v_2 (or ?v_0 (and P10 P30))) (?v_4 (and P10 P26))) (let ((?v_3 (= ?v_2 ?v_4)) (?v_1 (or ?v_0 (and P10 P28))) (?v_5 (and P10 P24)) (?v_7 (not ?v_4))) (let ((?v_8 (not ?v_5))) (let ((?v_10 (and P10 ?v_8))) (let ((?v_6 (and ?v_7 ?v_10)) (?v_12 (and ?v_0 ?v_8))) (let ((?v_19 (and ?v_7 ?v_12)) (?v_15 (and ?v_0 ?v_5))) (let ((?v_9 (and ?v_7 ?v_15)) (?v_11 (and ?v_4 ?v_10)) (?v_13 (and ?v_4 ?v_12)) (?v_17 (and P10 ?v_5))) (let ((?v_14 (and ?v_4 ?v_17)) (?v_16 (and ?v_4 ?v_15)) (?v_18 (and ?v_7 ?v_17)) (?v_28 (not P41)) (?v_35 (and P41 P48))) (let ((?v_34 (or ?v_28 (and P41 P50)))) (let ((?v_37 (and ?v_35 ?v_34)) (?v_29 (and P41 P49)) (?v_30 (or ?v_28 (and P41 P51)))) (let ((?v_33 (= ?v_29 ?v_30))) (let ((?v_32 (not ?v_33))) (let ((?v_31 (or (and ?v_37 ?v_32) (and ?v_29 ?v_30))) (?v_38 (not (= ?v_35 ?v_34)))) (let ((?v_36 (and P42 (or (and ?v_30 ?v_32) (and ?v_33 (and ?v_34 ?v_38)))))) (let ((?v_42 (not ?v_36))) (let ((?v_44 (or (and ?v_28 ?v_31) (and P41 (or (and ?v_31 ?v_36) (and P53 ?v_42))))) (?v_39 (not ?v_31)) (?v_40 (not (= ?v_37 ?v_32)))) (let ((?v_41 (or (and (not (= ?v_39 ?v_40)) (or (and ?v_31 (not (= ?v_31 ?v_38))) (and ?v_31 ?v_38))) (and ?v_39 ?v_40)))) (let ((?v_43 (or (and ?v_28 ?v_41) (and P41 (or (and ?v_36 ?v_41) (and P52 ?v_42)))))) (let ((?v_49 (not ?v_43))) (let ((?v_51 (and P41 ?v_49)) (?v_52 (not ?v_44))) (let ((?v_58 (and ?v_51 ?v_52)) (?v_55 (and P41 ?v_43))) (let ((?v_48 (and ?v_44 ?v_55)) (?v_53 (and ?v_28 ?v_43))) (let ((?v_59 (and ?v_44 ?v_53)) (?v_56 (and ?v_28 ?v_49))) (let ((?v_60 (and ?v_56 ?v_44)) (?v_61 (and ?v_51 ?v_44)) (?v_63 (and ?v_52 ?v_53)) (?v_64 (and ?v_52 ?v_55)) (?v_66 (and ?v_56 ?v_52)) (?v_72 (not (= ?v_44 ?v_43))) (?v_79 (not P59))) (let ((?v_78 (or ?v_79 (and P69 P59))) (?v_84 (and P59 P67))) (let ((?v_81 (= ?v_78 ?v_84))) (let ((?v_82 (not ?v_81)) (?v_80 (or ?v_79 (and P59 P68))) (?v_83 (and P59 P66))) (let ((?v_87 (not (= ?v_80 ?v_83)))) (let ((?v_90 (and (or (and ?v_82 ?v_78) (and (and ?v_80 ?v_87) ?v_81)) P60))) (let ((?v_92 (not ?v_90)) (?v_85 (and ?v_80 ?v_83))) (let ((?v_86 (or (and ?v_82 ?v_85) (and ?v_78 ?v_84)))) (let ((?v_88 (not ?v_86)) (?v_89 (not (= ?v_82 ?v_85)))) (let ((?v_91 (or (and ?v_88 ?v_89) (and (or (and ?v_86 ?v_87) (and ?v_86 (not (= ?v_86 ?v_87)))) (not (= ?v_88 ?v_89)))))) (let ((?v_93 (or (and (or (and ?v_92 P70) (and ?v_91 ?v_90)) P59) (and ?v_79 ?v_91))) (?v_94 (or (and ?v_86 ?v_79) (and (or (and ?v_92 P71) (and ?v_86 ?v_90)) P59)))) (let ((?v_95 (not ?v_93))) (let ((?v_99 (and ?v_79 ?v_95))) (let ((?v_103 (and ?v_94 ?v_99)) (?v_98 (and ?v_93 P59))) (let ((?v_102 (and ?v_94 ?v_98)) (?v_96 (and ?v_93 ?v_79))) (let ((?v_101 (and ?v_94 ?v_96)) (?v_100 (and P59 ?v_95))) (let ((?v_104 (and ?v_94 ?v_100)) (?v_97 (not ?v_94))) (let ((?v_105 (and ?v_97 ?v_96)) (?v_106 (and ?v_97 ?v_98)) (?v_107 (and ?v_97 ?v_99)) (?v_108 (and ?v_97 ?v_100)) (?v_115 (not (= ?v_94 ?v_93))) (?v_121 (not P121))) (let ((?v_120 (or (and P130 P121) ?v_121)) (?v_127 (and P121 P128))) (let ((?v_131 (not (= ?v_120 ?v_127))) (?v_122 (or ?v_121 (and P121 P131))) (?v_125 (and P121 P129))) (let ((?v_123 (= ?v_122 ?v_125))) (let ((?v_126 (not ?v_123))) (let ((?v_124 (and (or (and (and ?v_120 ?v_131) ?v_123) (and ?v_122 ?v_126)) P122))) (let ((?v_129 (not ?v_124)) (?v_130 (and ?v_120 ?v_127))) (let ((?v_128 (or (and ?v_122 ?v_125) (and ?v_126 ?v_130)))) (let ((?v_135 (or (and P121 (or (and ?v_129 P133) (and ?v_124 ?v_128))) (and ?v_121 ?v_128))) (?v_132 (not (= ?v_126 ?v_130))) (?v_133 (not ?v_128))) (let ((?v_134 (or (and ?v_132 ?v_133) (and (or (and ?v_131 ?v_128) (and ?v_128 (not (= ?v_131 ?v_128)))) (not (= ?v_132 ?v_133)))))) (let ((?v_136 (or (and P121 (or (and ?v_129 P132) (and ?v_124 ?v_134))) (and ?v_121 ?v_134))) (?v_137 (not ?v_135))) (let ((?v_138 (not ?v_136))) (let ((?v_139 (and ?v_138 ?v_121))) (let ((?v_142 (and ?v_137 ?v_139)) (?v_147 (and P121 ?v_136))) (let ((?v_143 (and ?v_137 ?v_147)) (?v_140 (and ?v_121 ?v_136))) (let ((?v_144 (and ?v_137 ?v_140)) (?v_141 (and ?v_138 P121))) (let ((?v_145 (and ?v_141 ?v_135)) (?v_146 (and ?v_139 ?v_135)) (?v_148 (and ?v_140 ?v_135)) (?v_150 (and ?v_137 ?v_141)) (?v_149 (and ?v_147 ?v_135)) (?v_157 (not (= ?v_135 ?v_136))) (?v_171 (or ?v_121 ?v_124)) (?v_177 (and P103 P110))) (let ((?v_186 (not ?v_177)) (?v_178 (not P103))) (let ((?v_184 (and ?v_186 ?v_178)) (?v_180 (and P103 P111))) (let ((?v_176 (not ?v_180))) (let ((?v_190 (and ?v_184 ?v_176)) (?v_182 (and P103 ?v_177))) (let ((?v_179 (and ?v_176 ?v_182)) (?v_188 (and ?v_177 ?v_178))) (let ((?v_181 (and ?v_180 ?v_188)) (?v_183 (and ?v_180 ?v_182)) (?v_185 (and ?v_184 ?v_180)) (?v_191 (and P103 ?v_186))) (let ((?v_187 (and ?v_180 ?v_191)) (?v_189 (and ?v_176 ?v_188)) (?v_192 (and ?v_176 ?v_191)) (?v_193 (or ?v_178 (and P103 P113)))) (let ((?v_194 (= ?v_180 ?v_193)) (?v_195 (or ?v_178 (and P103 P112))) (?v_27 (= (- F22 F20) 0)) (?v_26 (= (- F8 F0) 0)) (?v_25 (= (- F6 F0) 0)) (?v_22 (= (- F22 F16) 0)) (?v_23 (= (- F4 F0) 0)) (?v_20 (= (- F22 F14) 0)) (?v_21 (= (- F2 F0) 0)) (?v_24 (= (- F22 F18) 0)) (?v_45 (- F47 F46)) (?v_46 (- F47 F43)) (?v_47 (- F37 F36)) (?v_50 (- F38 F36)) (?v_54 (- F39 F36)) (?v_57 (- F40 F36)) (?v_62 (- F47 F44)) (?v_65 (- F47 F45))) (let ((?v_67 (or (and (and ?v_58 P41) (> ?v_45 0)) (or (or (or (or (or (or (and (and P41 ?v_48) (> ?v_46 0)) (or (or (or (or (or (or (or (or (and (< ?v_47 0) (and ?v_28 ?v_59)) (and (and ?v_28 ?v_48) (< (- F43 F36) 0))) (and (and ?v_28 ?v_60) (< ?v_50 0))) (and (and ?v_28 ?v_61) (< (- F44 F36) 0))) (and (and ?v_28 ?v_63) (< ?v_54 0))) (and (and ?v_28 ?v_64) (< (- F45 F36) 0))) (and (and ?v_66 ?v_28) (< ?v_57 0))) (and (and ?v_58 ?v_28) (< (- F46 F36) 0))) (and (and P41 ?v_59) (> (- F47 F37) 0)))) (and (and P41 ?v_60) (> (- F47 F38) 0))) (and (and P41 ?v_61) (> ?v_62 0))) (and (and P41 ?v_63) (> (- F47 F39) 0))) (and (and P41 ?v_64) (> ?v_65 0))) (and (and ?v_66 P41) (> (- F47 F40) 0)))))) (let ((?v_69 (and ?v_67 ?v_28)) (?v_68 (and ?v_67 ?v_36))) (let ((?v_71 (not ?v_68)) (?v_70 (not ?v_69)) (?v_73 (not ?v_67))) (let ((?v_75 (and ?v_28 ?v_73)) (?v_74 (and ?v_36 ?v_73))) (let ((?v_77 (not ?v_74)) (?v_76 (not ?v_75)) (?v_110 (or (or (or (or (or (or (or (or (or (or (or (or (or (or (and (< (- F56 F54) 0) (and ?v_79 ?v_103)) (or (and (< (- F61 F54) 0) (and ?v_79 ?v_102)) (and (< (- F55 F54) 0) (and ?v_79 ?v_101)))) (and (and ?v_79 ?v_104) (< (- F62 F54) 0))) (and (and ?v_79 ?v_105) (< (- F57 F54) 0))) (and (and ?v_79 ?v_106) (< (- F63 F54) 0))) (and (and ?v_79 ?v_107) (< (- F58 F54) 0))) (and (and ?v_79 ?v_108) (< (- F64 F54) 0))) (and (and P59 ?v_101) (> (- F65 F55) 0))) (and (and P59 ?v_102) (> (- F65 F61) 0))) (and (and P59 ?v_103) (> (- F65 F56) 0))) (and (and P59 ?v_104) (> (- F65 F62) 0))) (and (and P59 ?v_105) (> (- F65 F57) 0))) (and (and P59 ?v_106) (> (- F65 F63) 0))) (and (and P59 ?v_107) (> (- F65 F58) 0))) (and (and P59 ?v_108) (> (- F65 F64) 0))))) (let ((?v_109 (and ?v_79 ?v_110))) (let ((?v_119 (not ?v_109)) (?v_111 (and ?v_90 ?v_110))) (let ((?v_118 (not ?v_111)) (?v_113 (not ?v_110))) (let ((?v_112 (and ?v_90 ?v_113))) (let ((?v_116 (not ?v_112)) (?v_114 (and ?v_79 ?v_113))) (let ((?v_117 (not ?v_114)) (?v_166 (- F127 F125)) (?v_164 (- F127 F124)) (?v_168 (- F120 F116)) (?v_167 (- F119 F116)) (?v_165 (- F118 F116)) (?v_163 (- F117 F116)) (?v_162 (- F127 F123)) (?v_169 (- F127 F126))) (let ((?v_151 (or (or (and (> (- F127 F120) 0) (and ?v_142 P121)) (or (and (> ?v_166 0) (and ?v_143 P121)) (or (and (> (- F127 F119) 0) (and ?v_144 P121)) (or (and (> ?v_164 0) (and ?v_145 P121)) (or (and (> (- F127 F118) 0) (and ?v_146 P121)) (or (or (and (> (- F127 F117) 0) (and ?v_148 P121)) (or (and (< (- F126 F116) 0) (and ?v_121 ?v_150)) (or (and (< ?v_168 0) (and ?v_142 ?v_121)) (or (and (< (- F125 F116) 0) (and ?v_143 ?v_121)) (or (and (< ?v_167 0) (and ?v_144 ?v_121)) (or (and (< (- F124 F116) 0) (and ?v_145 ?v_121)) (or (and (< ?v_165 0) (and ?v_146 ?v_121)) (or (and (< (- F123 F116) 0) (and ?v_121 ?v_149)) (and (and ?v_148 ?v_121) (< ?v_163 0)))))))))) (and (> ?v_162 0) (and P121 ?v_149)))))))) (and (> ?v_169 0) (and P121 ?v_150))))) (let ((?v_153 (and ?v_121 ?v_151))) (let ((?v_160 (not ?v_153)) (?v_152 (and ?v_124 ?v_151))) (let ((?v_161 (not ?v_152))) (let ((?v_175 (or (and ?v_160 (or (and ?v_135 ?v_152) (and ?v_122 ?v_161))) (and ?v_135 ?v_153))) (?v_154 (not ?v_151))) (let ((?v_156 (and ?v_121 ?v_154))) (let ((?v_158 (not ?v_156)) (?v_155 (and ?v_124 ?v_154))) (let ((?v_159 (not ?v_155))) (let ((?v_173 (or (and ?v_158 (or (and ?v_125 ?v_159) (and ?v_155 ?v_157))) (and ?v_156 ?v_157))) (?v_172 (or (and ?v_158 (or (and ?v_138 ?v_155) (and ?v_127 ?v_159))) (and ?v_138 ?v_156))) (?v_174 (or (and ?v_160 (or (and ?v_136 ?v_152) (and ?v_120 ?v_161))) (and ?v_136 ?v_153))) (?v_170 (and (and (and (and (and (and (and (and (= (- cvclZero F127) 0) (and (= (- cvclZero F126) 0) (and (= (- cvclZero F125) 0) (and (and (= (- cvclZero F123) 0) (and ?v_121 (not P122))) (= (- cvclZero F124) 0))))) (not P128)) (not P129)) (not P130)) (not P131)) (not P132)) (not P133)) (and (or (or (or (or (and P121 (= ?v_162 0)) (and ?v_121 (= ?v_163 0))) (or (and P121 (= ?v_164 0)) (and ?v_121 (= ?v_165 0)))) (or (and P121 (= ?v_166 0)) (and ?v_121 (= ?v_167 0)))) (or (and ?v_121 (= ?v_168 0)) (and P121 (= ?v_169 0)))) (and (and (or (and ?v_121 (<= (- F119 F118) 0)) (and P121 (<= (- F125 F124) 0))) (or (and ?v_121 (<= (- F118 F117) 0)) (and P121 (<= (- F124 F123) 0)))) (or (and ?v_121 (<= (- F120 F119) 0)) (and P121 (<= (- F126 F125) 0)))))))) (not (and (or (or (not (and P12 (not (or (and ?v_3 (and ?v_1 (not (= ?v_1 ?v_5)))) (and ?v_2 (not ?v_3)))))) (or (and ?v_27 (and P10 ?v_6)) (or (and (= (- F20 F0) 0) (and ?v_0 ?v_6)) (or (or (and ?v_26 (and ?v_0 ?v_19)) (or (or (or (and (= (- F22 F6) 0) (and P10 ?v_9)) (or (and ?v_25 (and ?v_0 ?v_9)) (or (and ?v_22 (and P10 ?v_11)) (or (and (= (- F16 F0) 0) (and ?v_0 ?v_11)) (or (and (= (- F22 F4) 0) (and P10 ?v_13)) (or (and ?v_23 (and ?v_0 ?v_13)) (or (and ?v_20 (and P10 ?v_14)) (or (and (= (- F14 F0) 0) (and ?v_0 ?v_14)) (or (and ?v_21 (and ?v_0 ?v_16)) (and (= (- F22 F2) 0) (and P10 ?v_16))))))))))) (and (= (- F18 F0) 0) (and ?v_0 ?v_18))) (and ?v_24 (and P10 ?v_18)))) (and (= (- F22 F8) 0) (and P10 ?v_19)))))) (not (and (and (and (and (and (and (and (and (= (- cvclZero F22) 0) (and (= (- cvclZero F20) 0) (and (= (- cvclZero F18) 0) (and (and (= (- cvclZero F14) 0) (and ?v_0 (not P12))) (= (- cvclZero F16) 0))))) (not P24)) (not P26)) (not P28)) (not P30)) (not P32)) (not P34)) (and (or (or (or (or (and P10 ?v_20) (and ?v_0 ?v_21)) (or (and P10 ?v_22) (and ?v_0 ?v_23))) (or (and P10 ?v_24) (and ?v_0 ?v_25))) (or (and ?v_0 ?v_26) (and P10 ?v_27))) (and (and (or (and ?v_0 (<= (- F6 F4) 0)) (and P10 (<= (- F18 F16) 0))) (or (and ?v_0 (<= (- F4 F2) 0)) (and P10 (<= (- F16 F14) 0)))) (or (and ?v_0 (<= (- F8 F6) 0)) (and P10 (<= (- F20 F18) 0)))))))) (or (not (and (and (and (and (or (and (<= (- F46 F45) 0) P41) (and (<= (- F40 F39) 0) ?v_28)) (and (or (and P41 (<= (- F44 F43) 0)) (and ?v_28 (<= (- F38 F37) 0))) (or (and P41 (<= (- F45 F44) 0)) (and ?v_28 (<= (- F39 F38) 0))))) (or (or (and P41 (= ?v_45 0)) (and ?v_28 (= ?v_57 0))) (or (or (and ?v_28 (= ?v_54 0)) (and P41 (= ?v_65 0))) (or (or (and ?v_28 (= ?v_50 0)) (and P41 (= ?v_62 0))) (or (and ?v_28 (= ?v_47 0)) (and P41 (= ?v_46 0))))))) (and (not P53) (and (not P52) (and (not P51) (and (not P50) (and (not P49) (and (not P48) (and (and (and (and (= (- cvclZero F44) 0) (and (and ?v_28 (not P42)) (= (- cvclZero F43) 0))) (= (- cvclZero F45) 0)) (= (- cvclZero F46) 0)) (= (- cvclZero F47) 0))))))))) (and (= P34 ?v_44) (and (= P32 ?v_43) (and (= P30 (or (and ?v_69 ?v_44) (and (or (and ?v_71 ?v_30) (and ?v_68 ?v_44)) ?v_70))) (and (= P28 (or (and ?v_69 ?v_43) (and ?v_70 (or (and ?v_71 ?v_34) (and ?v_68 ?v_43))))) (and (= P26 (or (and ?v_72 ?v_75) (and (or (and ?v_72 ?v_74) (and ?v_29 ?v_77)) ?v_76))) (and (= P24 (or (and ?v_49 ?v_75) (and ?v_76 (or (and ?v_35 ?v_77) (and ?v_49 ?v_74))))) (and (or (and ?v_28 (= (- F36 F22) 0)) (and P41 (= (- F47 F22) 0))) (and (or (and P41 (= (- F46 F20) 0)) (and ?v_28 (= (- F40 F20) 0))) (and (or (and P41 (= (- F45 F18) 0)) (and ?v_28 (= (- F39 F18) 0))) (and (or (and P41 (= (- F44 F16) 0)) (and ?v_28 (= (- F38 F16) 0))) (and (or (and P41 (= (- F43 F14) 0)) (and ?v_28 (= (- F37 F14) 0))) (and P10 (= P12 (or ?v_28 ?v_36)))))))))))))))) (and (not (and (and (and (and (and (= (or (and ?v_93 ?v_109) (and ?v_119 (or (and ?v_80 ?v_118) (and ?v_93 ?v_111)))) P112) (and (and (and (and (and (and (and (or (and (= (- F105 F61) 0) P59) (and ?v_79 (= (- F105 F55) 0))) (and (= (or ?v_79 ?v_90) P104) P103)) (or (and ?v_79 (= (- F106 F56) 0)) (and P59 (= (- F106 F62) 0)))) (or (and ?v_79 (= (- F107 F57) 0)) (and P59 (= (- F107 F63) 0)))) (or (and ?v_79 (= (- F108 F58) 0)) (and P59 (= (- F108 F64) 0)))) (or (and P59 (= (- F109 F65) 0)) (and ?v_79 (= (- F109 F54) 0)))) (= (or (and (or (and ?v_112 ?v_95) (and ?v_83 ?v_116)) ?v_117) (and ?v_114 ?v_95)) P110)) (= (or (and ?v_115 ?v_114) (and (or (and ?v_115 ?v_112) (and ?v_84 ?v_116)) ?v_117)) P111))) (= (or (and ?v_94 ?v_109) (and (or (and ?v_78 ?v_118) (and ?v_94 ?v_111)) ?v_119)) P113)) (= ?v_93 P114)) (= ?v_94 P115)) (and (and (= P71 ?v_135) (and (= P70 ?v_136) (and (= P69 ?v_175) (and (and (= P67 ?v_173) (and (= P66 ?v_172) (and (or (and ?v_121 (= (- F116 F65) 0)) (and P121 (= (- F127 F65) 0))) (and (or (and P121 (= (- F126 F64) 0)) (and (= (- F120 F64) 0) ?v_121)) (and (or (and (= (- F125 F63) 0) P121) (and (= (- F119 F63) 0) ?v_121)) (and (or (and (= (- F124 F62) 0) P121) (and (= (- F118 F62) 0) ?v_121)) (and (or (and P121 (= (- F123 F61) 0)) (and ?v_121 (= (- F117 F61) 0))) (and P59 (= P60 ?v_171))))))))) (= P68 ?v_174))))) ?v_170))) (or (not (and ?v_170 (and (and (and (and (and (and (and (and (and (and (and (and P103 (= P104 ?v_171)) (or (and ?v_121 (= (- F117 F105) 0)) (and P121 (= (- F123 F105) 0)))) (or (and ?v_121 (= (- F118 F106) 0)) (and P121 (= (- F124 F106) 0)))) (or (and ?v_121 (= (- F119 F107) 0)) (and P121 (= (- F125 F107) 0)))) (or (and ?v_121 (= (- F120 F108) 0)) (and P121 (= (- F126 F108) 0)))) (or (and P121 (= (- F127 F109) 0)) (and ?v_121 (= (- F116 F109) 0)))) (= P110 ?v_172)) (= P111 ?v_173)) (= P112 ?v_174)) (= P113 ?v_175)) (= P114 ?v_136)) (= P115 ?v_135)))) (or (or (or (or (and (and P103 ?v_190) (= (- F109 F8) 0)) (or (or (and (and P103 ?v_179) (= (- F109 F107) 0)) (or (and (and ?v_178 ?v_179) (= (- F107 F0) 0)) (or (or (or (or (or (or (or (or (or (and (and P103 ?v_181) (= (- F109 F2) 0)) (and ?v_21 (and ?v_178 ?v_181))) (and (and ?v_178 ?v_183) (= (- F105 F0) 0))) (and (and P103 ?v_183) (= (- F109 F105) 0))) (and ?v_23 (and ?v_178 ?v_185))) (and (and P103 ?v_185) (= (- F109 F4) 0))) (and (and ?v_178 ?v_187) (= (- F106 F0) 0))) (and (and P103 ?v_187) (= (- F109 F106) 0))) (and ?v_25 (and ?v_178 ?v_189))) (and (and P103 ?v_189) (= (- F109 F6) 0))))) (and ?v_26 (and ?v_178 ?v_190)))) (and (and ?v_178 ?v_192) (= (- F108 F0) 0))) (and (and P103 ?v_192) (= (- F109 F108) 0))) (not (and P104 (not (or (and ?v_193 (not ?v_194)) (and ?v_194 (and ?v_195 (not (= ?v_177 ?v_195)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
