(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: leader_filters.7.prop1
query-maker: "Yices 2"
query-time: 0.185000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$8 0)
(declare-sort utt$32 0)
(declare-fun Add_32_32_32 (utt$32 utt$32 ) utt$32)
(declare-fun GrEq_1_32_32 (utt$32 utt$32 ) Bool)
(declare-fun y$1 () Bool)
(declare-fun y$101 () Bool)
(declare-fun y$103 () Bool)
(declare-fun y$105 () Bool)
(declare-fun y$107 () Bool)
(declare-fun y$109 () Bool)
(declare-fun y$11 () Bool)
(declare-fun y$111 () Bool)
(declare-fun y$113 () Bool)
(declare-fun y$115 () Bool)
(declare-fun y$117 () Bool)
(declare-fun y$119 () Bool)
(declare-fun y$121 () Bool)
(declare-fun y$124 () Bool)
(declare-fun y$126 () Bool)
(declare-fun y$128 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$130 () Bool)
(declare-fun y$132 () Bool)
(declare-fun y$134 () Bool)
(declare-fun y$136 () Bool)
(declare-fun y$138 () Bool)
(declare-fun y$140 () Bool)
(declare-fun y$142 () Bool)
(declare-fun y$144 () Bool)
(declare-fun y$146 () Bool)
(declare-fun y$148 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$150 () Bool)
(declare-fun y$152 () Bool)
(declare-fun y$154 () Bool)
(declare-fun y$156 () Bool)
(declare-fun y$158 () Bool)
(declare-fun y$160 () Bool)
(declare-fun y$162 () Bool)
(declare-fun y$164 () Bool)
(declare-fun y$166 () Bool)
(declare-fun y$168 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$170 () Bool)
(declare-fun y$19 () Bool)
(declare-fun y$21 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$25 () Bool)
(declare-fun y$27 () Bool)
(declare-fun y$29 () Bool)
(declare-fun y$3 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$33 () Bool)
(declare-fun y$35 () Bool)
(declare-fun y$37 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$4064 () Bool)
(declare-fun y$4067 () Bool)
(declare-fun y$4068 () Bool)
(declare-fun y$41 () Bool)
(declare-fun y$4135 () Bool)
(declare-fun y$4167 () Bool)
(declare-fun y$4181 () Bool)
(declare-fun y$4198 () Bool)
(declare-fun y$4199 () Bool)
(declare-fun y$4200 () Bool)
(declare-fun y$4201 () Bool)
(declare-fun y$4202 () Bool)
(declare-fun y$4203 () Bool)
(declare-fun y$4204 () Bool)
(declare-fun y$4213 () Bool)
(declare-fun y$43 () Bool)
(declare-fun y$45 () Bool)
(declare-fun y$47 () Bool)
(declare-fun y$49 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$51 () Bool)
(declare-fun y$53 () Bool)
(declare-fun y$55 () Bool)
(declare-fun y$57 () Bool)
(declare-fun y$59 () Bool)
(declare-fun y$61 () Bool)
(declare-fun y$63 () Bool)
(declare-fun y$65 () Bool)
(declare-fun y$67 () Bool)
(declare-fun y$69 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$71 () Bool)
(declare-fun y$73 () Bool)
(declare-fun y$75 () Bool)
(declare-fun y$77 () Bool)
(declare-fun y$79 () Bool)
(declare-fun y$81 () Bool)
(declare-fun y$83 () Bool)
(declare-fun y$85 () Bool)
(declare-fun y$87 () Bool)
(declare-fun y$89 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$91 () Bool)
(declare-fun y$93 () Bool)
(declare-fun y$95 () Bool)
(declare-fun y$97 () Bool)
(declare-fun y$99 () Bool)
(declare-fun y$a_elected_P_0 () Bool)
(declare-fun y$a_elected_P_0$next () Bool)
(declare-fun y$a_elected_P_1 () Bool)
(declare-fun y$a_elected_P_1$next () Bool)
(declare-fun y$a_elected_P_2 () Bool)
(declare-fun y$a_elected_P_3 () Bool)
(declare-fun y$a_elected_P_4 () Bool)
(declare-fun y$a_elected_P_5 () Bool)
(declare-fun y$a_p1_P_0 () Bool)
(declare-fun y$a_p1_P_1 () Bool)
(declare-fun y$a_p1_P_2 () Bool)
(declare-fun y$a_p1_P_3 () Bool)
(declare-fun y$a_p1_P_4 () Bool)
(declare-fun y$a_p1_P_5 () Bool)
(declare-fun y$a_p2_P_0 () Bool)
(declare-fun y$a_p2_P_1 () Bool)
(declare-fun y$a_p2_P_2 () Bool)
(declare-fun y$a_p2_P_3 () Bool)
(declare-fun y$a_p2_P_4 () Bool)
(declare-fun y$a_p2_P_5 () Bool)
(declare-fun y$a_p3_P_0 () Bool)
(declare-fun y$a_p3_P_1 () Bool)
(declare-fun y$a_p3_P_2 () Bool)
(declare-fun y$a_p3_P_3 () Bool)
(declare-fun y$a_p3_P_4 () Bool)
(declare-fun y$a_p3_P_5 () Bool)
(declare-fun y$a_p4_P_0 () Bool)
(declare-fun y$a_p4_P_1 () Bool)
(declare-fun y$a_p4_P_2 () Bool)
(declare-fun y$a_p4_P_3 () Bool)
(declare-fun y$a_p4_P_4 () Bool)
(declare-fun y$a_p4_P_5 () Bool)
(declare-fun y$a_p5_P_0 () Bool)
(declare-fun y$a_p5_P_1 () Bool)
(declare-fun y$a_p5_P_2 () Bool)
(declare-fun y$a_p5_P_3 () Bool)
(declare-fun y$a_p5_P_4 () Bool)
(declare-fun y$a_p5_P_5 () Bool)
(declare-fun y$a_p6_P_0 () Bool)
(declare-fun y$a_p6_P_1 () Bool)
(declare-fun y$a_p6_P_2 () Bool)
(declare-fun y$a_p6_P_3 () Bool)
(declare-fun y$a_p6_P_4 () Bool)
(declare-fun y$a_p6_P_5 () Bool)
(declare-fun y$a_p7_P_0 () Bool)
(declare-fun y$a_p7_P_1 () Bool)
(declare-fun y$a_p7_P_2 () Bool)
(declare-fun y$a_p7_P_3 () Bool)
(declare-fun y$a_p7_P_4 () Bool)
(declare-fun y$a_p7_P_5 () Bool)
(declare-fun y$a_p8_P_0 () Bool)
(declare-fun y$a_p8_P_1 () Bool)
(declare-fun y$a_p8_P_2 () Bool)
(declare-fun y$a_p8_P_3 () Bool)
(declare-fun y$a_p8_P_4 () Bool)
(declare-fun y$a_p8_P_5 () Bool)
(declare-fun y$a_p9_P_0 () Bool)
(declare-fun y$a_p9_P_1 () Bool)
(declare-fun y$a_p9_P_2 () Bool)
(declare-fun y$a_p9_P_3 () Bool)
(declare-fun y$a_p9_P_4 () Bool)
(declare-fun y$a_p9_P_5 () Bool)
(declare-fun y$dve_invalid () Bool)
(declare-fun y$id101 () Bool)
(declare-fun y$id101_op () Bool)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n0s8 () utt$8)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s8 () utt$8)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$n2s8 () utt$8)
(declare-fun y$n3s32 () utt$32)
(declare-fun y$n3s8 () utt$8)
(declare-fun y$n4s32 () utt$32)
(declare-fun y$n4s8 () utt$8)
(declare-fun y$n5s8 () utt$8)
(declare-fun y$prop () Bool)
(declare-fun y$v3_1517448500_88 () utt$32)
(declare-fun y$v3_1517448500_88$next () utt$32)
(declare-fun y$v3_1517448500_88$next_op () utt$32)
(declare-fun y$v3_1517448500_88_op () utt$32)
(declare-fun y$v3_1517448500_89 () utt$32)
(declare-fun y$v3_1517448500_89$next () utt$32)
(declare-fun y$v3_1517448500_89$next_op () utt$32)
(declare-fun y$v3_1517448500_89_op () utt$32)
(declare-fun y$v3_1517448500_90 () utt$32)
(declare-fun y$v3_1517448500_90$next () utt$32)
(declare-fun y$v3_1517448500_90$next_op () utt$32)
(declare-fun y$v3_1517448500_90_op () utt$32)
(declare-fun y$v3_1517448500_91 () utt$32)
(declare-fun y$v3_1517448500_91_op () utt$32)
(declare-fun y$v3_1517448500_92 () utt$32)
(declare-fun y$v3_1517448500_92_op () utt$32)
(declare-fun y$v3_1517448500_93 () utt$32)
(declare-fun y$v3_1517448500_93_op () utt$32)
(declare-fun y$v3_1517448500_94 () utt$32)
(declare-fun y$v3_1517448500_94_op () utt$32)
(declare-fun y$v3_1517448500_95 () utt$32)
(declare-fun y$v3_1517448500_95_op () utt$32)
(declare-fun y$v3_1517448500_96 () utt$32)
(declare-fun y$v3_1517448500_96_op () utt$32)
(declare-fun y$v3_1517448500_97 () utt$32)
(declare-fun y$v3_1517448500_97_op () utt$32)
(declare-fun y$v3_1517448500_98 () utt$32)
(declare-fun y$v3_1517448500_98_op () utt$32)
(declare-fun y$v3_1517448500_99 () Bool)
(declare-fun y$v3_1517448500_99_op () Bool)
(declare-fun y$v_b_0 () utt$8)
(declare-fun y$v_b_1 () utt$8)
(declare-fun y$v_b_2 () utt$8)
(declare-fun y$v_b_3 () utt$8)
(declare-fun y$v_b_4 () utt$8)
(declare-fun y$v_b_5 () utt$8)
(declare-fun y$v_c_0 () utt$8)
(declare-fun y$v_c_1 () utt$8)
(declare-fun y$v_c_2 () utt$8)
(declare-fun y$v_c_3 () utt$8)
(declare-fun y$v_c_4 () utt$8)
(declare-fun y$v_c_5 () utt$8)
(declare-fun y$v_curr_P_0 () utt$8)
(declare-fun y$v_curr_P_1 () utt$8)
(declare-fun y$v_curr_P_2 () utt$8)
(declare-fun y$v_curr_P_3 () utt$8)
(declare-fun y$v_curr_P_4 () utt$8)
(declare-fun y$v_curr_P_5 () utt$8)
(declare-fun y$v_turn_0 () utt$8)
(declare-fun y$v_turn_1 () utt$8)
(declare-fun y$v_turn_2 () utt$8)
(declare-fun y$v_turn_3 () utt$8)
(declare-fun y$v_turn_4 () utt$8)
(declare-fun y$v_turn_5 () utt$8)
(assert (distinct y$n0s8 y$n5s8 y$n4s8 y$n3s8 y$n2s8 y$n1s8))
(assert (distinct y$n1s32 y$n0s32 y$n2s32 y$n3s32 y$n4s32))
(assert (= y$a_elected_P_0 (not y$1)))
(assert (= y$a_elected_P_1 (not y$3)))
(assert (= y$a_elected_P_2 (not y$5)))
(assert (= y$a_elected_P_3 (not y$7)))
(assert (= y$a_elected_P_4 (not y$9)))
(assert (= y$a_elected_P_5 (not y$11)))
(assert (= y$a_p1_P_0 (not y$13)))
(assert (= y$a_p1_P_1 (not y$15)))
(assert (= y$a_p1_P_2 (not y$17)))
(assert (= y$a_p1_P_3 (not y$19)))
(assert (= y$a_p1_P_4 (not y$21)))
(assert (= y$a_p1_P_5 (not y$23)))
(assert (= y$a_p2_P_0 (not y$25)))
(assert (= y$a_p2_P_1 (not y$27)))
(assert (= y$a_p2_P_2 (not y$29)))
(assert (= y$a_p2_P_3 (not y$31)))
(assert (= y$a_p2_P_4 (not y$33)))
(assert (= y$a_p2_P_5 (not y$35)))
(assert (= y$a_p3_P_0 (not y$37)))
(assert (= y$a_p3_P_1 (not y$39)))
(assert (= y$a_p3_P_2 (not y$41)))
(assert (= y$a_p3_P_3 (not y$43)))
(assert (= y$a_p3_P_4 (not y$45)))
(assert (= y$a_p3_P_5 (not y$47)))
(assert (= y$a_p4_P_0 (not y$49)))
(assert (= y$a_p4_P_1 (not y$51)))
(assert (= y$a_p4_P_2 (not y$53)))
(assert (= y$a_p4_P_3 (not y$55)))
(assert (= y$a_p4_P_4 (not y$57)))
(assert (= y$a_p4_P_5 (not y$59)))
(assert (= y$a_p5_P_0 (not y$61)))
(assert (= y$a_p5_P_1 (not y$63)))
(assert (= y$a_p5_P_2 (not y$65)))
(assert (= y$a_p5_P_3 (not y$67)))
(assert (= y$a_p5_P_4 (not y$69)))
(assert (= y$a_p5_P_5 (not y$71)))
(assert (= y$a_p6_P_0 (not y$73)))
(assert (= y$a_p6_P_1 (not y$75)))
(assert (= y$a_p6_P_2 (not y$77)))
(assert (= y$a_p6_P_3 (not y$79)))
(assert (= y$a_p6_P_4 (not y$81)))
(assert (= y$a_p6_P_5 (not y$83)))
(assert (= y$a_p7_P_0 (not y$85)))
(assert (= y$a_p7_P_1 (not y$87)))
(assert (= y$a_p7_P_2 (not y$89)))
(assert (= y$a_p7_P_3 (not y$91)))
(assert (= y$a_p7_P_4 (not y$93)))
(assert (= y$a_p7_P_5 (not y$95)))
(assert (= y$a_p8_P_0 (not y$97)))
(assert (= y$a_p8_P_1 (not y$99)))
(assert (= y$a_p8_P_2 (not y$101)))
(assert (= y$a_p8_P_3 (not y$103)))
(assert (= y$a_p8_P_4 (not y$105)))
(assert (= y$a_p8_P_5 (not y$107)))
(assert (= y$a_p9_P_0 (not y$109)))
(assert (= y$a_p9_P_1 (not y$111)))
(assert (= y$a_p9_P_2 (not y$113)))
(assert (= y$a_p9_P_3 (not y$115)))
(assert (= y$a_p9_P_4 (not y$117)))
(assert (= y$a_p9_P_5 (not y$119)))
(assert (= y$dve_invalid (not y$121)))
(assert (= y$124 (= y$n0s8 y$v_b_0)))
(assert (= y$126 (= y$n0s8 y$v_b_1)))
(assert (= y$128 (= y$n0s8 y$v_b_2)))
(assert (= y$130 (= y$n0s8 y$v_b_3)))
(assert (= y$132 (= y$n0s8 y$v_b_4)))
(assert (= y$134 (= y$n0s8 y$v_b_5)))
(assert (= y$136 (= y$n0s8 y$v_c_0)))
(assert (= y$138 (= y$n0s8 y$v_c_1)))
(assert (= y$140 (= y$n0s8 y$v_c_2)))
(assert (= y$142 (= y$n0s8 y$v_c_3)))
(assert (= y$144 (= y$n0s8 y$v_c_4)))
(assert (= y$146 (= y$n0s8 y$v_c_5)))
(assert (= y$148 (= y$n0s8 y$v_curr_P_0)))
(assert (= y$150 (= y$n0s8 y$v_curr_P_1)))
(assert (= y$152 (= y$n0s8 y$v_curr_P_2)))
(assert (= y$154 (= y$n0s8 y$v_curr_P_3)))
(assert (= y$156 (= y$n0s8 y$v_curr_P_4)))
(assert (= y$158 (= y$n0s8 y$v_curr_P_5)))
(assert (= y$160 (= y$n0s8 y$v_turn_0)))
(assert (= y$162 (= y$n0s8 y$v_turn_1)))
(assert (= y$164 (= y$n0s8 y$v_turn_2)))
(assert (= y$166 (= y$n0s8 y$v_turn_3)))
(assert (= y$168 (= y$n0s8 y$v_turn_4)))
(assert (= y$170 (= y$n0s8 y$v_turn_5)))
(assert (= y$prop (not y$4135)))
(assert (= y$v3_1517448500_88_op (ite y$a_elected_P_0 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_89_op (ite y$a_elected_P_1 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_90_op (Add_32_32_32 y$v3_1517448500_88_op y$v3_1517448500_89_op)))
(assert (= y$v3_1517448500_91_op (ite y$a_elected_P_2 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_92_op (Add_32_32_32 y$v3_1517448500_90_op y$v3_1517448500_91_op)))
(assert (= y$v3_1517448500_93_op (ite y$a_elected_P_3 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_94_op (Add_32_32_32 y$v3_1517448500_92_op y$v3_1517448500_93_op)))
(assert (= y$v3_1517448500_95_op (ite y$a_elected_P_4 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_96_op (Add_32_32_32 y$v3_1517448500_94_op y$v3_1517448500_95_op)))
(assert (= y$v3_1517448500_97_op (ite y$a_elected_P_5 y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_98_op (Add_32_32_32 y$v3_1517448500_96_op y$v3_1517448500_97_op)))
(assert (= y$v3_1517448500_99_op (GrEq_1_32_32 y$n1s32 y$v3_1517448500_98_op)))
(assert (= y$v3_1517448500_99_op (not y$4064)))
(assert (= y$id101_op (and y$121 y$4064)))
(assert (= y$id101_op (not y$4067)))
(assert (= y$4068 (= y$prop y$4067)))
(assert (= y$a_elected_P_0$next (not y$4199)))
(assert (= y$a_elected_P_1$next (not y$4200)))
(assert (= y$v3_1517448500_88$next_op (ite y$a_elected_P_0$next y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_89$next_op (ite y$a_elected_P_1$next y$n1s32 y$n0s32)))
(assert (= y$v3_1517448500_90$next_op (Add_32_32_32 y$v3_1517448500_88$next_op y$v3_1517448500_89$next_op)))
(assert (= y$4201 (not (= y$n0s32 y$v3_1517448500_90$next_op))))
(assert (= y$4202 (and y$4199 y$4200 y$4201)))
(assert (= y$4202 (not y$4204)))
(assert (= y$4181 (not (= y$n0s32 y$v3_1517448500_90_op))))
(assert (= y$4198 (and y$1 y$3 y$4181)))
(assert (= y$4198 (not y$4203)))
(assert (= y$4213 (and y$1 y$3 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$19 y$21 y$23 y$25 y$27 y$29 y$31 y$33 y$35 y$37 y$39 y$41 y$43 y$45 y$47 y$49 y$51 y$53 y$55 y$57 y$59 y$61 y$63 y$65 y$67 y$69 y$71 y$73 y$75 y$77 y$79 y$81 y$83 y$85 y$87 y$89 y$91 y$93 y$95 y$97 y$99 y$101 y$103 y$105 y$107 y$109 y$111 y$113 y$115 y$117 y$119 y$121 y$124 y$126 y$128 y$130 y$132 y$134 y$136 y$138 y$140 y$142 y$144 y$146 y$148 y$150 y$152 y$154 y$156 y$158 y$160 y$162 y$164 y$166 y$168 y$170 y$4135 y$4068 y$4204 y$4203)))
(assert y$4213)
(check-sat)
(exit)
