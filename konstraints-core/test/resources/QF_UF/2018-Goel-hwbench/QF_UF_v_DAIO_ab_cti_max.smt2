(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: v_DAIO
query-maker: "Yices 2"
query-time: 2.850000 ms
query-class: abstract
query-category: oneshot
query-type: cti
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$2 0)
(declare-sort utt$4 0)
(declare-sort utt$7 0)
(declare-sort utt$9 0)
(declare-sort utt$19 0)
(declare-sort utt$20 0)
(declare-sort utt$23 0)
(declare-sort utt$25 0)
(declare-sort utt$28 0)
(declare-sort utt$30 0)
(declare-sort utt$31 0)
(declare-sort utt$32 0)
(declare-fun Add_32_32_32 (utt$32 utt$32 ) utt$32)
(declare-fun Concat_20_1_19 (Bool utt$19 ) utt$20)
(declare-fun Concat_32_1_31 (Bool utt$31 ) utt$32)
(declare-fun Concat_32_2_30 (utt$2 utt$30 ) utt$32)
(declare-fun Concat_32_4_28 (utt$4 utt$28 ) utt$32)
(declare-fun Concat_32_7_25 (utt$7 utt$25 ) utt$32)
(declare-fun Concat_32_9_23 (utt$9 utt$23 ) utt$32)
(declare-fun Extract_19_18_0_20 (utt$20 ) utt$19)
(declare-fun Extract_1_0_0_4 (utt$4 ) Bool)
(declare-fun Extract_1_1_1_4 (utt$4 ) Bool)
(declare-fun Extract_1_2_2_4 (utt$4 ) Bool)
(declare-fun Extract_1_3_3_4 (utt$4 ) Bool)
(declare-fun Extract_2_1_0_4 (utt$4 ) utt$2)
(declare-fun Extract_2_1_0_9 (utt$9 ) utt$2)
(declare-fun Extract_7_6_0_32 (utt$32 ) utt$7)
(declare-fun Extract_9_8_0_32 (utt$32 ) utt$9)
(declare-fun Le_1_32_32 (utt$32 utt$32 ) Bool)
(declare-fun y$11 () Bool)
(declare-fun y$113 () Bool)
(declare-fun y$116 () Bool)
(declare-fun y$118 () Bool)
(declare-fun y$127 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$147 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$166 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$178 () Bool)
(declare-fun y$199 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$20 () Bool)
(declare-fun y$201 () Bool)
(declare-fun y$216 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$263 () Bool)
(declare-fun y$266 () Bool)
(declare-fun y$268 () Bool)
(declare-fun y$269 () utt$2)
(declare-fun y$274 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$337 () Bool)
(declare-fun y$340 () Bool)
(declare-fun y$345 () utt$7)
(declare-fun y$35 () Bool)
(declare-fun y$373 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$392 () Bool)
(declare-fun y$395 () Bool)
(declare-fun y$4 () Bool)
(declare-fun y$400 () utt$7)
(declare-fun y$415 () Bool)
(declare-fun y$426 () Bool)
(declare-fun y$429 () Bool)
(declare-fun y$43 () Bool)
(declare-fun y$432 () utt$9)
(declare-fun y$443 () Bool)
(declare-fun y$48 () Bool)
(declare-fun y$50 () Bool)
(declare-fun y$501 () Bool)
(declare-fun y$521 () Bool)
(declare-fun y$522 () Bool)
(declare-fun y$527 () Bool)
(declare-fun y$530 () Bool)
(declare-fun y$533 () Bool)
(declare-fun y$54 () Bool)
(declare-fun y$543 () Bool)
(declare-fun y$544 () Bool)
(declare-fun y$547 () Bool)
(declare-fun y$550 () Bool)
(declare-fun y$553 () Bool)
(declare-fun y$554 () Bool)
(declare-fun y$558 () Bool)
(declare-fun y$569 () Bool)
(declare-fun y$570 () Bool)
(declare-fun y$571 () Bool)
(declare-fun y$572 () Bool)
(declare-fun y$573 () Bool)
(declare-fun y$574 () Bool)
(declare-fun y$582 () Bool)
(declare-fun y$583 () Bool)
(declare-fun y$584 () Bool)
(declare-fun y$585 () Bool)
(declare-fun y$586 () Bool)
(declare-fun y$6 () Bool)
(declare-fun y$61 () Bool)
(declare-fun y$615 () Bool)
(declare-fun y$63 () utt$19)
(declare-fun y$676 () Bool)
(declare-fun y$677 () Bool)
(declare-fun y$678 () Bool)
(declare-fun y$679 () Bool)
(declare-fun y$680 () Bool)
(declare-fun y$682 () Bool)
(declare-fun y$683 () Bool)
(declare-fun y$685 () Bool)
(declare-fun y$686 () Bool)
(declare-fun y$690 () Bool)
(declare-fun y$696 () Bool)
(declare-fun y$698 () Bool)
(declare-fun y$713 () Bool)
(declare-fun y$715 () Bool)
(declare-fun y$716 () Bool)
(declare-fun y$720 () Bool)
(declare-fun y$725 () Bool)
(declare-fun y$73 () Bool)
(declare-fun y$76 () Bool)
(declare-fun y$78 () utt$2)
(declare-fun y$81 () Bool)
(declare-fun y$83 () Bool)
(declare-fun y$87 () Bool)
(declare-fun y$89 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$94 () Bool)
(declare-fun y$95 () Bool)
(declare-fun y$97 () Bool)
(declare-fun y$bit_count_A () utt$7)
(declare-fun y$bit_count_A$next () utt$7)
(declare-fun y$bit_count_A$next_rhs () utt$7)
(declare-fun y$bit_count_A$next_rhs_op () utt$7)
(declare-fun y$bit_count_B () utt$7)
(declare-fun y$bit_count_B$next () utt$7)
(declare-fun y$bit_count_B$next_rhs () utt$7)
(declare-fun y$bit_count_B$next_rhs_op () utt$7)
(declare-fun y$bit_in () Bool)
(declare-fun y$clock_out () Bool)
(declare-fun y$clock_out$next () Bool)
(declare-fun y$clock_out$next_rhs () Bool)
(declare-fun y$clock_out$next_rhs_op () Bool)
(declare-fun y$frame_counter () utt$9)
(declare-fun y$frame_counter$next () utt$9)
(declare-fun y$frame_counter$next_rhs () utt$9)
(declare-fun y$frame_counter$next_rhs_op () utt$9)
(declare-fun y$load_A () Bool)
(declare-fun y$load_A$next () Bool)
(declare-fun y$load_A$next_rhs () Bool)
(declare-fun y$load_A$next_rhs_op () Bool)
(declare-fun y$load_B () Bool)
(declare-fun y$load_B$next () Bool)
(declare-fun y$load_B$next_rhs () Bool)
(declare-fun y$load_B$next_rhs_op () Bool)
(declare-fun y$load_buff () Bool)
(declare-fun y$load_buff$next () Bool)
(declare-fun y$load_buff$next_rhs () Bool)
(declare-fun y$load_buff$next_rhs_op () Bool)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n0s20 () utt$20)
(declare-fun y$n0s23 () utt$23)
(declare-fun y$n0s25 () utt$25)
(declare-fun y$n0s28 () utt$28)
(declare-fun y$n0s30 () utt$30)
(declare-fun y$n0s31 () utt$31)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n0s4 () utt$4)
(declare-fun y$n0s7 () utt$7)
(declare-fun y$n0s9 () utt$9)
(declare-fun y$n10s4 () utt$4)
(declare-fun y$n191s32 () utt$32)
(declare-fun y$n1s1 () Bool)
(declare-fun y$n1s2 () utt$2)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s4 () utt$4)
(declare-fun y$n1s7 () utt$7)
(declare-fun y$n1s9 () utt$9)
(declare-fun y$n2s2 () utt$2)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$n2s4 () utt$4)
(declare-fun y$n31s32 () utt$32)
(declare-fun y$n32s32 () utt$32)
(declare-fun y$n3s2 () utt$2)
(declare-fun y$n3s32 () utt$32)
(declare-fun y$n3s4 () utt$4)
(declare-fun y$n4s32 () utt$32)
(declare-fun y$n4s4 () utt$4)
(declare-fun y$n4s7 () utt$7)
(declare-fun y$n5s32 () utt$32)
(declare-fun y$n5s4 () utt$4)
(declare-fun y$n6s32 () utt$32)
(declare-fun y$n6s4 () utt$4)
(declare-fun y$n7s4 () utt$4)
(declare-fun y$n8s32 () utt$32)
(declare-fun y$n8s4 () utt$4)
(declare-fun y$n9s4 () utt$4)
(declare-fun y$parity () Bool)
(declare-fun y$parity$next () Bool)
(declare-fun y$parity$next_rhs () Bool)
(declare-fun y$parity$next_rhs_op () Bool)
(declare-fun y$pc () utt$4)
(declare-fun y$pc$next () utt$4)
(declare-fun y$pc$next_rhs () utt$4)
(declare-fun y$pc$next_rhs_op () utt$4)
(declare-fun y$preamble_1 () Bool)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$prop0 () Bool)
(declare-fun y$prop0$next () Bool)
(declare-fun y$prop0$next_op () Bool)
(declare-fun y$prop0_op () Bool)
(declare-fun y$reset () Bool)
(declare-fun y$reset$next () Bool)
(declare-fun y$rx_control () utt$4)
(declare-fun y$s$10 () Bool)
(declare-fun y$s$100 () Bool)
(declare-fun y$s$100_op () Bool)
(declare-fun y$s$101 () Bool)
(declare-fun y$s$101_op () Bool)
(declare-fun y$s$102 () Bool)
(declare-fun y$s$102_op () Bool)
(declare-fun y$s$103 () Bool)
(declare-fun y$s$103_op () Bool)
(declare-fun y$s$10_op () Bool)
(declare-fun y$s$11 () Bool)
(declare-fun y$s$11_op () Bool)
(declare-fun y$s$12 () utt$7)
(declare-fun y$s$123 () Bool)
(declare-fun y$s$123_op () Bool)
(declare-fun y$s$125 () Bool)
(declare-fun y$s$125_op () Bool)
(declare-fun y$s$126 () Bool)
(declare-fun y$s$126_op () Bool)
(declare-fun y$s$127 () Bool)
(declare-fun y$s$127_op () Bool)
(declare-fun y$s$128 () Bool)
(declare-fun y$s$128_op () Bool)
(declare-fun y$s$12_op () utt$7)
(declare-fun y$s$13 () utt$7)
(declare-fun y$s$131 () Bool)
(declare-fun y$s$131_op () Bool)
(declare-fun y$s$132 () Bool)
(declare-fun y$s$132$next () Bool)
(declare-fun y$s$132$next_op () Bool)
(declare-fun y$s$132_op () Bool)
(declare-fun y$s$133 () Bool)
(declare-fun y$s$133$next () Bool)
(declare-fun y$s$133$next_op () Bool)
(declare-fun y$s$133_op () Bool)
(declare-fun y$s$13_op () utt$7)
(declare-fun y$s$14 () Bool)
(declare-fun y$s$140 () Bool)
(declare-fun y$s$140_op () Bool)
(declare-fun y$s$144 () Bool)
(declare-fun y$s$144_op () Bool)
(declare-fun y$s$147 () utt$7)
(declare-fun y$s$147_op () utt$7)
(declare-fun y$s$149 () Bool)
(declare-fun y$s$149_op () Bool)
(declare-fun y$s$14_op () Bool)
(declare-fun y$s$15 () utt$9)
(declare-fun y$s$150 () Bool)
(declare-fun y$s$150_op () Bool)
(declare-fun y$s$152 () Bool)
(declare-fun y$s$152_op () Bool)
(declare-fun y$s$153 () Bool)
(declare-fun y$s$153_op () Bool)
(declare-fun y$s$155 () utt$4)
(declare-fun y$s$155_op () utt$4)
(declare-fun y$s$156 () utt$4)
(declare-fun y$s$156_op () utt$4)
(declare-fun y$s$158 () Bool)
(declare-fun y$s$158_op () Bool)
(declare-fun y$s$159 () Bool)
(declare-fun y$s$159_op () Bool)
(declare-fun y$s$15_op () utt$9)
(declare-fun y$s$16 () Bool)
(declare-fun y$s$160 () Bool)
(declare-fun y$s$160_op () Bool)
(declare-fun y$s$162 () Bool)
(declare-fun y$s$162_op () Bool)
(declare-fun y$s$163 () Bool)
(declare-fun y$s$163_op () Bool)
(declare-fun y$s$164 () Bool)
(declare-fun y$s$164_op () Bool)
(declare-fun y$s$165 () Bool)
(declare-fun y$s$165_op () Bool)
(declare-fun y$s$167 () Bool)
(declare-fun y$s$167_op () Bool)
(declare-fun y$s$168 () Bool)
(declare-fun y$s$168_op () Bool)
(declare-fun y$s$169 () Bool)
(declare-fun y$s$169_op () Bool)
(declare-fun y$s$16_op () Bool)
(declare-fun y$s$17 () Bool)
(declare-fun y$s$173 () Bool)
(declare-fun y$s$173_op () Bool)
(declare-fun y$s$177 () Bool)
(declare-fun y$s$177_op () Bool)
(declare-fun y$s$17_op () Bool)
(declare-fun y$s$18 () Bool)
(declare-fun y$s$180 () utt$7)
(declare-fun y$s$180_op () utt$7)
(declare-fun y$s$182 () Bool)
(declare-fun y$s$182_op () Bool)
(declare-fun y$s$183 () Bool)
(declare-fun y$s$183_op () Bool)
(declare-fun y$s$185 () Bool)
(declare-fun y$s$185_op () Bool)
(declare-fun y$s$186 () Bool)
(declare-fun y$s$186_op () Bool)
(declare-fun y$s$188 () Bool)
(declare-fun y$s$188_op () Bool)
(declare-fun y$s$189 () Bool)
(declare-fun y$s$189_op () Bool)
(declare-fun y$s$18_op () Bool)
(declare-fun y$s$19 () Bool)
(declare-fun y$s$191 () utt$4)
(declare-fun y$s$191_op () utt$4)
(declare-fun y$s$192 () utt$4)
(declare-fun y$s$192_op () utt$4)
(declare-fun y$s$194 () utt$4)
(declare-fun y$s$194_op () utt$4)
(declare-fun y$s$195 () utt$4)
(declare-fun y$s$195_op () utt$4)
(declare-fun y$s$197 () utt$7)
(declare-fun y$s$197_op () utt$7)
(declare-fun y$s$198 () utt$7)
(declare-fun y$s$198_op () utt$7)
(declare-fun y$s$19_op () Bool)
(declare-fun y$s$20 () utt$4)
(declare-fun y$s$200 () Bool)
(declare-fun y$s$200_op () Bool)
(declare-fun y$s$201 () Bool)
(declare-fun y$s$201_op () Bool)
(declare-fun y$s$202 () Bool)
(declare-fun y$s$202_op () Bool)
(declare-fun y$s$204 () Bool)
(declare-fun y$s$204_op () Bool)
(declare-fun y$s$205 () Bool)
(declare-fun y$s$205_op () Bool)
(declare-fun y$s$206 () Bool)
(declare-fun y$s$206_op () Bool)
(declare-fun y$s$208 () utt$7)
(declare-fun y$s$208_op () utt$7)
(declare-fun y$s$209 () utt$7)
(declare-fun y$s$209_op () utt$7)
(declare-fun y$s$20_op () utt$4)
(declare-fun y$s$21 () utt$20)
(declare-fun y$s$211 () Bool)
(declare-fun y$s$211_op () Bool)
(declare-fun y$s$212 () Bool)
(declare-fun y$s$212_op () Bool)
(declare-fun y$s$214 () Bool)
(declare-fun y$s$214_op () Bool)
(declare-fun y$s$215 () Bool)
(declare-fun y$s$215_op () Bool)
(declare-fun y$s$217 () utt$4)
(declare-fun y$s$217_op () utt$4)
(declare-fun y$s$218 () utt$4)
(declare-fun y$s$218_op () utt$4)
(declare-fun y$s$21_op () utt$20)
(declare-fun y$s$22 () utt$7)
(declare-fun y$s$220 () Bool)
(declare-fun y$s$220_op () Bool)
(declare-fun y$s$221 () Bool)
(declare-fun y$s$221_op () Bool)
(declare-fun y$s$222 () Bool)
(declare-fun y$s$222_op () Bool)
(declare-fun y$s$224 () Bool)
(declare-fun y$s$224_op () Bool)
(declare-fun y$s$225 () Bool)
(declare-fun y$s$225_op () Bool)
(declare-fun y$s$226 () Bool)
(declare-fun y$s$226_op () Bool)
(declare-fun y$s$228 () Bool)
(declare-fun y$s$228_op () Bool)
(declare-fun y$s$229 () Bool)
(declare-fun y$s$229_op () Bool)
(declare-fun y$s$22_op () utt$7)
(declare-fun y$s$23 () utt$7)
(declare-fun y$s$230 () Bool)
(declare-fun y$s$230_op () Bool)
(declare-fun y$s$232 () Bool)
(declare-fun y$s$232_op () Bool)
(declare-fun y$s$233 () Bool)
(declare-fun y$s$233_op () Bool)
(declare-fun y$s$234 () Bool)
(declare-fun y$s$234_op () Bool)
(declare-fun y$s$236 () Bool)
(declare-fun y$s$236_op () Bool)
(declare-fun y$s$237 () utt$7)
(declare-fun y$s$237_op () utt$7)
(declare-fun y$s$238 () utt$7)
(declare-fun y$s$238_op () utt$7)
(declare-fun y$s$23_op () utt$7)
(declare-fun y$s$24 () Bool)
(declare-fun y$s$240 () Bool)
(declare-fun y$s$240_op () Bool)
(declare-fun y$s$241 () Bool)
(declare-fun y$s$241_op () Bool)
(declare-fun y$s$243 () Bool)
(declare-fun y$s$243_op () Bool)
(declare-fun y$s$244 () Bool)
(declare-fun y$s$244_op () Bool)
(declare-fun y$s$246 () Bool)
(declare-fun y$s$246_op () Bool)
(declare-fun y$s$247 () Bool)
(declare-fun y$s$247_op () Bool)
(declare-fun y$s$249 () utt$4)
(declare-fun y$s$249_op () utt$4)
(declare-fun y$s$24_op () Bool)
(declare-fun y$s$25 () Bool)
(declare-fun y$s$250 () utt$4)
(declare-fun y$s$250_op () utt$4)
(declare-fun y$s$252 () utt$4)
(declare-fun y$s$252_op () utt$4)
(declare-fun y$s$253 () utt$4)
(declare-fun y$s$253_op () utt$4)
(declare-fun y$s$255 () utt$7)
(declare-fun y$s$255_op () utt$7)
(declare-fun y$s$256 () utt$7)
(declare-fun y$s$256_op () utt$7)
(declare-fun y$s$25_op () Bool)
(declare-fun y$s$26 () Bool)
(declare-fun y$s$261 () Bool)
(declare-fun y$s$261_op () Bool)
(declare-fun y$s$263 () utt$4)
(declare-fun y$s$263_op () utt$4)
(declare-fun y$s$264 () utt$4)
(declare-fun y$s$264_op () utt$4)
(declare-fun y$s$26_op () Bool)
(declare-fun y$s$27 () Bool)
(declare-fun y$s$27_op () Bool)
(declare-fun y$s$28 () utt$4)
(declare-fun y$s$28_op () utt$4)
(declare-fun y$s$29 () utt$7)
(declare-fun y$s$297 () Bool)
(declare-fun y$s$297_op () Bool)
(declare-fun y$s$299 () utt$20)
(declare-fun y$s$299_op () utt$20)
(declare-fun y$s$29_op () utt$7)
(declare-fun y$s$30 () utt$7)
(declare-fun y$s$30_op () utt$7)
(declare-fun y$s$31 () Bool)
(declare-fun y$s$31_op () Bool)
(declare-fun y$s$32 () Bool)
(declare-fun y$s$32_op () Bool)
(declare-fun y$s$33 () Bool)
(declare-fun y$s$33_op () Bool)
(declare-fun y$s$34 () utt$4)
(declare-fun y$s$34_op () utt$4)
(declare-fun y$s$35 () utt$7)
(declare-fun y$s$35_op () utt$7)
(declare-fun y$s$36 () Bool)
(declare-fun y$s$36_op () Bool)
(declare-fun y$s$37 () Bool)
(declare-fun y$s$37_op () Bool)
(declare-fun y$s$38 () Bool)
(declare-fun y$s$38_op () Bool)
(declare-fun y$s$39 () utt$4)
(declare-fun y$s$39_op () utt$4)
(declare-fun y$s$40 () utt$7)
(declare-fun y$s$40_op () utt$7)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$42 () Bool)
(declare-fun y$s$42_op () Bool)
(declare-fun y$s$43 () Bool)
(declare-fun y$s$43_op () Bool)
(declare-fun y$s$44 () utt$4)
(declare-fun y$s$44_op () utt$4)
(declare-fun y$s$45 () Bool)
(declare-fun y$s$45_op () Bool)
(declare-fun y$s$46 () Bool)
(declare-fun y$s$46_op () Bool)
(declare-fun y$s$47 () Bool)
(declare-fun y$s$47_op () Bool)
(declare-fun y$s$48 () utt$4)
(declare-fun y$s$48_op () utt$4)
(declare-fun y$s$49 () Bool)
(declare-fun y$s$49_op () Bool)
(declare-fun y$s$50 () Bool)
(declare-fun y$s$50_op () Bool)
(declare-fun y$s$51 () Bool)
(declare-fun y$s$51_op () Bool)
(declare-fun y$s$52 () utt$4)
(declare-fun y$s$52_op () utt$4)
(declare-fun y$s$53 () Bool)
(declare-fun y$s$53_op () Bool)
(declare-fun y$s$54 () Bool)
(declare-fun y$s$54_op () Bool)
(declare-fun y$s$55 () Bool)
(declare-fun y$s$55_op () Bool)
(declare-fun y$s$56 () utt$4)
(declare-fun y$s$56_op () utt$4)
(declare-fun y$s$59 () utt$32)
(declare-fun y$s$59_op () utt$32)
(declare-fun y$s$60 () utt$32)
(declare-fun y$s$60_op () utt$32)
(declare-fun y$s$61 () utt$32)
(declare-fun y$s$61_op () utt$32)
(declare-fun y$s$62 () Bool)
(declare-fun y$s$62_op () Bool)
(declare-fun y$s$63 () Bool)
(declare-fun y$s$63_op () Bool)
(declare-fun y$s$64 () Bool)
(declare-fun y$s$64_op () Bool)
(declare-fun y$s$65 () Bool)
(declare-fun y$s$65_op () Bool)
(declare-fun y$s$66 () Bool)
(declare-fun y$s$66_op () Bool)
(declare-fun y$s$67 () Bool)
(declare-fun y$s$67_op () Bool)
(declare-fun y$s$68 () Bool)
(declare-fun y$s$68_op () Bool)
(declare-fun y$s$70 () Bool)
(declare-fun y$s$70_op () Bool)
(declare-fun y$s$71 () Bool)
(declare-fun y$s$71_op () Bool)
(declare-fun y$s$72 () Bool)
(declare-fun y$s$72_op () Bool)
(declare-fun y$s$73 () utt$4)
(declare-fun y$s$73_op () utt$4)
(declare-fun y$s$74 () utt$4)
(declare-fun y$s$74_op () utt$4)
(declare-fun y$s$75 () utt$4)
(declare-fun y$s$75_op () utt$4)
(declare-fun y$s$76 () utt$4)
(declare-fun y$s$76_op () utt$4)
(declare-fun y$s$77 () utt$4)
(declare-fun y$s$77_op () utt$4)
(declare-fun y$s$78 () utt$4)
(declare-fun y$s$78_op () utt$4)
(declare-fun y$s$79 () utt$4)
(declare-fun y$s$79_op () utt$4)
(declare-fun y$s$80 () utt$4)
(declare-fun y$s$80_op () utt$4)
(declare-fun y$s$81 () utt$4)
(declare-fun y$s$81_op () utt$4)
(declare-fun y$s$82 () utt$4)
(declare-fun y$s$82_op () utt$4)
(declare-fun y$s$83 () utt$4)
(declare-fun y$s$83_op () utt$4)
(declare-fun y$s$84 () utt$9)
(declare-fun y$s$84_op () utt$9)
(declare-fun y$s$85 () utt$9)
(declare-fun y$s$85_op () utt$9)
(declare-fun y$s$86 () utt$7)
(declare-fun y$s$86_op () utt$7)
(declare-fun y$s$87 () utt$7)
(declare-fun y$s$87_op () utt$7)
(declare-fun y$s$88 () utt$7)
(declare-fun y$s$88_op () utt$7)
(declare-fun y$s$89 () utt$7)
(declare-fun y$s$89_op () utt$7)
(declare-fun y$s$90 () utt$7)
(declare-fun y$s$90_op () utt$7)
(declare-fun y$s$91 () utt$7)
(declare-fun y$s$91_op () utt$7)
(declare-fun y$s$92 () utt$7)
(declare-fun y$s$92_op () utt$7)
(declare-fun y$s$93 () utt$7)
(declare-fun y$s$93_op () utt$7)
(declare-fun y$s$94 () Bool)
(declare-fun y$s$94_op () Bool)
(declare-fun y$s$95 () Bool)
(declare-fun y$s$95_op () Bool)
(declare-fun y$s$96 () Bool)
(declare-fun y$s$96_op () Bool)
(declare-fun y$s$97 () Bool)
(declare-fun y$s$97_op () Bool)
(declare-fun y$s$98 () Bool)
(declare-fun y$s$98_op () Bool)
(declare-fun y$s$99 () Bool)
(declare-fun y$s$99_op () Bool)
(declare-fun y$shift_reg () utt$20)
(declare-fun y$shift_reg$next () utt$20)
(declare-fun y$shift_reg$next_rhs () utt$20)
(declare-fun y$shift_reg$next_rhs_op () utt$20)
(declare-fun y$w$10 () utt$20)
(declare-fun y$w$10_op () utt$20)
(declare-fun y$w$11 () utt$2)
(declare-fun y$w$12 () Bool)
(declare-fun y$w$13 () Bool)
(declare-fun y$w$14 () Bool)
(declare-fun y$w$15 () Bool)
(declare-fun y$w$16 () utt$32)
(declare-fun y$w$16$next () utt$32)
(declare-fun y$w$16$next_op () utt$32)
(declare-fun y$w$16_op () utt$32)
(declare-fun y$w$17 () utt$32)
(declare-fun y$w$17$next () utt$32)
(declare-fun y$w$17$next_op () utt$32)
(declare-fun y$w$17_op () utt$32)
(declare-fun y$w$18 () utt$2)
(declare-fun y$w$19 () utt$32)
(declare-fun y$w$19_op () utt$32)
(declare-fun y$w$2 () utt$7)
(declare-fun y$w$20 () utt$32)
(declare-fun y$w$20_op () utt$32)
(declare-fun y$w$21 () Bool)
(declare-fun y$w$4 () utt$7)
(declare-fun y$w$5 () utt$9)
(declare-fun y$w$6 () utt$32)
(declare-fun y$w$6$next () utt$32)
(declare-fun y$w$6$next_op () utt$32)
(declare-fun y$w$6_op () utt$32)
(declare-fun y$w$7 () utt$32)
(declare-fun y$w$7$next () utt$32)
(declare-fun y$w$7$next_op () utt$32)
(declare-fun y$w$7_op () utt$32)
(declare-fun y$w$8 () utt$32)
(declare-fun y$w$8_op () utt$32)
(declare-fun y$w$9 () utt$19)
(declare-fun y$xtal () utt$4)
(assert (distinct y$n2s2 y$n3s2 y$n1s2))
(assert (distinct y$n0s4 y$n1s4 y$n7s4 y$n9s4 y$n5s4 y$n3s4 y$n6s4 y$n2s4 y$n8s4 y$n4s4 y$n10s4))
(assert (distinct y$n0s7 y$n1s7 y$n4s7))
(assert (not (= y$n0s9 y$n1s9)))
(assert (distinct y$n2s32 y$n4s32 y$n6s32 y$n8s32 y$n0s32 y$n1s32 y$n32s32 y$n31s32 y$n5s32 y$n3s32 y$n191s32))
(assert (= y$w$6_op (Concat_32_1_31 y$load_A y$n0s31)))
(assert (= y$527 (= y$n1s32 y$w$6_op)))
(assert (= y$w$7_op (Concat_32_1_31 y$load_B y$n0s31)))
(assert (= y$530 (= y$n0s32 y$w$7_op)))
(assert (= y$prop0_op (or y$527 y$530)))
(assert (= y$533 (= y$prop y$prop0_op)))
(assert (= y$w$8_op (Concat_32_4_28 y$pc y$n0s28)))
(assert (= y$31 (= y$n2s32 y$w$8_op)))
(assert (= y$s$125_op (or y$reset y$31)))
(assert (= y$35 (= y$n4s32 y$w$8_op)))
(assert (= y$s$126_op (or y$s$125_op y$35)))
(assert (= y$39 (= y$n6s32 y$w$8_op)))
(assert (= y$s$127_op (or y$s$126_op y$39)))
(assert (= y$43 (= y$n8s32 y$w$8_op)))
(assert (= y$s$128_op (or y$s$127_op y$43)))
(assert (= y$48 (not (= y$n0s32 y$w$8_op))))
(assert (= y$50 (not (= y$n1s32 y$w$8_op))))
(assert (= y$s$123_op (and y$48 y$50)))
(assert (= y$54 (not (= y$parity y$bit_in))))
(assert (= y$s$236_op (ite y$s$123_op y$54 y$parity)))
(assert (= y$s$19_op (and (not y$s$128_op) y$s$236_op)))
(assert (= y$parity$next_rhs_op (and (not y$s$128_op) y$s$19_op)))
(assert (= y$61 (= y$parity$next y$parity$next_rhs_op)))
(assert (= y$63 (Extract_19_18_0_20 y$shift_reg)))
(assert (= y$w$10_op (Concat_20_1_19 y$bit_in y$63)))
(assert (= y$s$299_op (ite y$s$123_op y$w$10_op y$shift_reg)))
(assert (= y$s$21_op (ite y$reset y$n0s20 y$s$299_op)))
(assert (= y$shift_reg$next_rhs_op (ite y$reset y$n0s20 y$s$21_op)))
(assert (= y$73 (= y$shift_reg$next y$shift_reg$next_rhs_op)))
(assert (= y$76 (= y$n1s4 y$pc)))
(assert (= y$78 (Extract_2_1_0_4 y$rx_control)))
(assert (= y$81 (= y$n2s2 y$78)))
(assert (= y$83 (= y$n3s2 y$78)))
(assert (= y$s$65_op (or y$81 y$83)))
(assert (= y$87 (Extract_1_3_3_4 y$xtal)))
(assert (= y$89 (Extract_1_2_2_4 y$xtal)))
(assert (= y$s$70_op (ite y$83 y$87 y$89)))
(assert (= y$94 (= y$n1s2 y$78)))
(assert (= y$95 (Extract_1_1_1_4 y$xtal)))
(assert (= y$97 (Extract_1_0_0_4 y$xtal)))
(assert (= y$s$71_op (ite y$94 y$95 y$97)))
(assert (= y$s$72_op (ite y$s$65_op y$s$70_op y$s$71_op)))
(assert (= y$s$261_op (and y$76 y$s$72_op)))
(assert (= y$s$24_op (and (not y$reset) y$s$261_op)))
(assert (= y$s$297_op (ite y$76 y$s$24_op y$clock_out)))
(assert (= y$s$14_op (and (not y$reset) y$s$297_op)))
(assert (= y$clock_out$next_rhs_op (ite y$reset y$clock_out y$s$14_op)))
(assert (= y$113 (= y$clock_out$next y$clock_out$next_rhs_op)))
(assert (= y$116 (= y$n7s4 y$pc)))
(assert (= y$118 (= y$n9s4 y$pc)))
(assert (= y$s$68_op (or y$116 y$118)))
(assert (= y$w$16_op (Concat_32_7_25 y$bit_count_B y$n0s25)))
(assert (= y$s$133_op (Le_1_32_32 y$w$16_op y$n32s32)))
(assert (= y$127 (= y$n2s32 y$w$16_op)))
(assert (= y$s$200_op (and y$load_A (not y$127))))
(assert (= y$s$201_op (and y$s$133_op y$s$200_op)))
(assert (= y$s$140_op (and y$118 y$s$201_op)))
(assert (= y$s$10_op (and (not y$reset) y$s$140_op)))
(assert (= y$s$149_op (ite y$s$133_op y$s$10_op y$load_A)))
(assert (= y$s$150_op (and y$118 y$s$149_op)))
(assert (= y$s$53_op (and (not y$reset) y$s$150_op)))
(assert (= y$w$17_op (Concat_32_7_25 y$bit_count_A y$n0s25)))
(assert (= y$s$132_op (Le_1_32_32 y$w$17_op y$n32s32)))
(assert (= y$147 (= y$n31s32 y$w$17_op)))
(assert (= y$s$232_op (or y$load_A y$147)))
(assert (= y$s$233_op (and y$s$132_op y$s$232_op)))
(assert (= y$s$177_op (and y$116 y$s$233_op)))
(assert (= y$s$49_op (and (not y$reset) y$s$177_op)))
(assert (= y$s$188_op (ite y$s$132_op y$s$49_op y$load_A)))
(assert (= y$s$189_op (and y$116 y$s$188_op)))
(assert (= y$s$45_op (and (not y$reset) y$s$189_op)))
(assert (= y$s$100_op (ite y$118 y$s$53_op y$s$45_op)))
(assert (= y$166 (= y$n5s4 y$pc)))
(assert (= y$s$202_op (and y$s$201_op y$166)))
(assert (= y$s$41_op (and (not y$reset) y$s$202_op)))
(assert (= y$s$211_op (ite y$s$133_op y$s$41_op y$load_A)))
(assert (= y$s$212_op (and y$166 y$s$211_op)))
(assert (= y$s$36_op (and (not y$reset) y$s$212_op)))
(assert (= y$178 (= y$n3s4 y$pc)))
(assert (= y$s$234_op (and y$s$233_op y$178)))
(assert (= y$s$31_op (and (not y$reset) y$s$234_op)))
(assert (= y$s$246_op (ite y$s$132_op y$s$31_op y$load_A)))
(assert (= y$s$247_op (and y$178 y$s$246_op)))
(assert (= y$s$25_op (and (not y$reset) y$s$247_op)))
(assert (= y$s$101_op (ite y$178 y$s$25_op y$load_A)))
(assert (= y$s$102_op (ite y$166 y$s$36_op y$s$101_op)))
(assert (= y$s$103_op (ite y$s$68_op y$s$100_op y$s$102_op)))
(assert (= y$s$16_op (and (not y$reset) y$s$103_op)))
(assert (= y$load_A$next_rhs_op (and (not y$reset) y$s$16_op)))
(assert (= y$199 (= y$load_A$next y$load_A$next_rhs_op)))
(assert (= y$201 (= y$n31s32 y$w$16_op)))
(assert (= y$s$204_op (or y$load_B y$201)))
(assert (= y$s$205_op (and y$s$133_op y$s$204_op)))
(assert (= y$s$144_op (and y$118 y$s$205_op)))
(assert (= y$s$11_op (and (not y$reset) y$s$144_op)))
(assert (= y$s$152_op (ite y$s$133_op y$s$11_op y$load_B)))
(assert (= y$s$153_op (and y$118 y$s$152_op)))
(assert (= y$s$54_op (and (not y$reset) y$s$153_op)))
(assert (= y$216 (= y$n2s32 y$w$17_op)))
(assert (= y$s$228_op (and y$load_B (not y$216))))
(assert (= y$s$229_op (and y$s$132_op y$s$228_op)))
(assert (= y$s$173_op (and y$116 y$s$229_op)))
(assert (= y$s$50_op (and (not y$reset) y$s$173_op)))
(assert (= y$s$185_op (ite y$s$132_op y$s$50_op y$load_B)))
(assert (= y$s$186_op (and y$116 y$s$185_op)))
(assert (= y$s$46_op (and (not y$reset) y$s$186_op)))
(assert (= y$s$96_op (ite y$118 y$s$54_op y$s$46_op)))
(assert (= y$s$206_op (and y$166 y$s$205_op)))
(assert (= y$s$42_op (and (not y$reset) y$s$206_op)))
(assert (= y$s$214_op (ite y$s$133_op y$s$42_op y$load_B)))
(assert (= y$s$215_op (and y$166 y$s$214_op)))
(assert (= y$s$37_op (and (not y$reset) y$s$215_op)))
(assert (= y$s$230_op (and y$178 y$s$229_op)))
(assert (= y$s$32_op (and (not y$reset) y$s$230_op)))
(assert (= y$s$243_op (ite y$s$132_op y$s$32_op y$load_B)))
(assert (= y$s$244_op (and y$178 y$s$243_op)))
(assert (= y$s$26_op (and (not y$reset) y$s$244_op)))
(assert (= y$s$97_op (ite y$178 y$s$26_op y$load_B)))
(assert (= y$s$98_op (ite y$166 y$s$37_op y$s$97_op)))
(assert (= y$s$99_op (ite y$s$68_op y$s$96_op y$s$98_op)))
(assert (= y$s$17_op (and (not y$reset) y$s$99_op)))
(assert (= y$load_B$next_rhs_op (and (not y$reset) y$s$17_op)))
(assert (= y$263 (= y$load_B$next y$load_B$next_rhs_op)))
(assert (= y$266 (= y$n5s32 y$w$17_op)))
(assert (= y$268 (= y$n3s32 y$w$17_op)))
(assert (= y$269 (Extract_2_1_0_9 y$frame_counter)))
(assert (= y$w$19_op (Concat_32_2_30 y$269 y$n0s30)))
(assert (= y$274 (= y$n0s32 y$w$19_op)))
(assert (= y$s$162_op (or y$load_buff y$274)))
(assert (= y$s$163_op (and y$268 y$s$162_op)))
(assert (= y$s$164_op (and y$s$132_op y$s$163_op)))
(assert (= y$s$165_op (and y$116 y$s$164_op)))
(assert (= y$s$51_op (and (not y$reset) y$s$165_op)))
(assert (= y$s$167_op (ite y$268 y$s$51_op y$load_buff)))
(assert (= y$s$168_op (and y$s$132_op y$s$167_op)))
(assert (= y$s$169_op (and y$116 y$s$168_op)))
(assert (= y$s$47_op (and (not y$reset) y$s$169_op)))
(assert (= y$s$158_op (and (not y$266) y$s$47_op)))
(assert (= y$s$159_op (and y$s$132_op y$s$158_op)))
(assert (= y$s$160_op (and y$116 y$s$159_op)))
(assert (= y$s$55_op (and (not y$reset) y$s$160_op)))
(assert (= y$s$182_op (ite y$s$132_op y$s$55_op y$load_buff)))
(assert (= y$s$183_op (and y$116 y$s$182_op)))
(assert (= y$s$43_op (and (not y$reset) y$s$183_op)))
(assert (= y$s$224_op (or y$load_buff y$268)))
(assert (= y$s$225_op (and y$s$132_op y$s$224_op)))
(assert (= y$s$226_op (and y$178 y$s$225_op)))
(assert (= y$s$33_op (and (not y$reset) y$s$226_op)))
(assert (= y$s$220_op (and (not y$266) y$s$33_op)))
(assert (= y$s$221_op (and y$s$132_op y$s$220_op)))
(assert (= y$s$222_op (and y$178 y$s$221_op)))
(assert (= y$s$38_op (and (not y$reset) y$s$222_op)))
(assert (= y$s$240_op (ite y$s$132_op y$s$38_op y$load_buff)))
(assert (= y$s$241_op (and y$178 y$s$240_op)))
(assert (= y$s$27_op (and (not y$reset) y$s$241_op)))
(assert (= y$s$94_op (ite y$178 y$s$27_op y$load_buff)))
(assert (= y$s$95_op (ite y$116 y$s$43_op y$s$94_op)))
(assert (= y$s$18_op (and (not y$reset) y$s$95_op)))
(assert (= y$load_buff$next_rhs_op (and (not y$reset) y$s$18_op)))
(assert (= y$337 (= y$load_buff$next y$load_buff$next_rhs_op)))
(assert (= y$340 (= y$n6s4 y$pc)))
(assert (= y$s$67_op (or y$116 y$340)))
(assert (= y$s$59_op (Add_32_32_32 y$w$17_op y$n1s32)))
(assert (= y$345 (Extract_7_6_0_32 y$s$59_op)))
(assert (= y$s$237_op (ite y$s$132_op y$345 y$bit_count_A)))
(assert (= y$s$180_op (ite y$116 y$s$237_op y$n0s7)))
(assert (= y$s$40_op (ite y$reset y$n0s7 y$s$180_op)))
(assert (= y$w$20_op (Concat_32_9_23 y$frame_counter y$n0s23)))
(assert (= y$s$131_op (Le_1_32_32 y$w$20_op y$n191s32)))
(assert (= y$s$197_op (ite y$s$131_op y$n1s7 y$bit_count_A)))
(assert (= y$s$198_op (ite y$340 y$s$197_op y$n0s7)))
(assert (= y$s$35_op (ite y$reset y$n0s7 y$s$198_op)))
(assert (= y$s$90_op (ite y$116 y$s$40_op y$s$35_op)))
(assert (= y$s$238_op (ite y$178 y$s$237_op y$n0s7)))
(assert (= y$s$29_op (ite y$reset y$n0s7 y$s$238_op)))
(assert (= y$373 (= y$n2s4 y$pc)))
(assert (= y$s$255_op (ite y$preamble_1 y$n4s7 y$bit_count_A)))
(assert (= y$s$256_op (ite y$373 y$s$255_op y$n0s7)))
(assert (= y$s$22_op (ite y$reset y$n0s7 y$s$256_op)))
(assert (= y$s$91_op (ite y$373 y$s$22_op y$bit_count_A)))
(assert (= y$s$92_op (ite y$178 y$s$29_op y$s$91_op)))
(assert (= y$s$93_op (ite y$s$67_op y$s$90_op y$s$92_op)))
(assert (= y$s$12_op (ite y$reset y$n0s7 y$s$93_op)))
(assert (= y$bit_count_A$next_rhs_op (ite y$reset y$n0s7 y$s$12_op)))
(assert (= y$392 (= y$bit_count_A$next y$bit_count_A$next_rhs_op)))
(assert (= y$395 (= y$n8s4 y$pc)))
(assert (= y$s$66_op (or y$118 y$395)))
(assert (= y$s$60_op (Add_32_32_32 y$w$16_op y$n1s32)))
(assert (= y$400 (Extract_7_6_0_32 y$s$60_op)))
(assert (= y$s$208_op (ite y$s$133_op y$400 y$bit_count_B)))
(assert (= y$s$147_op (ite y$118 y$s$208_op y$n0s7)))
(assert (= y$s$30_op (ite y$reset y$n0s7 y$s$147_op)))
(assert (= y$s$86_op (ite y$118 y$s$30_op y$n1s7)))
(assert (= y$s$209_op (ite y$166 y$s$208_op y$n0s7)))
(assert (= y$s$23_op (ite y$reset y$n0s7 y$s$209_op)))
(assert (= y$415 (= y$n4s4 y$pc)))
(assert (= y$s$87_op (ite y$415 y$n1s7 y$bit_count_B)))
(assert (= y$s$88_op (ite y$166 y$s$23_op y$s$87_op)))
(assert (= y$s$89_op (ite y$s$66_op y$s$86_op y$s$88_op)))
(assert (= y$s$13_op (ite y$reset y$n0s7 y$s$89_op)))
(assert (= y$bit_count_B$next_rhs_op (ite y$reset y$n0s7 y$s$13_op)))
(assert (= y$426 (= y$bit_count_B$next y$bit_count_B$next_rhs_op)))
(assert (= y$429 (= y$n10s4 y$pc)))
(assert (= y$s$61_op (Add_32_32_32 y$w$20_op y$n1s32)))
(assert (= y$432 (Extract_9_8_0_32 y$s$61_op)))
(assert (= y$s$84_op (ite y$415 y$n1s9 y$frame_counter)))
(assert (= y$s$85_op (ite y$429 y$432 y$s$84_op)))
(assert (= y$s$15_op (ite y$reset y$n0s9 y$s$85_op)))
(assert (= y$frame_counter$next_rhs_op (ite y$reset y$n0s9 y$s$15_op)))
(assert (= y$443 (= y$frame_counter$next y$frame_counter$next_rhs_op)))
(assert (= y$s$62_op (or y$118 y$395 y$429)))
(assert (= y$s$64_op (or y$116 y$166 y$340 y$s$62_op)))
(assert (= y$s$155_op (ite y$s$133_op y$pc y$n10s4)))
(assert (= y$s$156_op (ite y$118 y$s$155_op y$n0s4)))
(assert (= y$s$56_op (ite y$reset y$n0s4 y$s$156_op)))
(assert (= y$s$73_op (ite y$118 y$s$56_op y$n9s4)))
(assert (= y$s$74_op (ite y$429 y$n6s4 y$s$73_op)))
(assert (= y$s$191_op (ite y$s$132_op y$pc y$n8s4)))
(assert (= y$s$192_op (ite y$116 y$s$191_op y$n0s4)))
(assert (= y$s$52_op (ite y$reset y$n0s4 y$s$192_op)))
(assert (= y$s$194_op (ite y$s$131_op y$n7s4 y$n0s4)))
(assert (= y$s$195_op (ite y$340 y$s$194_op y$n0s4)))
(assert (= y$s$48_op (ite y$reset y$n0s4 y$s$195_op)))
(assert (= y$s$217_op (ite y$s$133_op y$pc y$n6s4)))
(assert (= y$s$218_op (ite y$166 y$s$217_op y$n0s4)))
(assert (= y$s$44_op (ite y$reset y$n0s4 y$s$218_op)))
(assert (= y$s$75_op (ite y$340 y$s$48_op y$s$44_op)))
(assert (= y$s$76_op (ite y$116 y$s$52_op y$s$75_op)))
(assert (= y$s$77_op (ite y$s$62_op y$s$74_op y$s$76_op)))
(assert (= y$s$63_op (or y$178 y$373 y$415)))
(assert (= y$s$249_op (ite y$s$132_op y$pc y$n4s4)))
(assert (= y$s$250_op (ite y$178 y$s$249_op y$n0s4)))
(assert (= y$s$39_op (ite y$reset y$n0s4 y$s$250_op)))
(assert (= y$s$252_op (ite y$preamble_1 y$n3s4 y$pc)))
(assert (= y$s$253_op (ite y$373 y$s$252_op y$n0s4)))
(assert (= y$s$34_op (ite y$reset y$n0s4 y$s$253_op)))
(assert (= y$s$78_op (ite y$178 y$s$39_op y$s$34_op)))
(assert (= y$s$79_op (ite y$415 y$n5s4 y$s$78_op)))
(assert (= y$20 (= y$n0s4 y$pc)))
(assert (= y$501 (Extract_1_2_2_4 y$rx_control)))
(assert (= y$s$263_op (ite y$501 y$n1s4 y$pc)))
(assert (= y$s$264_op (ite y$20 y$s$263_op y$n0s4)))
(assert (= y$s$28_op (ite y$reset y$n0s4 y$s$264_op)))
(assert (= y$s$80_op (ite y$20 y$s$28_op y$pc)))
(assert (= y$s$81_op (ite y$76 y$n2s4 y$s$80_op)))
(assert (= y$s$82_op (ite y$s$63_op y$s$79_op y$s$81_op)))
(assert (= y$s$83_op (ite y$s$64_op y$s$77_op y$s$82_op)))
(assert (= y$s$20_op (ite y$reset y$n0s4 y$s$83_op)))
(assert (= y$pc$next_rhs_op (ite y$reset y$n0s4 y$s$20_op)))
(assert (= y$521 (= y$pc$next y$pc$next_rhs_op)))
(assert (= y$522 (and y$61 y$73 y$113 y$199 y$263 y$337 y$392 y$426 y$443 y$521)))
(assert (= y$w$6$next_op (Concat_32_1_31 y$load_A$next y$n0s31)))
(assert (= y$547 (= y$n1s32 y$w$6$next_op)))
(assert (= y$w$7$next_op (Concat_32_1_31 y$load_B$next y$n0s31)))
(assert (= (= y$n0s32 y$w$7$next_op) y$550))
(assert (= y$prop0$next_op (or y$547 y$550)))
(assert (= y$553 (= y$prop$next y$prop0$next_op)))
(assert (= y$prop$next (not y$544)))
(assert (= y$load_B$next (not y$570)))
(assert (= y$571 (not (= y$n0s32 y$w$7$next_op))))
(assert (= y$572 (and y$570 y$571)))
(assert (= y$572 (not y$574)))
(assert (= y$load_B (not y$13)))
(assert (= (not (= y$n0s32 y$w$7_op)) y$558))
(assert (= y$569 (and y$13 y$558)))
(assert (= y$569 (not y$573)))
(assert (= y$584 (and y$prop y$533 y$574 y$573 y$522 y$553 y$544)))
(assert y$584)
(assert (distinct y$n2s2 y$n3s2 y$n1s2))
(assert (distinct y$n0s4 y$n1s4 y$n7s4 y$n9s4 y$n5s4 y$n3s4 y$n6s4 y$n2s4 y$n8s4 y$n4s4 y$n10s4))
(assert (distinct y$n0s7 y$n1s7 y$n4s7))
(assert (not (= y$n0s9 y$n1s9)))
(assert (distinct y$n2s32 y$n4s32 y$n6s32 y$n8s32 y$n0s32 y$n1s32 y$n32s32 y$n31s32 y$n5s32 y$n3s32 y$n191s32))
(assert (= (not (= y$n9s4 y$pc)) y$698))
(assert y$698)
(assert (= y$load_B (not y$13)))
(assert y$13)
(check-sat)
(exit)
