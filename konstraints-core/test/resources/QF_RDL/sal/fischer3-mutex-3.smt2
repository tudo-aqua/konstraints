(set-info :smt-lib-version 2.6)
(set-logic QF_RDL)
(set-info :source |
Source unknown
This benchmark was automatically translated into SMT-LIB format from
CVC format using CVC Lite
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun cvclZero () Real)
(declare-fun x_0 () Bool)
(declare-fun x_1 () Bool)
(declare-fun x_2 () Bool)
(declare-fun x_3 () Bool)
(declare-fun x_4 () Bool)
(declare-fun x_5 () Bool)
(declare-fun x_6 () Real)
(declare-fun x_7 () Real)
(declare-fun x_8 () Real)
(declare-fun x_9 () Real)
(declare-fun x_10 () Real)
(declare-fun x_11 () Bool)
(declare-fun x_12 () Bool)
(declare-fun x_13 () Real)
(declare-fun x_14 () Bool)
(declare-fun x_15 () Bool)
(declare-fun x_16 () Bool)
(declare-fun x_17 () Bool)
(declare-fun x_18 () Real)
(declare-fun x_19 () Real)
(declare-fun x_20 () Real)
(declare-fun x_21 () Real)
(declare-fun x_22 () Real)
(declare-fun x_23 () Real)
(declare-fun x_24 () Real)
(declare-fun x_25 () Bool)
(declare-fun x_26 () Bool)
(declare-fun x_27 () Real)
(declare-fun x_28 () Bool)
(declare-fun x_29 () Bool)
(declare-fun x_30 () Bool)
(declare-fun x_31 () Bool)
(declare-fun x_32 () Real)
(declare-fun x_33 () Real)
(declare-fun x_34 () Real)
(declare-fun x_35 () Real)
(declare-fun x_36 () Real)
(declare-fun x_37 () Real)
(declare-fun x_38 () Real)
(declare-fun x_39 () Bool)
(declare-fun x_40 () Bool)
(declare-fun x_41 () Real)
(declare-fun x_42 () Bool)
(declare-fun x_43 () Bool)
(declare-fun x_44 () Bool)
(declare-fun x_45 () Bool)
(declare-fun x_46 () Real)
(declare-fun x_47 () Real)
(declare-fun x_48 () Real)
(declare-fun x_49 () Real)
(declare-fun x_50 () Real)
(declare-fun x_51 () Real)
(assert (let ((?v_20 (not x_39)) (?v_21 (not x_40))) (let ((?v_22 (and ?v_20 ?v_21)) (?v_58 (not x_42)) (?v_59 (not x_43))) (let ((?v_60 (and ?v_58 ?v_59)) (?v_43 (not x_44)) (?v_44 (not x_45))) (let ((?v_46 (and ?v_43 ?v_44)) (?v_25 (and (= x_42 x_28) (= x_43 x_29))) (?v_55 (not x_28)) (?v_53 (not x_29))) (let ((?v_50 (and ?v_55 ?v_53)) (?v_14 (and (= x_39 x_25) (= x_40 x_26))) (?v_39 (not x_30)) (?v_36 (not x_31))) (let ((?v_31 (and ?v_39 ?v_36)) (?v_56 (and ?v_55 x_29)) (?v_23 (and (= x_44 x_30) (= x_45 x_31))) (?v_41 (and ?v_39 x_31)) (?v_17 (not x_25)) (?v_15 (not x_26))) (let ((?v_10 (and ?v_17 ?v_15)) (?v_18 (and ?v_17 x_26)) (?v_79 (and (= x_28 x_14) (= x_29 x_15))) (?v_105 (not x_14)) (?v_103 (not x_15))) (let ((?v_100 (and ?v_105 ?v_103)) (?v_71 (and (= x_25 x_11) (= x_26 x_12))) (?v_93 (not x_16)) (?v_90 (not x_17))) (let ((?v_85 (and ?v_93 ?v_90)) (?v_106 (and ?v_105 x_15)) (?v_77 (and (= x_30 x_16) (= x_31 x_17))) (?v_95 (and ?v_93 x_17)) (?v_74 (not x_11)) (?v_72 (not x_12))) (let ((?v_67 (and ?v_74 ?v_72)) (?v_75 (and ?v_74 x_12)) (?v_129 (and (= x_14 x_4) (= x_15 x_5))) (?v_155 (not x_4)) (?v_153 (not x_5))) (let ((?v_149 (and ?v_155 ?v_153)) (?v_121 (and (= x_11 x_0) (= x_12 x_1))) (?v_143 (not x_2)) (?v_140 (not x_3))) (let ((?v_133 (and ?v_143 ?v_140)) (?v_156 (and ?v_155 x_5)) (?v_127 (and (= x_16 x_2) (= x_17 x_3))) (?v_145 (and ?v_143 x_3)) (?v_124 (not x_0)) (?v_122 (not x_1))) (let ((?v_114 (and ?v_124 ?v_122)) (?v_125 (and ?v_124 x_1)) (?v_115 (- cvclZero x_6))) (let ((?v_111 (< ?v_115 0)) (?v_134 (- cvclZero x_7))) (let ((?v_110 (< ?v_134 0)) (?v_150 (- cvclZero x_8))) (let ((?v_109 (< ?v_150 0)) (?v_0 (- x_9 cvclZero))) (let ((?v_116 (= ?v_0 0)) (?v_4 (< (- x_32 x_33) 0))) (let ((?v_5 (ite ?v_4 (< (- x_32 x_34) 0) (< (- x_33 x_34) 0))) (?v_48 (= (- x_48 x_34) 0)) (?v_24 (= (- x_47 x_33) 0)) (?v_26 (= (- x_46 x_32) 0)) (?v_8 (= (- x_41 x_27) 0)) (?v_9 (- x_38 cvclZero))) (let ((?v_28 (= ?v_9 0)) (?v_7 (- x_36 x_34))) (let ((?v_11 (= ?v_7 0)) (?v_2 (- x_27 cvclZero))) (let ((?v_12 (= ?v_2 0)) (?v_16 (- x_36 x_48))) (let ((?v_13 (< ?v_16 0)) (?v_30 (= ?v_9 1)) (?v_33 (not ?v_12)) (?v_35 (= ?v_9 2)) (?v_3 (- x_41 cvclZero))) (let ((?v_158 (= ?v_3 1)) (?v_38 (= ?v_9 3)) (?v_19 (= ?v_2 1)) (?v_40 (= ?v_9 4))) (let ((?v_161 (not ?v_19)) (?v_45 (= ?v_9 5)) (?v_47 (= ?v_3 0)) (?v_29 (- x_36 x_33))) (let ((?v_32 (= ?v_29 0)) (?v_37 (- x_36 x_47))) (let ((?v_34 (< ?v_37 0)) (?v_159 (= ?v_3 2)) (?v_42 (= ?v_2 2))) (let ((?v_162 (not ?v_42)) (?v_49 (- x_36 x_32))) (let ((?v_51 (= ?v_49 0)) (?v_54 (- x_36 x_46))) (let ((?v_52 (< ?v_54 0)) (?v_160 (= ?v_3 3)) (?v_57 (= ?v_2 3))) (let ((?v_163 (not ?v_57)) (?v_61 (< (- x_18 x_19) 0))) (let ((?v_62 (ite ?v_61 (< (- x_18 x_20) 0) (< (- x_19 x_20) 0))) (?v_98 (= (- x_34 x_20) 0)) (?v_78 (= (- x_33 x_19) 0)) (?v_80 (= (- x_32 x_18) 0)) (?v_65 (= (- x_27 x_13) 0)) (?v_66 (- x_24 cvclZero))) (let ((?v_82 (= ?v_66 0)) (?v_64 (- x_22 x_20))) (let ((?v_68 (= ?v_64 0)) (?v_1 (- x_13 cvclZero))) (let ((?v_69 (= ?v_1 0)) (?v_73 (- x_22 x_34))) (let ((?v_70 (< ?v_73 0)) (?v_84 (= ?v_66 1)) (?v_87 (not ?v_69)) (?v_89 (= ?v_66 2)) (?v_92 (= ?v_66 3)) (?v_76 (= ?v_1 1)) (?v_94 (= ?v_66 4))) (let ((?v_164 (not ?v_76)) (?v_97 (= ?v_66 5)) (?v_83 (- x_22 x_19))) (let ((?v_86 (= ?v_83 0)) (?v_91 (- x_22 x_33))) (let ((?v_88 (< ?v_91 0)) (?v_96 (= ?v_1 2))) (let ((?v_165 (not ?v_96)) (?v_99 (- x_22 x_18))) (let ((?v_101 (= ?v_99 0)) (?v_104 (- x_22 x_32))) (let ((?v_102 (< ?v_104 0)) (?v_107 (= ?v_1 3))) (let ((?v_166 (not ?v_107)) (?v_108 (< (- x_8 x_7) 0))) (let ((?v_112 (ite ?v_108 (< (- x_8 x_6) 0) (< (- x_7 x_6) 0))) (?v_148 (= (- x_20 x_6) 0)) (?v_128 (= (- x_19 x_7) 0)) (?v_130 (= (- x_18 x_8) 0)) (?v_117 (= (- x_13 x_9) 0)) (?v_118 (- x_10 cvclZero))) (let ((?v_132 (= ?v_118 0)) (?v_119 (= ?v_115 0)) (?v_123 (- cvclZero x_20))) (let ((?v_120 (< ?v_123 0)) (?v_135 (= ?v_118 1)) (?v_137 (not ?v_116)) (?v_139 (= ?v_118 2)) (?v_142 (= ?v_118 3)) (?v_126 (= ?v_0 1)) (?v_144 (= ?v_118 4))) (let ((?v_167 (not ?v_126)) (?v_147 (= ?v_118 5)) (?v_136 (= ?v_134 0)) (?v_141 (- cvclZero x_19))) (let ((?v_138 (< ?v_141 0)) (?v_146 (= ?v_0 2))) (let ((?v_168 (not ?v_146)) (?v_151 (= ?v_150 0)) (?v_154 (- cvclZero x_18))) (let ((?v_152 (< ?v_154 0)) (?v_157 (= ?v_0 3))) (let ((?v_169 (not ?v_157)) (?v_6 (- x_49 cvclZero)) (?v_27 (- x_51 cvclZero)) (?v_63 (- x_35 cvclZero)) (?v_81 (- x_37 cvclZero)) (?v_113 (- x_21 cvclZero)) (?v_131 (- x_23 cvclZero))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (not (< ?v_0 0)) (<= ?v_0 3)) (not (< ?v_1 0))) (<= ?v_1 3)) (not (< ?v_2 0))) (<= ?v_2 3)) (not (< ?v_3 0))) (<= ?v_3 3)) ?v_114) ?v_133) ?v_149) ?v_111) ?v_110) ?v_109) ?v_116) (or (and (and (and (and (and (and (and (and (and (= ?v_6 0) (ite ?v_5 (ite ?v_4 (< ?v_49 0) (< ?v_29 0)) (< ?v_7 0))) (ite ?v_5 (ite ?v_4 (= (- x_50 x_32) 0) (= (- x_50 x_33) 0)) (= (- x_50 x_34) 0))) ?v_14) ?v_23) ?v_25) ?v_48) ?v_24) ?v_26) ?v_8) (and (and (= ?v_6 1) (or (or (and (and (and (and (and (= ?v_27 1) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_28 ?v_10) ?v_11) ?v_12) x_39) ?v_21) ?v_13) (<= (- x_48 x_36) 2)) ?v_8) (and (and (and (and (and (and ?v_30 ?v_10) ?v_11) ?v_33) ?v_13) ?v_8) ?v_14)) (and (and (and (and (and (and (and ?v_35 x_25) ?v_15) ?v_11) ?v_20) x_40) ?v_158) (<= ?v_16 (- 4)))) (and (and (and (and (and (and (and ?v_38 ?v_18) ?v_11) ?v_19) x_39) x_40) ?v_13) ?v_8)) (and (and (and (and (and (and ?v_40 ?v_18) ?v_11) ?v_161) ?v_22) ?v_13) ?v_8)) (and (and (and (and (and (and ?v_45 x_25) x_26) ?v_11) ?v_22) ?v_47) ?v_13))) ?v_23) ?v_24) ?v_25) ?v_26) (and (and (and (and (and (= ?v_27 2) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_28 ?v_31) ?v_32) ?v_12) x_44) ?v_44) ?v_34) (<= (- x_47 x_36) 2)) ?v_8) (and (and (and (and (and (and ?v_30 ?v_31) ?v_32) ?v_33) ?v_34) ?v_8) ?v_23)) (and (and (and (and (and (and (and ?v_35 x_30) ?v_36) ?v_32) ?v_43) x_45) ?v_159) (<= ?v_37 (- 4)))) (and (and (and (and (and (and (and ?v_38 ?v_41) ?v_32) ?v_42) x_44) x_45) ?v_34) ?v_8)) (and (and (and (and (and (and ?v_40 ?v_41) ?v_32) ?v_162) ?v_46) ?v_34) ?v_8)) (and (and (and (and (and (and ?v_45 x_30) x_31) ?v_32) ?v_46) ?v_47) ?v_34))) ?v_14) ?v_48) ?v_25) ?v_26)) (and (and (and (and (and (= ?v_27 3) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_28 ?v_50) ?v_51) ?v_12) x_42) ?v_59) ?v_52) (<= (- x_46 x_36) 2)) ?v_8) (and (and (and (and (and (and ?v_30 ?v_50) ?v_51) ?v_33) ?v_52) ?v_8) ?v_25)) (and (and (and (and (and (and (and ?v_35 x_28) ?v_53) ?v_51) ?v_58) x_43) ?v_160) (<= ?v_54 (- 4)))) (and (and (and (and (and (and (and ?v_38 ?v_56) ?v_51) ?v_57) x_42) x_43) ?v_52) ?v_8)) (and (and (and (and (and (and ?v_40 ?v_56) ?v_51) ?v_163) ?v_60) ?v_52) ?v_8)) (and (and (and (and (and (and ?v_45 x_28) x_29) ?v_51) ?v_60) ?v_47) ?v_52))) ?v_14) ?v_48) ?v_23) ?v_24))) (= (- x_50 x_36) 0)))) (or (and (and (and (and (and (and (and (and (and (= ?v_63 0) (ite ?v_62 (ite ?v_61 (< ?v_99 0) (< ?v_83 0)) (< ?v_64 0))) (ite ?v_62 (ite ?v_61 (= (- x_36 x_18) 0) (= (- x_36 x_19) 0)) (= (- x_36 x_20) 0))) ?v_71) ?v_77) ?v_79) ?v_98) ?v_78) ?v_80) ?v_65) (and (and (= ?v_63 1) (or (or (and (and (and (and (and (= ?v_81 1) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_82 ?v_67) ?v_68) ?v_69) x_25) ?v_15) ?v_70) (<= (- x_34 x_22) 2)) ?v_65) (and (and (and (and (and (and ?v_84 ?v_67) ?v_68) ?v_87) ?v_70) ?v_65) ?v_71)) (and (and (and (and (and (and (and ?v_89 x_11) ?v_72) ?v_68) ?v_17) x_26) ?v_19) (<= ?v_73 (- 4)))) (and (and (and (and (and (and (and ?v_92 ?v_75) ?v_68) ?v_76) x_25) x_26) ?v_70) ?v_65)) (and (and (and (and (and (and ?v_94 ?v_75) ?v_68) ?v_164) ?v_10) ?v_70) ?v_65)) (and (and (and (and (and (and ?v_97 x_11) x_12) ?v_68) ?v_10) ?v_12) ?v_70))) ?v_77) ?v_78) ?v_79) ?v_80) (and (and (and (and (and (= ?v_81 2) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_82 ?v_85) ?v_86) ?v_69) x_30) ?v_36) ?v_88) (<= (- x_33 x_22) 2)) ?v_65) (and (and (and (and (and (and ?v_84 ?v_85) ?v_86) ?v_87) ?v_88) ?v_65) ?v_77)) (and (and (and (and (and (and (and ?v_89 x_16) ?v_90) ?v_86) ?v_39) x_31) ?v_42) (<= ?v_91 (- 4)))) (and (and (and (and (and (and (and ?v_92 ?v_95) ?v_86) ?v_96) x_30) x_31) ?v_88) ?v_65)) (and (and (and (and (and (and ?v_94 ?v_95) ?v_86) ?v_165) ?v_31) ?v_88) ?v_65)) (and (and (and (and (and (and ?v_97 x_16) x_17) ?v_86) ?v_31) ?v_12) ?v_88))) ?v_71) ?v_98) ?v_79) ?v_80)) (and (and (and (and (and (= ?v_81 3) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_82 ?v_100) ?v_101) ?v_69) x_28) ?v_53) ?v_102) (<= (- x_32 x_22) 2)) ?v_65) (and (and (and (and (and (and ?v_84 ?v_100) ?v_101) ?v_87) ?v_102) ?v_65) ?v_79)) (and (and (and (and (and (and (and ?v_89 x_14) ?v_103) ?v_101) ?v_55) x_29) ?v_57) (<= ?v_104 (- 4)))) (and (and (and (and (and (and (and ?v_92 ?v_106) ?v_101) ?v_107) x_28) x_29) ?v_102) ?v_65)) (and (and (and (and (and (and ?v_94 ?v_106) ?v_101) ?v_166) ?v_50) ?v_102) ?v_65)) (and (and (and (and (and (and ?v_97 x_14) x_15) ?v_101) ?v_50) ?v_12) ?v_102))) ?v_71) ?v_98) ?v_77) ?v_78))) (= (- x_36 x_22) 0)))) (or (and (and (and (and (and (and (and (and (and (= ?v_113 0) (ite ?v_112 (ite ?v_108 ?v_109 ?v_110) ?v_111)) (ite ?v_112 (ite ?v_108 (= (- x_22 x_8) 0) (= (- x_22 x_7) 0)) (= (- x_22 x_6) 0))) ?v_121) ?v_127) ?v_129) ?v_148) ?v_128) ?v_130) ?v_117) (and (and (= ?v_113 1) (or (or (and (and (and (and (and (= ?v_131 1) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_132 ?v_114) ?v_119) ?v_116) x_11) ?v_72) ?v_120) (<= (- x_20 cvclZero) 2)) ?v_117) (and (and (and (and (and (and ?v_135 ?v_114) ?v_119) ?v_137) ?v_120) ?v_117) ?v_121)) (and (and (and (and (and (and (and ?v_139 x_0) ?v_122) ?v_119) ?v_74) x_12) ?v_76) (<= ?v_123 (- 4)))) (and (and (and (and (and (and (and ?v_142 ?v_125) ?v_119) ?v_126) x_11) x_12) ?v_120) ?v_117)) (and (and (and (and (and (and ?v_144 ?v_125) ?v_119) ?v_167) ?v_67) ?v_120) ?v_117)) (and (and (and (and (and (and ?v_147 x_0) x_1) ?v_119) ?v_67) ?v_69) ?v_120))) ?v_127) ?v_128) ?v_129) ?v_130) (and (and (and (and (and (= ?v_131 2) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_132 ?v_133) ?v_136) ?v_116) x_16) ?v_90) ?v_138) (<= (- x_19 cvclZero) 2)) ?v_117) (and (and (and (and (and (and ?v_135 ?v_133) ?v_136) ?v_137) ?v_138) ?v_117) ?v_127)) (and (and (and (and (and (and (and ?v_139 x_2) ?v_140) ?v_136) ?v_93) x_17) ?v_96) (<= ?v_141 (- 4)))) (and (and (and (and (and (and (and ?v_142 ?v_145) ?v_136) ?v_146) x_16) x_17) ?v_138) ?v_117)) (and (and (and (and (and (and ?v_144 ?v_145) ?v_136) ?v_168) ?v_85) ?v_138) ?v_117)) (and (and (and (and (and (and ?v_147 x_2) x_3) ?v_136) ?v_85) ?v_69) ?v_138))) ?v_121) ?v_148) ?v_129) ?v_130)) (and (and (and (and (and (= ?v_131 3) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_132 ?v_149) ?v_151) ?v_116) x_14) ?v_103) ?v_152) (<= (- x_18 cvclZero) 2)) ?v_117) (and (and (and (and (and (and ?v_135 ?v_149) ?v_151) ?v_137) ?v_152) ?v_117) ?v_129)) (and (and (and (and (and (and (and ?v_139 x_4) ?v_153) ?v_151) ?v_105) x_15) ?v_107) (<= ?v_154 (- 4)))) (and (and (and (and (and (and (and ?v_142 ?v_156) ?v_151) ?v_157) x_14) x_15) ?v_152) ?v_117)) (and (and (and (and (and (and ?v_144 ?v_156) ?v_151) ?v_169) ?v_100) ?v_152) ?v_117)) (and (and (and (and (and (and ?v_147 x_4) x_5) ?v_151) ?v_100) ?v_69) ?v_152))) ?v_121) ?v_148) ?v_127) ?v_128))) (= (- x_22 cvclZero) 0)))) (or (or (or (or (or (or (or (or (or (or (or (and (and x_39 x_40) (not ?v_158)) (and (and x_44 x_45) (not ?v_159))) (and (and x_42 x_43) (not ?v_160))) (and (and x_25 x_26) ?v_161)) (and (and x_30 x_31) ?v_162)) (and (and x_28 x_29) ?v_163)) (and (and x_11 x_12) ?v_164)) (and (and x_16 x_17) ?v_165)) (and (and x_14 x_15) ?v_166)) (and (and x_0 x_1) ?v_167)) (and (and x_2 x_3) ?v_168)) (and (and x_4 x_5) ?v_169))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
