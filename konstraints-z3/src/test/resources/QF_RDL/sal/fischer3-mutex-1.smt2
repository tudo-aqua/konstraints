(set-info :smt-lib-version 2.6)
(set-logic QF_RDL)
(set-info :source |
Source unknown
This benchmark was automatically translated into SMT-LIB format from
CVC format using CVC Lite
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun cvclZero () Real)
(declare-fun x_0 () Bool)
(declare-fun x_1 () Bool)
(declare-fun x_2 () Bool)
(declare-fun x_3 () Bool)
(declare-fun x_4 () Bool)
(declare-fun x_5 () Bool)
(declare-fun x_6 () Real)
(declare-fun x_7 () Real)
(declare-fun x_8 () Real)
(declare-fun x_9 () Real)
(declare-fun x_10 () Real)
(declare-fun x_11 () Bool)
(declare-fun x_12 () Bool)
(declare-fun x_13 () Real)
(declare-fun x_14 () Bool)
(declare-fun x_15 () Bool)
(declare-fun x_16 () Bool)
(declare-fun x_17 () Bool)
(declare-fun x_18 () Real)
(declare-fun x_19 () Real)
(declare-fun x_20 () Real)
(declare-fun x_21 () Real)
(declare-fun x_22 () Real)
(declare-fun x_23 () Real)
(assert (let ((?v_21 (not x_11)) (?v_22 (not x_12))) (let ((?v_23 (and ?v_21 ?v_22)) (?v_59 (not x_14)) (?v_60 (not x_15))) (let ((?v_61 (and ?v_59 ?v_60)) (?v_44 (not x_16)) (?v_45 (not x_17))) (let ((?v_47 (and ?v_44 ?v_45)) (?v_26 (and (= x_14 x_4) (= x_15 x_5))) (?v_56 (not x_4)) (?v_54 (not x_5))) (let ((?v_50 (and ?v_56 ?v_54)) (?v_15 (and (= x_11 x_0) (= x_12 x_1))) (?v_40 (not x_2)) (?v_37 (not x_3))) (let ((?v_30 (and ?v_40 ?v_37)) (?v_57 (and ?v_56 x_5)) (?v_24 (and (= x_16 x_2) (= x_17 x_3))) (?v_42 (and ?v_40 x_3)) (?v_18 (not x_0)) (?v_16 (not x_1))) (let ((?v_8 (and ?v_18 ?v_16)) (?v_19 (and ?v_18 x_1)) (?v_9 (- cvclZero x_6))) (let ((?v_5 (< ?v_9 0)) (?v_31 (- cvclZero x_7))) (let ((?v_4 (< ?v_31 0)) (?v_51 (- cvclZero x_8))) (let ((?v_3 (< ?v_51 0)) (?v_0 (- x_9 cvclZero))) (let ((?v_10 (= ?v_0 0)) (?v_2 (< (- x_8 x_7) 0))) (let ((?v_6 (ite ?v_2 (< (- x_8 x_6) 0) (< (- x_7 x_6) 0))) (?v_49 (= (- x_20 x_6) 0)) (?v_25 (= (- x_19 x_7) 0)) (?v_27 (= (- x_18 x_8) 0)) (?v_11 (= (- x_13 x_9) 0)) (?v_12 (- x_10 cvclZero))) (let ((?v_29 (= ?v_12 0)) (?v_13 (= ?v_9 0)) (?v_17 (- cvclZero x_20))) (let ((?v_14 (< ?v_17 0)) (?v_32 (= ?v_12 1)) (?v_34 (not ?v_10)) (?v_36 (= ?v_12 2)) (?v_1 (- x_13 cvclZero))) (let ((?v_62 (= ?v_1 1)) (?v_39 (= ?v_12 3)) (?v_20 (= ?v_0 1)) (?v_41 (= ?v_12 4))) (let ((?v_65 (not ?v_20)) (?v_46 (= ?v_12 5)) (?v_48 (= ?v_1 0)) (?v_33 (= ?v_31 0)) (?v_38 (- cvclZero x_19))) (let ((?v_35 (< ?v_38 0)) (?v_63 (= ?v_1 2)) (?v_43 (= ?v_0 2))) (let ((?v_66 (not ?v_43)) (?v_52 (= ?v_51 0)) (?v_55 (- cvclZero x_18))) (let ((?v_53 (< ?v_55 0)) (?v_64 (= ?v_1 3)) (?v_58 (= ?v_0 3))) (let ((?v_67 (not ?v_58)) (?v_7 (- x_21 cvclZero)) (?v_28 (- x_23 cvclZero))) (and (and (and (and (and (and (and (and (and (and (and (and (not (< ?v_0 0)) (<= ?v_0 3)) (not (< ?v_1 0))) (<= ?v_1 3)) ?v_8) ?v_30) ?v_50) ?v_5) ?v_4) ?v_3) ?v_10) (or (and (and (and (and (and (and (and (and (and (= ?v_7 0) (ite ?v_6 (ite ?v_2 ?v_3 ?v_4) ?v_5)) (ite ?v_6 (ite ?v_2 (= (- x_22 x_8) 0) (= (- x_22 x_7) 0)) (= (- x_22 x_6) 0))) ?v_15) ?v_24) ?v_26) ?v_49) ?v_25) ?v_27) ?v_11) (and (and (= ?v_7 1) (or (or (and (and (and (and (and (= ?v_28 1) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_29 ?v_8) ?v_13) ?v_10) x_11) ?v_22) ?v_14) (<= (- x_20 cvclZero) 2)) ?v_11) (and (and (and (and (and (and ?v_32 ?v_8) ?v_13) ?v_34) ?v_14) ?v_11) ?v_15)) (and (and (and (and (and (and (and ?v_36 x_0) ?v_16) ?v_13) ?v_21) x_12) ?v_62) (<= ?v_17 (- 4)))) (and (and (and (and (and (and (and ?v_39 ?v_19) ?v_13) ?v_20) x_11) x_12) ?v_14) ?v_11)) (and (and (and (and (and (and ?v_41 ?v_19) ?v_13) ?v_65) ?v_23) ?v_14) ?v_11)) (and (and (and (and (and (and ?v_46 x_0) x_1) ?v_13) ?v_23) ?v_48) ?v_14))) ?v_24) ?v_25) ?v_26) ?v_27) (and (and (and (and (and (= ?v_28 2) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_29 ?v_30) ?v_33) ?v_10) x_16) ?v_45) ?v_35) (<= (- x_19 cvclZero) 2)) ?v_11) (and (and (and (and (and (and ?v_32 ?v_30) ?v_33) ?v_34) ?v_35) ?v_11) ?v_24)) (and (and (and (and (and (and (and ?v_36 x_2) ?v_37) ?v_33) ?v_44) x_17) ?v_63) (<= ?v_38 (- 4)))) (and (and (and (and (and (and (and ?v_39 ?v_42) ?v_33) ?v_43) x_16) x_17) ?v_35) ?v_11)) (and (and (and (and (and (and ?v_41 ?v_42) ?v_33) ?v_66) ?v_47) ?v_35) ?v_11)) (and (and (and (and (and (and ?v_46 x_2) x_3) ?v_33) ?v_47) ?v_48) ?v_35))) ?v_15) ?v_49) ?v_26) ?v_27)) (and (and (and (and (and (= ?v_28 3) (or (or (or (or (or (and (and (and (and (and (and (and (and ?v_29 ?v_50) ?v_52) ?v_10) x_14) ?v_60) ?v_53) (<= (- x_18 cvclZero) 2)) ?v_11) (and (and (and (and (and (and ?v_32 ?v_50) ?v_52) ?v_34) ?v_53) ?v_11) ?v_26)) (and (and (and (and (and (and (and ?v_36 x_4) ?v_54) ?v_52) ?v_59) x_15) ?v_64) (<= ?v_55 (- 4)))) (and (and (and (and (and (and (and ?v_39 ?v_57) ?v_52) ?v_58) x_14) x_15) ?v_53) ?v_11)) (and (and (and (and (and (and ?v_41 ?v_57) ?v_52) ?v_67) ?v_61) ?v_53) ?v_11)) (and (and (and (and (and (and ?v_46 x_4) x_5) ?v_52) ?v_61) ?v_48) ?v_53))) ?v_15) ?v_49) ?v_24) ?v_25))) (= (- x_22 cvclZero) 0)))) (or (or (or (or (or (and (and x_11 x_12) (not ?v_62)) (and (and x_16 x_17) (not ?v_63))) (and (and x_14 x_15) (not ?v_64))) (and (and x_0 x_1) ?v_65)) (and (and x_2 x_3) ?v_66)) (and (and x_4 x_5) ?v_67))))))))))))))))))))))))
(check-sat)
(exit)
