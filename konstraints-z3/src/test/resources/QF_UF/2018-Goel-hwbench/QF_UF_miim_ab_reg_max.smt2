(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: miim
query-maker: "Yices 2"
query-time: 1.802000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$2 0)
(declare-sort utt$3 0)
(declare-sort utt$4 0)
(declare-sort utt$5 0)
(declare-sort utt$6 0)
(declare-sort utt$7 0)
(declare-sort utt$8 0)
(declare-sort utt$16 0)
(declare-sort utt$24 0)
(declare-sort utt$25 0)
(declare-sort utt$26 0)
(declare-sort utt$27 0)
(declare-sort utt$31 0)
(declare-sort utt$32 0)
(declare-fun Add_32_32_32 (utt$32 utt$32 ) utt$32)
(declare-fun Add_6_6_6 (utt$6 utt$6 ) utt$6)
(declare-fun Concat_16_8_8 (utt$8 utt$8 ) utt$16)
(declare-fun Concat_2_1_1 (Bool Bool ) utt$2)
(declare-fun Concat_32_1_31 (Bool utt$31 ) utt$32)
(declare-fun Concat_32_5_27 (utt$5 utt$27 ) utt$32)
(declare-fun Concat_32_6_26 (utt$6 utt$26 ) utt$32)
(declare-fun Concat_32_7_25 (utt$7 utt$25 ) utt$32)
(declare-fun Concat_32_8_24 (utt$8 utt$24 ) utt$32)
(declare-fun Concat_8_1_7 (Bool utt$7 ) utt$8)
(declare-fun Concat_8_2_5_1 (utt$2 utt$5 Bool ) utt$8)
(declare-fun Concat_8_4_1_1_2 (utt$4 Bool Bool utt$2 ) utt$8)
(declare-fun Extract_1_0_0_2 (utt$2 ) Bool)
(declare-fun Extract_1_0_0_5 (utt$5 ) Bool)
(declare-fun Extract_1_1_1_2 (utt$2 ) Bool)
(declare-fun Extract_1_2_2_8 (utt$8 ) Bool)
(declare-fun Extract_1_4_4_6 (utt$6 ) Bool)
(declare-fun Extract_1_5_5_6 (utt$6 ) Bool)
(declare-fun Extract_1_7_7_8 (utt$8 ) Bool)
(declare-fun Extract_3_3_1_6 (utt$6 ) utt$3)
(declare-fun Extract_4_4_1_5 (utt$5 ) utt$4)
(declare-fun Extract_5_4_0_32 (utt$32 ) utt$5)
(declare-fun Extract_7_6_0_8 (utt$8 ) utt$7)
(declare-fun Extract_7_7_1_8 (utt$8 ) utt$7)
(declare-fun Extract_8_15_8_16 (utt$16 ) utt$8)
(declare-fun Extract_8_7_0_16 (utt$16 ) utt$8)
(declare-fun Extract_8_7_0_32 (utt$32 ) utt$8)
(declare-fun Le_1_32_32 (utt$32 utt$32 ) Bool)
(declare-fun ReductionAnd_1_3 (utt$3 ) Bool)
(declare-fun ReductionAnd_1_6 (utt$6 ) Bool)
(declare-fun Sub_32_32_32 (utt$32 utt$32 ) utt$32)
(declare-fun Sub_8_8_8 (utt$8 utt$8 ) utt$8)
(declare-fun y$101 () Bool)
(declare-fun y$11 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$131 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$169 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$199 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$20 () Bool)
(declare-fun y$207 () Bool)
(declare-fun y$215 () Bool)
(declare-fun y$22 () Bool)
(declare-fun y$223 () Bool)
(declare-fun y$231 () Bool)
(declare-fun y$239 () Bool)
(declare-fun y$24 () Bool)
(declare-fun y$247 () Bool)
(declare-fun y$255 () Bool)
(declare-fun y$26 () Bool)
(declare-fun y$260 () Bool)
(declare-fun y$269 () Bool)
(declare-fun y$272 () Bool)
(declare-fun y$28 () Bool)
(declare-fun y$281 () Bool)
(declare-fun y$287 () Bool)
(declare-fun y$297 () Bool)
(declare-fun y$30 () Bool)
(declare-fun y$313 () Bool)
(declare-fun y$32 () Bool)
(declare-fun y$329 () Bool)
(declare-fun y$34 () Bool)
(declare-fun y$345 () Bool)
(declare-fun y$350 () Bool)
(declare-fun y$352 () Bool)
(declare-fun y$357 () Bool)
(declare-fun y$359 () Bool)
(declare-fun y$36 () Bool)
(declare-fun y$364 () Bool)
(declare-fun y$372 () Bool)
(declare-fun y$378 () Bool)
(declare-fun y$38 () Bool)
(declare-fun y$388 () Bool)
(declare-fun y$40 () Bool)
(declare-fun y$401 () utt$7)
(declare-fun y$404 () utt$7)
(declare-fun y$405 () utt$7)
(declare-fun y$413 () utt$8)
(declare-fun y$42 () Bool)
(declare-fun y$423 () Bool)
(declare-fun y$425 () Bool)
(declare-fun y$431 () Bool)
(declare-fun y$435 () Bool)
(declare-fun y$439 () Bool)
(declare-fun y$44 () Bool)
(declare-fun y$443 () Bool)
(declare-fun y$449 () Bool)
(declare-fun y$458 () Bool)
(declare-fun y$46 () Bool)
(declare-fun y$460 () Bool)
(declare-fun y$463 () utt$3)
(declare-fun y$467 () Bool)
(declare-fun y$48 () Bool)
(declare-fun y$482 () Bool)
(declare-fun y$484 () Bool)
(declare-fun y$495 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$50 () Bool)
(declare-fun y$503 () Bool)
(declare-fun y$507 () Bool)
(declare-fun y$509 () Bool)
(declare-fun y$52 () Bool)
(declare-fun y$520 () Bool)
(declare-fun y$530 () utt$5)
(declare-fun y$544 () Bool)
(declare-fun y$548 () Bool)
(declare-fun y$549 () Bool)
(declare-fun y$55 () Bool)
(declare-fun y$564 () Bool)
(declare-fun y$567 () utt$8)
(declare-fun y$57 () Bool)
(declare-fun y$573 () utt$8)
(declare-fun y$589 () Bool)
(declare-fun y$591 () Bool)
(declare-fun y$593 () Bool)
(declare-fun y$60 () Bool)
(declare-fun y$603 () Bool)
(declare-fun y$607 () Bool)
(declare-fun y$612 () Bool)
(declare-fun y$613 () Bool)
(declare-fun y$614 () Bool)
(declare-fun y$617 () Bool)
(declare-fun y$62 () Bool)
(declare-fun y$623 () utt$8)
(declare-fun y$625 () utt$8)
(declare-fun y$632 () Bool)
(declare-fun y$638 () utt$4)
(declare-fun y$64 () Bool)
(declare-fun y$656 () utt$7)
(declare-fun y$66 () Bool)
(declare-fun y$672 () Bool)
(declare-fun y$673 () Bool)
(declare-fun y$68 () Bool)
(declare-fun y$680 () Bool)
(declare-fun y$693 () Bool)
(declare-fun y$696 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$70 () Bool)
(declare-fun y$718 () Bool)
(declare-fun y$719 () Bool)
(declare-fun y$72 () Bool)
(declare-fun y$722 () Bool)
(declare-fun y$735 () Bool)
(declare-fun y$738 () Bool)
(declare-fun y$739 () Bool)
(declare-fun y$74 () Bool)
(declare-fun y$740 () Bool)
(declare-fun y$76 () Bool)
(declare-fun y$78 () Bool)
(declare-fun y$83 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$94 () Bool)
(declare-fun y$98 () Bool)
(declare-fun y$BitCounter () utt$6)
(declare-fun y$BitCounter$next () utt$6)
(declare-fun y$BitCounter$next_rhs () utt$6)
(declare-fun y$BitCounter$next_rhs_op () utt$6)
(declare-fun y$Busy () Bool)
(declare-fun y$Busy$next () Bool)
(declare-fun y$Busy$next_op () Bool)
(declare-fun y$Busy_op () Bool)
(declare-fun y$ClkGen.Counter () utt$8)
(declare-fun y$ClkGen.Counter$next () utt$8)
(declare-fun y$ClkGen.Counter$next_rhs () utt$8)
(declare-fun y$ClkGen.Counter$next_rhs_op () utt$8)
(declare-fun y$ClkGen.CounterPreset () utt$8)
(declare-fun y$ClkGen.Mdc () Bool)
(declare-fun y$ClkGen.MdcEn () Bool)
(declare-fun y$ClkGen.MdcEn_op () Bool)
(declare-fun y$ClkGen.TempDivider () utt$8)
(declare-fun y$ClkGen.TempDivider_op () utt$8)
(declare-fun y$CtrlData () utt$16)
(declare-fun y$Divider () utt$8)
(declare-fun y$EndBusy () Bool)
(declare-fun y$EndBusy$next () Bool)
(declare-fun y$EndBusy$next_rhs () Bool)
(declare-fun y$EndBusy$next_rhs_op () Bool)
(declare-fun y$EndOp () Bool)
(declare-fun y$EndOp_op () Bool)
(declare-fun y$Fiad () utt$5)
(declare-fun y$InProgress () Bool)
(declare-fun y$InProgress$next () Bool)
(declare-fun y$InProgress$next_rhs () Bool)
(declare-fun y$InProgress$next_rhs_op () Bool)
(declare-fun y$InProgress_q1 () Bool)
(declare-fun y$InProgress_q1$next () Bool)
(declare-fun y$InProgress_q1$next_rhs () Bool)
(declare-fun y$InProgress_q1$next_rhs_op () Bool)
(declare-fun y$InProgress_q2 () Bool)
(declare-fun y$InProgress_q2$next () Bool)
(declare-fun y$InProgress_q2$next_rhs () Bool)
(declare-fun y$InProgress_q2$next_rhs_op () Bool)
(declare-fun y$InProgress_q3 () Bool)
(declare-fun y$InProgress_q3$next () Bool)
(declare-fun y$InProgress_q3$next_rhs () Bool)
(declare-fun y$InProgress_q3$next_rhs_op () Bool)
(declare-fun y$LatchByte () utt$2)
(declare-fun y$LatchByte$next () utt$2)
(declare-fun y$LatchByte$next_rhs () utt$2)
(declare-fun y$LatchByte$next_rhs_op () utt$2)
(declare-fun y$LatchByte0_d () Bool)
(declare-fun y$LatchByte0_d$next () Bool)
(declare-fun y$LatchByte0_d$next_rhs () Bool)
(declare-fun y$LatchByte0_d$next_rhs_op () Bool)
(declare-fun y$LatchByte0_d2 () Bool)
(declare-fun y$LatchByte0_d2_op () Bool)
(declare-fun y$LatchByte1_d () Bool)
(declare-fun y$LatchByte1_d$next () Bool)
(declare-fun y$LatchByte1_d$next_rhs () Bool)
(declare-fun y$LatchByte1_d$next_rhs_op () Bool)
(declare-fun y$LatchByte1_d2 () Bool)
(declare-fun y$LatchByte1_d2_op () Bool)
(declare-fun y$LinkOK () Bool)
(declare-fun y$LinkOK$next () Bool)
(declare-fun y$LinkOK$next_rhs () Bool)
(declare-fun y$LinkOK$next_rhs_op () Bool)
(declare-fun y$Mdc () Bool)
(declare-fun y$Mdc$next () Bool)
(declare-fun y$Mdc$next_rhs () Bool)
(declare-fun y$Mdc$next_rhs_op () Bool)
(declare-fun y$Mdi () Bool)
(declare-fun y$Mdo$next () Bool)
(declare-fun y$Mdo$next_rhs () Bool)
(declare-fun y$Mdo$next_rhs_op () Bool)
(declare-fun y$NoPre () Bool)
(declare-fun y$Nvalid () Bool)
(declare-fun y$Nvalid$next () Bool)
(declare-fun y$Nvalid$next_rhs () Bool)
(declare-fun y$Nvalid$next_rhs_op () Bool)
(declare-fun y$OutCtrl.MdcFrame () Bool)
(declare-fun y$OutCtrl.MdcFrame$next () Bool)
(declare-fun y$OutCtrl.MdcFrame$next_rhs () Bool)
(declare-fun y$OutCtrl.MdcFrame$next_rhs_op () Bool)
(declare-fun y$OutCtrl.MdcFrame_d2 () Bool)
(declare-fun y$OutCtrl.MdcFrame_d2$next () Bool)
(declare-fun y$OutCtrl.MdcFrame_d2$next_rhs () Bool)
(declare-fun y$OutCtrl.MdcFrame_d2$next_rhs_op () Bool)
(declare-fun y$OutCtrl.Mdo () Bool)
(declare-fun y$OutCtrl.MdoEn () Bool)
(declare-fun y$OutCtrl.MdoEn$next () Bool)
(declare-fun y$OutCtrl.MdoEn$next_rhs () Bool)
(declare-fun y$OutCtrl.MdoEn$next_rhs_op () Bool)
(declare-fun y$OutCtrl.MdoEn_d2 () Bool)
(declare-fun y$OutCtrl.MdoEn_d2$next () Bool)
(declare-fun y$OutCtrl.MdoEn_d2$next_rhs () Bool)
(declare-fun y$OutCtrl.MdoEn_d2$next_rhs_op () Bool)
(declare-fun y$OutCtrl.SerialEn () Bool)
(declare-fun y$OutCtrl.SerialEn_op () Bool)
(declare-fun y$OutCtrl.SerialEn_q () Bool)
(declare-fun y$OutCtrl.SerialEn_q$next () Bool)
(declare-fun y$OutCtrl.SerialEn_q$next_rhs () Bool)
(declare-fun y$OutCtrl.SerialEn_q$next_rhs_op () Bool)
(declare-fun y$Prsd () utt$16)
(declare-fun y$Prsd$next () utt$16)
(declare-fun y$Prsd$next_rhs () utt$16)
(declare-fun y$Prsd$next_rhs_op () utt$16)
(declare-fun y$RStat () Bool)
(declare-fun y$RStatStart () Bool)
(declare-fun y$RStatStart$next () Bool)
(declare-fun y$RStatStart$next_rhs () Bool)
(declare-fun y$RStatStart$next_rhs_op () Bool)
(declare-fun y$RStatStart_q1 () Bool)
(declare-fun y$RStatStart_q1$next () Bool)
(declare-fun y$RStatStart_q1$next_rhs () Bool)
(declare-fun y$RStatStart_q1$next_rhs_op () Bool)
(declare-fun y$RStatStart_q2 () Bool)
(declare-fun y$RStatStart_q2$next () Bool)
(declare-fun y$RStatStart_q2$next_rhs () Bool)
(declare-fun y$RStatStart_q2$next_rhs_op () Bool)
(declare-fun y$RStat_q2 () Bool)
(declare-fun y$RStat_q2$next () Bool)
(declare-fun y$RStat_q3 () Bool)
(declare-fun y$RStat_q3$next () Bool)
(declare-fun y$RStat_q3$next_rhs () Bool)
(declare-fun y$RStat_q3$next_rhs_op () Bool)
(declare-fun y$ReadStatusOp () Bool)
(declare-fun y$ReadStatusOp_op () Bool)
(declare-fun y$Reset () Bool)
(declare-fun y$Rgad () utt$5)
(declare-fun y$ScanIncr () Bool)
(declare-fun y$ScanPHYAddr () utt$5)
(declare-fun y$ScanPHYAddr$next () utt$5)
(declare-fun y$ScanPHYAddr$next_rhs () utt$5)
(declare-fun y$ScanPHYAddr$next_rhs_op () utt$5)
(declare-fun y$ScanPHYAddrValid () Bool)
(declare-fun y$ScanPHYAddrValid$next () Bool)
(declare-fun y$ScanPHYAddrValid$next_rhs () Bool)
(declare-fun y$ScanPHYAddrValid$next_rhs_op () Bool)
(declare-fun y$ScanStat () Bool)
(declare-fun y$ScanStat_q2 () Bool)
(declare-fun y$ScanStat_q2$next () Bool)
(declare-fun y$ScanStat_q2$next_rhs () Bool)
(declare-fun y$ScanStat_q2$next_rhs_op () Bool)
(declare-fun y$ScanStatusOp () Bool)
(declare-fun y$ScanStatusOp_op () Bool)
(declare-fun y$ShftRg.FiadReg () utt$5)
(declare-fun y$ShftRg.IncrementAddr () Bool)
(declare-fun y$ShftRg.IncrementAddr_op () Bool)
(declare-fun y$ShftRg.LinkOK () Bool)
(declare-fun y$ShftRg.Prsd () utt$16)
(declare-fun y$ShftRg.ShiftReg () utt$8)
(declare-fun y$ShftRg.ShiftReg$next () utt$8)
(declare-fun y$ShftRg.ShiftReg$next_rhs () utt$8)
(declare-fun y$ShftRg.ShiftReg$next_rhs_op () utt$8)
(declare-fun y$StartOp () Bool)
(declare-fun y$StartOp_op () Bool)
(declare-fun y$StatusSampled () Bool)
(declare-fun y$StatusSampledEnd () Bool)
(declare-fun y$StatusSampledEnd$next () Bool)
(declare-fun y$StatusSampledEnd$next_rhs () Bool)
(declare-fun y$StatusSampledEnd$next_rhs_op () Bool)
(declare-fun y$StatusSampled_op () Bool)
(declare-fun y$SyncStatMdcEn () Bool)
(declare-fun y$SyncStatMdcEn$next () Bool)
(declare-fun y$SyncStatMdcEn$next_rhs () Bool)
(declare-fun y$SyncStatMdcEn$next_rhs_op () Bool)
(declare-fun y$WCtrlData () Bool)
(declare-fun y$WCtrlDataStart () Bool)
(declare-fun y$WCtrlDataStart$next () Bool)
(declare-fun y$WCtrlDataStart$next_rhs () Bool)
(declare-fun y$WCtrlDataStart$next_rhs_op () Bool)
(declare-fun y$WCtrlDataStart_q1 () Bool)
(declare-fun y$WCtrlDataStart_q1$next () Bool)
(declare-fun y$WCtrlDataStart_q1$next_rhs () Bool)
(declare-fun y$WCtrlDataStart_q1$next_rhs_op () Bool)
(declare-fun y$WCtrlDataStart_q2 () Bool)
(declare-fun y$WCtrlDataStart_q2$next () Bool)
(declare-fun y$WCtrlDataStart_q2$next_rhs () Bool)
(declare-fun y$WCtrlDataStart_q2$next_rhs_op () Bool)
(declare-fun y$WCtrlData_q2 () Bool)
(declare-fun y$WCtrlData_q2$next () Bool)
(declare-fun y$WCtrlData_q3 () Bool)
(declare-fun y$WCtrlData_q3$next () Bool)
(declare-fun y$WCtrlData_q3$next_rhs () Bool)
(declare-fun y$WCtrlData_q3$next_rhs_op () Bool)
(declare-fun y$WriteDataOp () Bool)
(declare-fun y$WriteDataOp_op () Bool)
(declare-fun y$WriteOp () Bool)
(declare-fun y$WriteOp$next () Bool)
(declare-fun y$WriteOp$next_rhs () Bool)
(declare-fun y$WriteOp$next_rhs_op () Bool)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n0s16 () utt$16)
(declare-fun y$n0s2 () utt$2)
(declare-fun y$n0s24 () utt$24)
(declare-fun y$n0s25 () utt$25)
(declare-fun y$n0s26 () utt$26)
(declare-fun y$n0s27 () utt$27)
(declare-fun y$n0s31 () utt$31)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n0s5 () utt$5)
(declare-fun y$n0s6 () utt$6)
(declare-fun y$n0s8 () utt$8)
(declare-fun y$n1s1 () Bool)
(declare-fun y$n1s2 () utt$2)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s5 () utt$5)
(declare-fun y$n1s6 () utt$6)
(declare-fun y$n1s7 () utt$7)
(declare-fun y$n1s8 () utt$8)
(declare-fun y$n2s2 () utt$2)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$n2s8 () utt$8)
(declare-fun y$n31s5 () utt$5)
(declare-fun y$n32s6 () utt$6)
(declare-fun y$n33s6 () utt$6)
(declare-fun y$n40s6 () utt$6)
(declare-fun y$n48s6 () utt$6)
(declare-fun y$n55s6 () utt$6)
(declare-fun y$n56s6 () utt$6)
(declare-fun y$n63s6 () utt$6)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$prop0 () Bool)
(declare-fun y$prop0$next () Bool)
(declare-fun y$prop0$next_op () Bool)
(declare-fun y$prop0_op () Bool)
(declare-fun y$s$100 () utt$6)
(declare-fun y$s$100_op () utt$6)
(declare-fun y$s$101 () utt$6)
(declare-fun y$s$101_op () utt$6)
(declare-fun y$s$102 () utt$6)
(declare-fun y$s$102_op () utt$6)
(declare-fun y$s$103 () utt$6)
(declare-fun y$s$103_op () utt$6)
(declare-fun y$s$104 () utt$6)
(declare-fun y$s$104_op () utt$6)
(declare-fun y$s$105 () utt$6)
(declare-fun y$s$105_op () utt$6)
(declare-fun y$s$106 () Bool)
(declare-fun y$s$106_op () Bool)
(declare-fun y$s$107 () Bool)
(declare-fun y$s$107_op () Bool)
(declare-fun y$s$108 () Bool)
(declare-fun y$s$108_op () Bool)
(declare-fun y$s$109 () Bool)
(declare-fun y$s$109_op () Bool)
(declare-fun y$s$110 () Bool)
(declare-fun y$s$110_op () Bool)
(declare-fun y$s$111 () Bool)
(declare-fun y$s$111_op () Bool)
(declare-fun y$s$112 () Bool)
(declare-fun y$s$112_op () Bool)
(declare-fun y$s$113 () Bool)
(declare-fun y$s$113_op () Bool)
(declare-fun y$s$114 () Bool)
(declare-fun y$s$114_op () Bool)
(declare-fun y$s$115 () Bool)
(declare-fun y$s$115_op () Bool)
(declare-fun y$s$116 () Bool)
(declare-fun y$s$116_op () Bool)
(declare-fun y$s$117 () Bool)
(declare-fun y$s$117_op () Bool)
(declare-fun y$s$118 () Bool)
(declare-fun y$s$118_op () Bool)
(declare-fun y$s$119 () Bool)
(declare-fun y$s$119_op () Bool)
(declare-fun y$s$120 () Bool)
(declare-fun y$s$120_op () Bool)
(declare-fun y$s$121 () Bool)
(declare-fun y$s$121_op () Bool)
(declare-fun y$s$122 () Bool)
(declare-fun y$s$122_op () Bool)
(declare-fun y$s$123 () Bool)
(declare-fun y$s$123_op () Bool)
(declare-fun y$s$124 () Bool)
(declare-fun y$s$124_op () Bool)
(declare-fun y$s$125 () Bool)
(declare-fun y$s$125_op () Bool)
(declare-fun y$s$126 () Bool)
(declare-fun y$s$126_op () Bool)
(declare-fun y$s$127 () Bool)
(declare-fun y$s$127_op () Bool)
(declare-fun y$s$128 () Bool)
(declare-fun y$s$128_op () Bool)
(declare-fun y$s$129 () Bool)
(declare-fun y$s$129_op () Bool)
(declare-fun y$s$130 () Bool)
(declare-fun y$s$130_op () Bool)
(declare-fun y$s$131 () Bool)
(declare-fun y$s$131_op () Bool)
(declare-fun y$s$132 () Bool)
(declare-fun y$s$132_op () Bool)
(declare-fun y$s$133 () Bool)
(declare-fun y$s$133_op () Bool)
(declare-fun y$s$134 () Bool)
(declare-fun y$s$134_op () Bool)
(declare-fun y$s$135 () Bool)
(declare-fun y$s$135_op () Bool)
(declare-fun y$s$136 () Bool)
(declare-fun y$s$136_op () Bool)
(declare-fun y$s$137 () Bool)
(declare-fun y$s$137_op () Bool)
(declare-fun y$s$138 () Bool)
(declare-fun y$s$138_op () Bool)
(declare-fun y$s$139 () Bool)
(declare-fun y$s$139_op () Bool)
(declare-fun y$s$140 () Bool)
(declare-fun y$s$140_op () Bool)
(declare-fun y$s$141 () Bool)
(declare-fun y$s$141_op () Bool)
(declare-fun y$s$144 () utt$8)
(declare-fun y$s$144_op () utt$8)
(declare-fun y$s$145 () Bool)
(declare-fun y$s$145_op () Bool)
(declare-fun y$s$146 () Bool)
(declare-fun y$s$146_op () Bool)
(declare-fun y$s$147 () Bool)
(declare-fun y$s$147_op () Bool)
(declare-fun y$s$150 () Bool)
(declare-fun y$s$150_op () Bool)
(declare-fun y$s$151 () utt$8)
(declare-fun y$s$151_op () utt$8)
(declare-fun y$s$153 () utt$8)
(declare-fun y$s$153_op () utt$8)
(declare-fun y$s$160 () Bool)
(declare-fun y$s$160_op () Bool)
(declare-fun y$s$161 () Bool)
(declare-fun y$s$161_op () Bool)
(declare-fun y$s$162 () Bool)
(declare-fun y$s$162_op () Bool)
(declare-fun y$s$163 () Bool)
(declare-fun y$s$163_op () Bool)
(declare-fun y$s$165 () Bool)
(declare-fun y$s$165_op () Bool)
(declare-fun y$s$166 () Bool)
(declare-fun y$s$166_op () Bool)
(declare-fun y$s$167 () Bool)
(declare-fun y$s$167_op () Bool)
(declare-fun y$s$168 () Bool)
(declare-fun y$s$168_op () Bool)
(declare-fun y$s$169 () Bool)
(declare-fun y$s$169_op () Bool)
(declare-fun y$s$170 () Bool)
(declare-fun y$s$170_op () Bool)
(declare-fun y$s$171 () Bool)
(declare-fun y$s$171_op () Bool)
(declare-fun y$s$179 () Bool)
(declare-fun y$s$179_op () Bool)
(declare-fun y$s$180 () Bool)
(declare-fun y$s$180_op () Bool)
(declare-fun y$s$181 () Bool)
(declare-fun y$s$181_op () Bool)
(declare-fun y$s$182 () Bool)
(declare-fun y$s$182_op () Bool)
(declare-fun y$s$183 () Bool)
(declare-fun y$s$183_op () Bool)
(declare-fun y$s$184 () Bool)
(declare-fun y$s$184_op () Bool)
(declare-fun y$s$185 () Bool)
(declare-fun y$s$185_op () Bool)
(declare-fun y$s$186 () Bool)
(declare-fun y$s$186_op () Bool)
(declare-fun y$s$191 () utt$5)
(declare-fun y$s$191_op () utt$5)
(declare-fun y$s$192 () Bool)
(declare-fun y$s$192_op () Bool)
(declare-fun y$s$193 () utt$16)
(declare-fun y$s$193_op () utt$16)
(declare-fun y$s$194 () utt$8)
(declare-fun y$s$194_op () utt$8)
(declare-fun y$s$195 () utt$5)
(declare-fun y$s$195_op () utt$5)
(declare-fun y$s$196 () Bool)
(declare-fun y$s$196_op () Bool)
(declare-fun y$s$197 () utt$8)
(declare-fun y$s$197_op () utt$8)
(declare-fun y$s$198 () utt$8)
(declare-fun y$s$198_op () utt$8)
(declare-fun y$s$199 () utt$8)
(declare-fun y$s$199_op () utt$8)
(declare-fun y$s$200 () utt$32)
(declare-fun y$s$200_op () utt$32)
(declare-fun y$s$201 () Bool)
(declare-fun y$s$201_op () Bool)
(declare-fun y$s$203 () Bool)
(declare-fun y$s$203_op () Bool)
(declare-fun y$s$204 () Bool)
(declare-fun y$s$204_op () Bool)
(declare-fun y$s$205 () Bool)
(declare-fun y$s$205_op () Bool)
(declare-fun y$s$206 () utt$8)
(declare-fun y$s$206_op () utt$8)
(declare-fun y$s$207 () utt$8)
(declare-fun y$s$207_op () utt$8)
(declare-fun y$s$208 () utt$8)
(declare-fun y$s$208_op () utt$8)
(declare-fun y$s$209 () utt$8)
(declare-fun y$s$209_op () utt$8)
(declare-fun y$s$214 () Bool)
(declare-fun y$s$214_op () Bool)
(declare-fun y$s$215 () utt$5)
(declare-fun y$s$215_op () utt$5)
(declare-fun y$s$216 () utt$5)
(declare-fun y$s$216_op () utt$5)
(declare-fun y$s$217 () utt$5)
(declare-fun y$s$217_op () utt$5)
(declare-fun y$s$218 () utt$8)
(declare-fun y$s$218_op () utt$8)
(declare-fun y$s$219 () utt$8)
(declare-fun y$s$219_op () utt$8)
(declare-fun y$s$220 () Bool)
(declare-fun y$s$220_op () Bool)
(declare-fun y$s$221 () Bool)
(declare-fun y$s$221_op () Bool)
(declare-fun y$s$222 () Bool)
(declare-fun y$s$222_op () Bool)
(declare-fun y$s$223 () utt$8)
(declare-fun y$s$223_op () utt$8)
(declare-fun y$s$224 () utt$8)
(declare-fun y$s$224_op () utt$8)
(declare-fun y$s$225 () Bool)
(declare-fun y$s$225_op () Bool)
(declare-fun y$s$226 () Bool)
(declare-fun y$s$226_op () Bool)
(declare-fun y$s$227 () Bool)
(declare-fun y$s$227_op () Bool)
(declare-fun y$s$228 () Bool)
(declare-fun y$s$228_op () Bool)
(declare-fun y$s$229 () utt$8)
(declare-fun y$s$229_op () utt$8)
(declare-fun y$s$230 () Bool)
(declare-fun y$s$230_op () Bool)
(declare-fun y$s$231 () utt$8)
(declare-fun y$s$231_op () utt$8)
(declare-fun y$s$232 () utt$8)
(declare-fun y$s$232_op () utt$8)
(declare-fun y$s$233 () utt$8)
(declare-fun y$s$233_op () utt$8)
(declare-fun y$s$234 () utt$8)
(declare-fun y$s$234_op () utt$8)
(declare-fun y$s$25 () utt$6)
(declare-fun y$s$25_op () utt$6)
(declare-fun y$s$26 () Bool)
(declare-fun y$s$26_op () Bool)
(declare-fun y$s$27 () Bool)
(declare-fun y$s$27_op () Bool)
(declare-fun y$s$28 () Bool)
(declare-fun y$s$28_op () Bool)
(declare-fun y$s$29 () Bool)
(declare-fun y$s$29_op () Bool)
(declare-fun y$s$30 () Bool)
(declare-fun y$s$30_op () Bool)
(declare-fun y$s$31 () Bool)
(declare-fun y$s$31_op () Bool)
(declare-fun y$s$32 () utt$2)
(declare-fun y$s$32_op () utt$2)
(declare-fun y$s$33 () Bool)
(declare-fun y$s$33_op () Bool)
(declare-fun y$s$34 () Bool)
(declare-fun y$s$34_op () Bool)
(declare-fun y$s$35 () Bool)
(declare-fun y$s$35_op () Bool)
(declare-fun y$s$36 () Bool)
(declare-fun y$s$36_op () Bool)
(declare-fun y$s$37 () Bool)
(declare-fun y$s$37_op () Bool)
(declare-fun y$s$38 () Bool)
(declare-fun y$s$38_op () Bool)
(declare-fun y$s$39 () Bool)
(declare-fun y$s$39_op () Bool)
(declare-fun y$s$40 () Bool)
(declare-fun y$s$40_op () Bool)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$42 () Bool)
(declare-fun y$s$42_op () Bool)
(declare-fun y$s$43 () utt$6)
(declare-fun y$s$43_op () utt$6)
(declare-fun y$s$44 () Bool)
(declare-fun y$s$44_op () Bool)
(declare-fun y$s$45 () Bool)
(declare-fun y$s$45_op () Bool)
(declare-fun y$s$46 () Bool)
(declare-fun y$s$46_op () Bool)
(declare-fun y$s$47 () Bool)
(declare-fun y$s$47_op () Bool)
(declare-fun y$s$48 () Bool)
(declare-fun y$s$48_op () Bool)
(declare-fun y$s$49 () utt$6)
(declare-fun y$s$49_op () utt$6)
(declare-fun y$s$50 () Bool)
(declare-fun y$s$50_op () Bool)
(declare-fun y$s$51 () Bool)
(declare-fun y$s$51_op () Bool)
(declare-fun y$s$52 () Bool)
(declare-fun y$s$52_op () Bool)
(declare-fun y$s$53 () utt$6)
(declare-fun y$s$53_op () utt$6)
(declare-fun y$s$54 () Bool)
(declare-fun y$s$54_op () Bool)
(declare-fun y$s$55 () Bool)
(declare-fun y$s$55_op () Bool)
(declare-fun y$s$56 () Bool)
(declare-fun y$s$56_op () Bool)
(declare-fun y$s$57 () Bool)
(declare-fun y$s$57_op () Bool)
(declare-fun y$s$58 () Bool)
(declare-fun y$s$58_op () Bool)
(declare-fun y$s$59 () Bool)
(declare-fun y$s$59_op () Bool)
(declare-fun y$s$61 () Bool)
(declare-fun y$s$61_op () Bool)
(declare-fun y$s$62 () Bool)
(declare-fun y$s$62_op () Bool)
(declare-fun y$s$64 () Bool)
(declare-fun y$s$64_op () Bool)
(declare-fun y$s$66 () Bool)
(declare-fun y$s$66_op () Bool)
(declare-fun y$s$93 () Bool)
(declare-fun y$s$93_op () Bool)
(declare-fun y$s$94 () Bool)
(declare-fun y$s$94$next () Bool)
(declare-fun y$s$94$next_op () Bool)
(declare-fun y$s$94_op () Bool)
(declare-fun y$s$95 () Bool)
(declare-fun y$s$95$next () Bool)
(declare-fun y$s$95$next_op () Bool)
(declare-fun y$s$95_op () Bool)
(declare-fun y$s$96 () Bool)
(declare-fun y$s$96$next () Bool)
(declare-fun y$s$96$next_op () Bool)
(declare-fun y$s$96_op () Bool)
(declare-fun y$s$97 () Bool)
(declare-fun y$s$97$next () Bool)
(declare-fun y$s$97$next_op () Bool)
(declare-fun y$s$97_op () Bool)
(declare-fun y$s$98 () Bool)
(declare-fun y$s$98_op () Bool)
(declare-fun y$s$99 () Bool)
(declare-fun y$s$99_op () Bool)
(declare-fun y$w$1 () utt$32)
(declare-fun y$w$1$next () utt$32)
(declare-fun y$w$1$next_op () utt$32)
(declare-fun y$w$10 () Bool)
(declare-fun y$w$10_op () Bool)
(declare-fun y$w$11 () Bool)
(declare-fun y$w$11_op () Bool)
(declare-fun y$w$12 () utt$5)
(declare-fun y$w$13 () utt$8)
(declare-fun y$w$13_op () utt$8)
(declare-fun y$w$14 () utt$8)
(declare-fun y$w$14_op () utt$8)
(declare-fun y$w$15 () utt$8)
(declare-fun y$w$15_op () utt$8)
(declare-fun y$w$16 () utt$32)
(declare-fun y$w$16$next () utt$32)
(declare-fun y$w$16$next_op () utt$32)
(declare-fun y$w$16_op () utt$32)
(declare-fun y$w$17 () Bool)
(declare-fun y$w$18 () Bool)
(declare-fun y$w$19 () utt$32)
(declare-fun y$w$19_op () utt$32)
(declare-fun y$w$1_op () utt$32)
(declare-fun y$w$2 () Bool)
(declare-fun y$w$20 () Bool)
(declare-fun y$w$21 () Bool)
(declare-fun y$w$22 () utt$32)
(declare-fun y$w$22_op () utt$32)
(declare-fun y$w$23 () Bool)
(declare-fun y$w$24 () utt$3)
(declare-fun y$w$25 () utt$32)
(declare-fun y$w$25_op () utt$32)
(declare-fun y$w$26 () Bool)
(declare-fun y$w$27 () utt$8)
(declare-fun y$w$28 () utt$8)
(declare-fun y$w$29 () utt$8)
(declare-fun y$w$2_op () Bool)
(declare-fun y$w$3 () Bool)
(declare-fun y$w$30 () utt$8)
(declare-fun y$w$31 () Bool)
(declare-fun y$w$32 () utt$8)
(declare-fun y$w$32_op () utt$8)
(declare-fun y$w$33 () utt$4)
(declare-fun y$w$34 () utt$7)
(declare-fun y$w$35 () utt$8)
(declare-fun y$w$35_op () utt$8)
(declare-fun y$w$3_op () Bool)
(declare-fun y$w$4 () utt$7)
(declare-fun y$w$5 () utt$32)
(declare-fun y$w$5_op () utt$32)
(declare-fun y$w$6 () utt$32)
(declare-fun y$w$6_op () utt$32)
(declare-fun y$w$7 () Bool)
(declare-fun y$w$7_op () Bool)
(declare-fun y$w$9 () Bool)
(declare-fun y$w$9_op () Bool)
(assert (distinct y$n0s2 y$n2s2 y$n1s2))
(assert (distinct y$n0s5 y$n31s5 y$n1s5))
(assert (distinct y$n0s6 y$n33s6 y$n1s6 y$n55s6 y$n63s6 y$n40s6 y$n32s6 y$n48s6 y$n56s6))
(assert (distinct y$n0s8 y$n1s8 y$n2s8))
(assert (distinct y$n2s32 y$n1s32 y$n0s32))
(assert (= y$2 (= y$n0s6 y$BitCounter)))
(assert (= y$5 (= y$n0s8 y$ClkGen.Counter)))
(assert (= y$ClkGen.Mdc (not y$7)))
(assert (= y$EndBusy (not y$9)))
(assert (= y$InProgress (not y$11)))
(assert (= y$InProgress_q1 (not y$13)))
(assert (= y$InProgress_q2 (not y$15)))
(assert (= y$InProgress_q3 (not y$17)))
(assert (= y$20 (= y$n0s2 y$LatchByte)))
(assert (= y$LatchByte0_d (not y$22)))
(assert (= y$LatchByte1_d (not y$24)))
(assert (= y$Nvalid (not y$26)))
(assert (= y$OutCtrl.MdcFrame (not y$28)))
(assert (= y$OutCtrl.MdcFrame_d2 (not y$30)))
(assert (= y$OutCtrl.Mdo (not y$32)))
(assert (= y$OutCtrl.MdoEn (not y$34)))
(assert (= y$OutCtrl.MdoEn_d2 (not y$36)))
(assert (= y$OutCtrl.SerialEn_q (not y$38)))
(assert (= y$RStatStart (not y$40)))
(assert (= y$RStatStart_q1 (not y$42)))
(assert (= y$RStatStart_q2 (not y$44)))
(assert (= y$RStat_q2 (not y$46)))
(assert (= y$RStat_q3 (not y$48)))
(assert (= y$ScanPHYAddrValid (not y$50)))
(assert (= y$ScanStat_q2 (not y$52)))
(assert (= y$55 (= y$n0s5 y$ShftRg.FiadReg)))
(assert (= y$ShftRg.LinkOK (not y$57)))
(assert (= y$60 (= y$ShftRg.Prsd y$n0s16)))
(assert (= y$62 (= y$n0s8 y$ShftRg.ShiftReg)))
(assert (= y$StatusSampledEnd (not y$64)))
(assert (= y$SyncStatMdcEn (not y$66)))
(assert (= y$WCtrlDataStart (not y$68)))
(assert (= y$WCtrlDataStart_q1 (not y$70)))
(assert (= y$WCtrlDataStart_q2 (not y$72)))
(assert (= y$WCtrlData_q2 (not y$74)))
(assert (= y$WCtrlData_q3 (not y$76)))
(assert (= y$WriteOp (not y$78)))
(assert (= y$83 (Extract_1_0_0_2 y$LatchByte)))
(assert (= y$StatusSampled_op (and y$64 y$83)))
(assert (= y$StatusSampled_op y$s$99_op))
(assert (= y$s$37_op (and (not y$Reset) y$s$99_op)))
(assert (= y$ScanPHYAddrValid$next_rhs_op (and (not y$Reset) y$s$37_op)))
(assert (= y$94 (= y$ScanPHYAddrValid$next y$ScanPHYAddrValid$next_rhs_op)))
(assert (= y$StatusSampledEnd$next_rhs_op (and (not y$Reset) y$83)))
(assert (= y$98 (= y$StatusSampledEnd$next y$StatusSampledEnd$next_rhs_op)))
(assert (= y$Mdc (not y$101)))
(assert (= y$ClkGen.MdcEn_op (and y$5 y$101)))
(assert (= y$s$61_op (and y$2 y$NoPre)))
(assert (= y$s$53_op (Add_6_6_6 y$BitCounter y$n1s6)))
(assert (= y$s$100_op (ite y$s$61_op y$n33s6 y$s$53_op)))
(assert (= y$s$101_op (ite y$13 y$n0s6 y$s$100_op)))
(assert (= y$s$102_op (ite y$ClkGen.MdcEn_op y$s$101_op y$n0s6)))
(assert (= y$s$49_op (ite y$Reset y$n0s6 y$s$102_op)))
(assert (= y$s$103_op (ite y$13 y$n0s6 y$s$49_op)))
(assert (= y$s$104_op (ite y$ClkGen.MdcEn_op y$s$103_op y$n0s6)))
(assert (= y$s$43_op (ite y$Reset y$n0s6 y$s$104_op)))
(assert (= y$s$105_op (ite y$ClkGen.MdcEn_op y$s$43_op y$BitCounter)))
(assert (= y$s$25_op (ite y$Reset y$n0s6 y$s$105_op)))
(assert (= y$BitCounter$next_rhs_op (ite y$Reset y$n0s6 y$s$25_op)))
(assert (= y$131 (= y$BitCounter$next y$BitCounter$next_rhs_op)))
(assert (= y$WriteDataOp_op (and y$WCtrlDataStart_q1 y$72)))
(assert (= y$ReadStatusOp_op (and y$RStatStart_q1 y$44)))
(assert (= y$s$93_op (or y$WriteDataOp_op y$ReadStatusOp_op)))
(assert (= y$s$58_op (and y$11 y$SyncStatMdcEn)))
(assert (= y$s$59_op (and y$13 y$s$58_op)))
(assert (= y$ScanStatusOp_op (and y$15 y$s$59_op)))
(assert (= y$StartOp_op (or y$s$93_op y$ScanStatusOp_op)))
(assert (= y$EndOp_op (ReductionAnd_1_6 y$BitCounter)))
(assert (= y$s$109_op (and y$InProgress (not y$EndOp_op))))
(assert (= y$s$110_op (and (not y$StartOp_op) y$s$109_op)))
(assert (= y$s$111_op (and y$ClkGen.MdcEn_op y$s$110_op)))
(assert (= y$s$50_op (and (not y$Reset) y$s$111_op)))
(assert (= y$s$115_op (or y$StartOp_op y$s$50_op)))
(assert (= y$s$116_op (and y$ClkGen.MdcEn_op y$s$115_op)))
(assert (= y$s$44_op (and (not y$Reset) y$s$116_op)))
(assert (= y$s$120_op (ite y$ClkGen.MdcEn_op y$s$44_op y$InProgress)))
(assert (= y$s$26_op (and (not y$Reset) y$s$120_op)))
(assert (= y$InProgress$next_rhs_op (and (not y$Reset) y$s$26_op)))
(assert (= y$169 (= y$InProgress$next y$InProgress$next_rhs_op)))
(assert (= y$s$112_op (ite y$11 y$WriteDataOp_op y$WriteOp)))
(assert (= y$s$113_op (and y$StartOp_op y$s$112_op)))
(assert (= y$s$114_op (and y$ClkGen.MdcEn_op y$s$113_op)))
(assert (= y$s$51_op (and (not y$Reset) y$s$114_op)))
(assert (= y$s$106_op (and y$WriteOp (not y$EndOp_op))))
(assert (= y$s$107_op (and (not y$StartOp_op) y$s$106_op)))
(assert (= y$s$108_op (and y$ClkGen.MdcEn_op y$s$107_op)))
(assert (= y$s$52_op (and (not y$Reset) y$s$108_op)))
(assert (= y$s$117_op (ite y$StartOp_op y$s$51_op y$s$52_op)))
(assert (= y$s$118_op (and y$ClkGen.MdcEn_op y$s$117_op)))
(assert (= y$s$48_op (and (not y$Reset) y$s$118_op)))
(assert (= y$s$119_op (ite y$ClkGen.MdcEn_op y$s$48_op y$WriteOp)))
(assert (= y$s$42_op (and (not y$Reset) y$s$119_op)))
(assert (= y$WriteOp$next_rhs_op (and (not y$Reset) y$s$42_op)))
(assert (= y$199 (= y$WriteOp$next y$WriteOp$next_rhs_op)))
(assert (= y$s$131_op (ite y$ClkGen.MdcEn_op y$WCtrlDataStart y$WCtrlDataStart_q1)))
(assert (= y$s$40_op (and (not y$Reset) y$s$131_op)))
(assert (= y$WCtrlDataStart_q1$next_rhs_op (and (not y$Reset) y$s$40_op)))
(assert (= y$207 (= y$WCtrlDataStart_q1$next y$WCtrlDataStart_q1$next_rhs_op)))
(assert (= y$s$130_op (ite y$ClkGen.MdcEn_op y$WCtrlDataStart y$WCtrlDataStart_q2)))
(assert (= y$s$41_op (and (not y$Reset) y$s$130_op)))
(assert (= y$WCtrlDataStart_q2$next_rhs_op (and (not y$Reset) y$s$41_op)))
(assert (= y$215 (= y$WCtrlDataStart_q2$next y$WCtrlDataStart_q2$next_rhs_op)))
(assert (= y$s$129_op (ite y$ClkGen.MdcEn_op y$RStatStart y$RStatStart_q1)))
(assert (= y$s$35_op (and (not y$Reset) y$s$129_op)))
(assert (= y$RStatStart_q1$next_rhs_op (and (not y$Reset) y$s$35_op)))
(assert (= y$223 (= y$RStatStart_q1$next y$RStatStart_q1$next_rhs_op)))
(assert (= y$s$128_op (ite y$ClkGen.MdcEn_op y$RStatStart y$RStatStart_q2)))
(assert (= y$s$36_op (and (not y$Reset) y$s$128_op)))
(assert (= y$RStatStart_q2$next_rhs_op (and (not y$Reset) y$s$36_op)))
(assert (= y$231 (= y$RStatStart_q2$next y$RStatStart_q2$next_rhs_op)))
(assert (= y$s$123_op (ite y$ClkGen.MdcEn_op y$InProgress y$InProgress_q1)))
(assert (= y$s$27_op (and (not y$Reset) y$s$123_op)))
(assert (= y$InProgress_q1$next_rhs_op (and (not y$Reset) y$s$27_op)))
(assert (= y$239 (= y$InProgress_q1$next y$InProgress_q1$next_rhs_op)))
(assert (= y$s$122_op (ite y$ClkGen.MdcEn_op y$InProgress y$InProgress_q2)))
(assert (= y$s$28_op (and (not y$Reset) y$s$122_op)))
(assert (= y$InProgress_q2$next_rhs_op (and (not y$Reset) y$s$28_op)))
(assert (= y$247 (= y$InProgress_q2$next y$InProgress_q2$next_rhs_op)))
(assert (= y$s$127_op (ite y$ClkGen.MdcEn_op y$InProgress y$InProgress_q3)))
(assert (= y$s$29_op (and (not y$Reset) y$s$127_op)))
(assert (= y$InProgress_q3$next_rhs_op (and (not y$Reset) y$s$29_op)))
(assert (= y$255 (= y$InProgress_q3$next y$InProgress_q3$next_rhs_op)))
(assert (= y$s$66_op (and y$InProgress y$78)))
(assert (= y$260 (= y$n55s6 y$BitCounter)))
(assert (= y$LatchByte1_d2_op (and y$s$66_op y$260)))
(assert (= y$s$124_op (ite y$ClkGen.MdcEn_op y$LatchByte1_d2_op y$LatchByte1_d)))
(assert (= y$s$31_op (and (not y$Reset) y$s$124_op)))
(assert (= y$LatchByte1_d$next_rhs_op (and (not y$Reset) y$s$31_op)))
(assert (= y$269 (= y$LatchByte1_d$next y$LatchByte1_d$next_rhs_op)))
(assert (= y$272 (= y$n63s6 y$BitCounter)))
(assert (= y$LatchByte0_d2_op (and y$s$66_op y$272)))
(assert (= y$s$125_op (ite y$ClkGen.MdcEn_op y$LatchByte0_d2_op y$LatchByte0_d)))
(assert (= y$s$30_op (and (not y$Reset) y$s$125_op)))
(assert (= y$LatchByte0_d$next_rhs_op (and (not y$Reset) y$s$30_op)))
(assert (= y$281 (= y$LatchByte0_d$next y$LatchByte0_d$next_rhs_op)))
(assert (= y$s$126_op (ite y$ClkGen.MdcEn_op y$LatchByte0_d y$83)))
(assert (= y$w$2_op (and (not y$Reset) y$s$126_op)))
(assert (= y$287 (Extract_1_1_1_2 y$LatchByte)))
(assert (= y$s$121_op (ite y$ClkGen.MdcEn_op y$LatchByte1_d y$287)))
(assert (= y$w$3_op (and (not y$Reset) y$s$121_op)))
(assert (= y$s$32_op (Concat_2_1_1 y$w$2_op y$w$3_op)))
(assert (= y$LatchByte$next_rhs_op (ite y$Reset y$n0s2 y$s$32_op)))
(assert (= y$297 (= y$LatchByte$next y$LatchByte$next_rhs_op)))
(assert (= y$s$57_op (and y$ScanStat_q2 y$66)))
(assert (= y$s$132_op (or y$Nvalid y$s$57_op)))
(assert (= y$s$133_op (and (not y$EndBusy) y$s$132_op)))
(assert (= y$s$45_op (and (not y$Reset) y$s$133_op)))
(assert (= y$s$138_op (and (not y$EndBusy) y$s$45_op)))
(assert (= y$s$33_op (and (not y$Reset) y$s$138_op)))
(assert (= y$Nvalid$next_rhs_op (and (not y$Reset) y$s$33_op)))
(assert (= y$313 (= y$Nvalid$next y$Nvalid$next_rhs_op)))
(assert (= y$s$55_op (and y$WCtrlData_q2 y$76)))
(assert (= y$s$136_op (or y$WCtrlDataStart y$s$55_op)))
(assert (= y$s$137_op (and (not y$EndBusy) y$s$136_op)))
(assert (= y$s$47_op (and (not y$Reset) y$s$137_op)))
(assert (= y$s$140_op (and (not y$EndBusy) y$s$47_op)))
(assert (= y$s$39_op (and (not y$Reset) y$s$140_op)))
(assert (= y$WCtrlDataStart$next_rhs_op (and (not y$Reset) y$s$39_op)))
(assert (= y$329 (= y$WCtrlDataStart$next y$WCtrlDataStart$next_rhs_op)))
(assert (= y$s$56_op (and y$RStat_q2 y$48)))
(assert (= y$s$134_op (or y$RStatStart y$s$56_op)))
(assert (= y$s$135_op (and (not y$EndBusy) y$s$134_op)))
(assert (= y$s$46_op (and (not y$Reset) y$s$135_op)))
(assert (= y$s$139_op (and (not y$EndBusy) y$s$46_op)))
(assert (= y$s$34_op (and (not y$Reset) y$s$139_op)))
(assert (= y$RStatStart$next_rhs_op (and (not y$Reset) y$s$34_op)))
(assert (= y$345 (= y$RStatStart$next y$RStatStart$next_rhs_op)))
(assert (= y$WCtrlData_q3$next_rhs_op (and (not y$Reset) y$WCtrlData)))
(assert (= y$350 (= y$WCtrlData_q2$next y$WCtrlData_q3$next_rhs_op)))
(assert (= y$352 (= y$WCtrlData_q3$next_rhs_op y$WCtrlData_q3$next)))
(assert (= y$RStat_q3$next_rhs_op (and (not y$Reset) y$RStat)))
(assert (= y$357 (= y$RStat_q2$next y$RStat_q3$next_rhs_op)))
(assert (= y$359 (= y$RStat_q3$next_rhs_op y$RStat_q3$next)))
(assert (= y$ScanStat_q2$next_rhs_op (and (not y$Reset) y$ScanStat)))
(assert (= y$364 (= y$ScanStat_q2$next y$ScanStat_q2$next_rhs_op)))
(assert (= y$s$141_op (ite y$ClkGen.MdcEn_op y$ScanStat y$SyncStatMdcEn)))
(assert (= y$s$38_op (and (not y$Reset) y$s$141_op)))
(assert (= y$SyncStatMdcEn$next_rhs_op (and (not y$Reset) y$s$38_op)))
(assert (= y$372 (= y$SyncStatMdcEn$next y$SyncStatMdcEn$next_rhs_op)))
(assert (= y$s$54_op (and y$15 y$InProgress_q3)))
(assert (= y$EndBusy$next_rhs_op (and (not y$Reset) y$s$54_op)))
(assert (= y$378 (= y$EndBusy$next y$EndBusy$next_rhs_op)))
(assert (= y$s$146_op (and y$5 y$OutCtrl.MdcFrame)))
(assert (= y$s$150_op (ite y$s$146_op y$101 y$Mdc)))
(assert (= y$s$145_op (and (not y$Reset) y$s$150_op)))
(assert (= y$Mdc$next_rhs_op (and (not y$Reset) y$s$145_op)))
(assert (= y$388 (= y$Mdc$next y$Mdc$next_rhs_op)))
(assert (= y$w$19_op (Concat_32_8_24 y$Divider y$n0s24)))
(assert (= y$s$147_op (Le_1_32_32 y$w$19_op y$n2s32)))
(assert (= y$ClkGen.TempDivider_op (ite y$s$147_op y$n2s8 y$Divider)))
(assert (= y$404 (Extract_7_7_1_8 y$Divider)))
(assert (= y$405 (ite y$s$147_op y$n1s7 y$404)))
(assert (= y$401 (Extract_7_7_1_8 y$ClkGen.TempDivider_op)))
(assert (= y$405 y$401))
(assert (= y$w$5_op (Concat_32_7_25 y$401 y$n0s25)))
(assert (= y$w$6_op (Sub_32_32_32 y$w$5_op y$n1s32)))
(assert (= y$413 (Extract_8_7_0_32 y$w$6_op)))
(assert (= y$s$153_op (Sub_8_8_8 y$ClkGen.Counter y$n1s8)))
(assert (= y$s$151_op (ite y$5 y$413 y$s$153_op)))
(assert (= y$s$144_op (ite y$Reset y$n0s8 y$s$151_op)))
(assert (= y$ClkGen.Counter$next_rhs_op (ite y$Reset y$n1s8 y$s$144_op)))
(assert (= y$423 (= y$ClkGen.Counter$next y$ClkGen.Counter$next_rhs_op)))
(assert (= y$425 (Extract_1_7_7_8 y$ShftRg.ShiftReg)))
(assert (= y$s$182_op (or y$38 y$425)))
(assert (= y$Mdo$next_rhs_op (and (not y$Reset) y$s$182_op)))
(assert (= y$431 (= y$Mdo$next y$Mdo$next_rhs_op)))
(assert (= y$OutCtrl.MdoEn$next_rhs_op (and y$OutCtrl.MdoEn_d2 (not y$Reset))))
(assert (= y$435 (= y$OutCtrl.MdoEn$next y$OutCtrl.MdoEn$next_rhs_op)))
(assert (= y$OutCtrl.MdcFrame$next_rhs_op (and y$OutCtrl.MdcFrame_d2 (not y$Reset))))
(assert (= y$439 (= y$OutCtrl.MdcFrame$next y$OutCtrl.MdcFrame$next_rhs_op)))
(assert (= y$s$163_op (and y$InProgress y$WriteOp)))
(assert (= y$443 (Extract_1_5_5_6 y$BitCounter)))
(assert (= y$w$22_op (Concat_32_6_26 y$BitCounter y$n0s26)))
(assert (= y$449 (= y$n0s32 y$w$22_op)))
(assert (= y$s$169_op (and y$NoPre y$449)))
(assert (= y$s$179_op (or y$443 y$s$169_op)))
(assert (= y$s$165_op (and y$s$163_op y$s$179_op)))
(assert (= (and y$InProgress y$78) y$s$166_op))
(assert (= y$458 (Extract_1_4_4_6 y$BitCounter)))
(assert (= y$458 (not y$460)))
(assert (= y$s$167_op (and y$443 y$460)))
(assert (= y$463 (Extract_3_3_1_6 y$BitCounter)))
(assert (= y$s$186_op (ReductionAnd_1_3 y$463)))
(assert (= y$s$186_op (not y$467)))
(assert (= y$s$168_op (and y$s$167_op y$467)))
(assert (= y$s$180_op (or y$s$169_op y$s$168_op)))
(assert (= y$s$170_op (and y$s$166_op y$s$180_op)))
(assert (= y$OutCtrl.SerialEn_op (or y$s$165_op y$s$170_op)))
(assert (= y$s$185_op (ite y$ClkGen.MdcEn_op y$OutCtrl.SerialEn_op y$OutCtrl.SerialEn_q)))
(assert (= y$s$162_op (and (not y$Reset) y$s$185_op)))
(assert (= y$OutCtrl.SerialEn_q$next_rhs_op (and (not y$Reset) y$s$162_op)))
(assert (= y$482 (= y$OutCtrl.SerialEn_q$next y$OutCtrl.SerialEn_q$next_rhs_op)))
(assert (= y$443 (not y$484)))
(assert (= y$s$171_op (and y$InProgress y$484)))
(assert (= y$s$181_op (or y$OutCtrl.SerialEn_op y$s$171_op)))
(assert (= y$s$184_op (ite y$ClkGen.MdcEn_op y$s$181_op y$OutCtrl.MdoEn_d2)))
(assert (= y$s$161_op (and (not y$Reset) y$s$184_op)))
(assert (= y$OutCtrl.MdoEn_d2$next_rhs_op (and (not y$Reset) y$s$161_op)))
(assert (= y$495 (= y$OutCtrl.MdoEn_d2$next y$OutCtrl.MdoEn_d2$next_rhs_op)))
(assert (= y$s$183_op (ite y$ClkGen.MdcEn_op y$InProgress y$OutCtrl.MdcFrame_d2)))
(assert (= y$s$160_op (and (not y$Reset) y$s$183_op)))
(assert (= y$OutCtrl.MdcFrame_d2$next_rhs_op (and (not y$Reset) y$s$160_op)))
(assert (= y$503 (= y$OutCtrl.MdcFrame_d2$next y$OutCtrl.MdcFrame_d2$next_rhs_op)))
(assert (= y$ScanIncr (not y$507)))
(assert (= y$509 (= y$n40s6 y$BitCounter)))
(assert (= y$w$11_op (and y$InProgress y$509)))
(assert (= y$s$201_op (and y$SyncStatMdcEn y$w$11_op)))
(assert (= y$ShftRg.IncrementAddr_op (and y$ClkGen.MdcEn_op y$s$201_op)))
(assert (= y$s$204_op (and y$ScanIncr y$ShftRg.IncrementAddr_op)))
(assert (= y$520 (= y$n31s5 y$ScanPHYAddr)))
(assert (= y$s$203_op (and y$s$204_op y$520)))
(assert (= y$s$214_op (or y$507 y$s$203_op)))
(assert (= y$w$25_op (Concat_32_5_27 y$ScanPHYAddr y$n0s27)))
(assert (= y$s$200_op (Add_32_32_32 y$w$25_op y$n1s32)))
(assert (= y$530 (Extract_5_4_0_32 y$s$200_op)))
(assert (= y$s$215_op (ite y$s$204_op y$530 y$ScanPHYAddr)))
(assert (= y$s$216_op (ite y$s$214_op y$n0s5 y$s$215_op)))
(assert (= y$s$195_op (ite y$Reset y$n0s5 y$s$216_op)))
(assert (= y$s$217_op (ite y$s$214_op y$Fiad y$s$195_op)))
(assert (= y$s$191_op (ite y$Reset y$n0s5 y$s$217_op)))
(assert (= y$ScanPHYAddr$next_rhs_op (ite y$Reset y$Fiad y$s$191_op)))
(assert (= y$544 (= y$ScanPHYAddr$next y$ScanPHYAddr$next_rhs_op)))
(assert (= y$548 (= y$n1s5 y$Rgad)))
(assert (= y$549 (Extract_1_2_2_8 y$ShftRg.ShiftReg)))
(assert (= y$s$220_op (ite y$548 y$549 y$LinkOK)))
(assert (= y$s$221_op (and y$83 y$s$220_op)))
(assert (= y$s$196_op (and (not y$Reset) y$s$221_op)))
(assert (= y$s$222_op (ite y$83 y$s$196_op y$LinkOK)))
(assert (= y$s$192_op (and (not y$Reset) y$s$222_op)))
(assert (= y$LinkOK$next_rhs_op (and (not y$Reset) y$s$192_op)))
(assert (= y$564 (= y$LinkOK$next y$LinkOK$next_rhs_op)))
(assert (= y$567 (Extract_8_7_0_16 y$Prsd)))
(assert (= y$s$223_op (ite y$83 y$ShftRg.ShiftReg y$567)))
(assert (= y$w$13_op (ite y$Reset y$n0s8 y$s$223_op)))
(assert (= y$573 (Extract_8_15_8_16 y$Prsd)))
(assert (= y$s$218_op (ite y$287 y$ShftRg.ShiftReg y$573)))
(assert (= y$s$219_op (ite y$83 y$n0s8 y$s$218_op)))
(assert (= y$s$197_op (ite y$Reset y$n0s8 y$s$219_op)))
(assert (= y$s$224_op (ite y$83 y$573 y$s$197_op)))
(assert (= y$w$14_op (ite y$Reset y$n0s8 y$s$224_op)))
(assert (= y$s$193_op (Concat_16_8_8 y$w$13_op y$w$14_op)))
(assert (= y$Prsd$next_rhs_op (ite y$Reset y$n0s16 y$s$193_op)))
(assert (= y$589 (= y$Prsd$next y$Prsd$next_rhs_op)))
(assert (= y$NoPre (not y$591)))
(assert (= y$593 (= y$n32s6 y$BitCounter)))
(assert (= y$s$62_op (and y$591 y$593)))
(assert (= y$s$98_op (or y$s$61_op y$s$62_op)))
(assert (= y$w$7_op (and y$InProgress y$s$98_op)))
(assert (= (and y$InProgress y$WriteOp) y$s$64_op))
(assert (= y$603 (= y$n48s6 y$BitCounter)))
(assert (= y$w$9_op (and y$s$64_op y$603)))
(assert (= y$607 (= y$n56s6 y$BitCounter)))
(assert (= y$w$10_op (and y$s$64_op y$607)))
(assert (= y$s$230_op (or y$w$11_op y$w$7_op y$w$9_op y$w$10_op)))
(assert (= y$w$7_op (not y$612)))
(assert (= y$w$11_op (not y$613)))
(assert (= y$w$10_op (not y$614)))
(assert (= y$s$226_op (and y$w$9_op y$612 y$613 y$614)))
(assert (= y$w$9_op (not y$617)))
(assert (= y$s$225_op (and y$w$10_op y$612 y$613 y$617)))
(assert (= y$s$205_op (or y$s$226_op y$s$225_op)))
(assert (= y$623 (Extract_8_7_0_16 y$CtrlData)))
(assert (= y$625 (Extract_8_15_8_16 y$CtrlData)))
(assert (= y$s$206_op (ite y$s$225_op y$623 y$625)))
(assert (= y$s$227_op (and y$w$11_op y$612 y$614 y$617)))
(assert (= y$632 (Extract_1_0_0_5 y$ScanPHYAddr)))
(assert (= y$w$32_op (Concat_8_2_5_1 y$n2s2 y$Rgad y$632)))
(assert (= y$s$228_op (and y$w$7_op y$613 y$614 y$617)))
(assert (= y$638 (Extract_4_4_1_5 y$ScanPHYAddr)))
(assert (= y$w$15_op (Concat_8_4_1_1_2 y$638 y$WriteOp y$78 y$n1s2)))
(assert (= y$s$207_op (ite y$s$228_op y$w$15_op y$n0s8)))
(assert (= y$s$208_op (ite y$s$227_op y$w$32_op y$s$207_op)))
(assert (= y$s$209_op (ite y$s$205_op y$s$206_op y$s$208_op)))
(assert (= y$s$229_op (ite y$s$230_op y$s$209_op y$n0s8)))
(assert (= y$s$231_op (ite y$ClkGen.MdcEn_op y$s$229_op y$n0s8)))
(assert (= y$s$199_op (ite y$Reset y$n0s8 y$s$231_op)))
(assert (= y$656 (Extract_7_6_0_8 y$ShftRg.ShiftReg)))
(assert (= y$w$35_op (Concat_8_1_7 y$Mdi y$656)))
(assert (= y$s$232_op (ite y$s$230_op y$s$199_op y$w$35_op)))
(assert (= y$s$233_op (ite y$ClkGen.MdcEn_op y$s$232_op y$n0s8)))
(assert (= y$s$198_op (ite y$Reset y$n0s8 y$s$233_op)))
(assert (= y$s$234_op (ite y$ClkGen.MdcEn_op y$s$198_op y$ShftRg.ShiftReg)))
(assert (= y$s$194_op (ite y$Reset y$n0s8 y$s$234_op)))
(assert (= y$ShftRg.ShiftReg$next_rhs_op (ite y$Reset y$n0s8 y$s$194_op)))
(assert (= y$672 (= y$ShftRg.ShiftReg$next y$ShftRg.ShiftReg$next_rhs_op)))
(assert (= y$673 (and y$94 y$98 y$131 y$169 y$199 y$207 y$215 y$223 y$231 y$239 y$247 y$255 y$269 y$281 y$297 y$313 y$329 y$345 y$350 y$352 y$357 y$359 y$364 y$372 y$378 y$388 y$423 y$431 y$435 y$439 y$482 y$495 y$503 y$544 y$564 y$589 y$672)))
(assert (= y$w$16$next_op (Concat_32_1_31 y$OutCtrl.MdoEn$next y$n0s31)))
(assert (= y$722 (not (= y$n1s32 y$w$16$next_op))))
(assert (= y$s$94$next_op (or y$WCtrlDataStart$next y$RStatStart$next)))
(assert (= y$s$95$next_op (or y$SyncStatMdcEn$next y$s$94$next_op)))
(assert (= y$s$96$next_op (or y$EndBusy$next y$s$95$next_op)))
(assert (= y$s$97$next_op (or y$InProgress$next y$s$96$next_op)))
(assert (= y$Busy$next_op (or y$InProgress_q3$next y$s$97$next_op)))
(assert (= y$w$1$next_op (Concat_32_1_31 y$Busy$next_op y$n0s31)))
(assert (= y$735 (= y$n1s32 y$w$1$next_op)))
(assert (= y$prop0$next_op (or y$722 y$735)))
(assert (= y$738 (= y$prop$next y$prop0$next_op)))
(assert (= y$prop$next (not y$719)))
(assert (= y$740 (and y$2 y$5 y$7 y$9 y$11 y$13 y$15 y$17 y$20 y$22 y$24 y$26 y$28 y$30 y$32 y$34 y$36 y$38 y$40 y$42 y$44 y$46 y$48 y$50 y$52 y$55 y$57 y$60 y$62 y$64 y$66 y$68 y$70 y$72 y$74 y$76 y$78 y$673 y$738 y$719)))
(assert y$740)
(check-sat)
(exit)
