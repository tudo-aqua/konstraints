(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: h_b03
query-maker: "Yices 2"
query-time: 3.228000 ms
query-class: abstract
query-category: oneshot
query-type: cti
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$2 0)
(declare-sort utt$3 0)
(declare-sort utt$4 0)
(declare-sort utt$28 0)
(declare-sort utt$32 0)
(declare-fun Concat_32_4_28 (utt$4 utt$28 ) utt$32)
(declare-fun y$11 () Bool)
(declare-fun y$13 () Bool)
(declare-fun y$135 () Bool)
(declare-fun y$15 () Bool)
(declare-fun y$17 () Bool)
(declare-fun y$19 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$209 () Bool)
(declare-fun y$21 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$25 () Bool)
(declare-fun y$27 () Bool)
(declare-fun y$283 () Bool)
(declare-fun y$29 () Bool)
(declare-fun y$32 () Bool)
(declare-fun y$357 () Bool)
(declare-fun y$36 () Bool)
(declare-fun y$364 () Bool)
(declare-fun y$371 () Bool)
(declare-fun y$378 () Bool)
(declare-fun y$385 () Bool)
(declare-fun y$389 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$393 () Bool)
(declare-fun y$397 () Bool)
(declare-fun y$401 () Bool)
(declare-fun y$403 () Bool)
(declare-fun y$404 () Bool)
(declare-fun y$411 () Bool)
(declare-fun y$413 () Bool)
(declare-fun y$42 () Bool)
(declare-fun y$431 () Bool)
(declare-fun y$432 () Bool)
(declare-fun y$438 () Bool)
(declare-fun y$440 () Bool)
(declare-fun y$444 () Bool)
(declare-fun y$448 () Bool)
(declare-fun y$452 () Bool)
(declare-fun y$455 () Bool)
(declare-fun y$466 () Bool)
(declare-fun y$467 () Bool)
(declare-fun y$470 () Bool)
(declare-fun y$471 () Bool)
(declare-fun y$474 () Bool)
(declare-fun y$477 () Bool)
(declare-fun y$480 () Bool)
(declare-fun y$483 () Bool)
(declare-fun y$484 () Bool)
(declare-fun y$486 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$51 () Bool)
(declare-fun y$512 () Bool)
(declare-fun y$513 () Bool)
(declare-fun y$514 () Bool)
(declare-fun y$515 () Bool)
(declare-fun y$516 () Bool)
(declare-fun y$517 () Bool)
(declare-fun y$528 () Bool)
(declare-fun y$529 () Bool)
(declare-fun y$530 () Bool)
(declare-fun y$531 () Bool)
(declare-fun y$532 () Bool)
(declare-fun y$537 () Bool)
(declare-fun y$538 () Bool)
(declare-fun y$539 () Bool)
(declare-fun y$540 () Bool)
(declare-fun y$546 () Bool)
(declare-fun y$547 () Bool)
(declare-fun y$563 () Bool)
(declare-fun y$568 () Bool)
(declare-fun y$573 () Bool)
(declare-fun y$578 () Bool)
(declare-fun y$581 () Bool)
(declare-fun y$604 () Bool)
(declare-fun y$616 () Bool)
(declare-fun y$617 () Bool)
(declare-fun y$618 () Bool)
(declare-fun y$619 () Bool)
(declare-fun y$620 () Bool)
(declare-fun y$621 () Bool)
(declare-fun y$622 () Bool)
(declare-fun y$623 () Bool)
(declare-fun y$625 () Bool)
(declare-fun y$626 () Bool)
(declare-fun y$629 () Bool)
(declare-fun y$630 () Bool)
(declare-fun y$631 () Bool)
(declare-fun y$633 () Bool)
(declare-fun y$636 () Bool)
(declare-fun y$637 () Bool)
(declare-fun y$642 () Bool)
(declare-fun y$644 () Bool)
(declare-fun y$645 () Bool)
(declare-fun y$646 () Bool)
(declare-fun y$647 () Bool)
(declare-fun y$649 () Bool)
(declare-fun y$650 () Bool)
(declare-fun y$652 () Bool)
(declare-fun y$656 () Bool)
(declare-fun y$662 () Bool)
(declare-fun y$668 () Bool)
(declare-fun y$674 () Bool)
(declare-fun y$677 () Bool)
(declare-fun y$678 () Bool)
(declare-fun y$679 () Bool)
(declare-fun y$682 () Bool)
(declare-fun y$688 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$701 () Bool)
(declare-fun y$702 () Bool)
(declare-fun y$703 () Bool)
(declare-fun y$704 () Bool)
(declare-fun y$705 () Bool)
(declare-fun y$712 () Bool)
(declare-fun y$720 () Bool)
(declare-fun y$727 () Bool)
(declare-fun y$728 () Bool)
(declare-fun y$729 () Bool)
(declare-fun y$730 () Bool)
(declare-fun y$731 () Bool)
(declare-fun y$732 () Bool)
(declare-fun y$733 () Bool)
(declare-fun y$734 () Bool)
(declare-fun y$735 () Bool)
(declare-fun y$736 () Bool)
(declare-fun y$739 () Bool)
(declare-fun y$740 () Bool)
(declare-fun y$741 () Bool)
(declare-fun y$743 () Bool)
(declare-fun y$750 () Bool)
(declare-fun y$754 () Bool)
(declare-fun y$762 () Bool)
(declare-fun y$774 () Bool)
(declare-fun y$775 () Bool)
(declare-fun y$776 () Bool)
(declare-fun y$779 () Bool)
(declare-fun y$780 () Bool)
(declare-fun y$782 () Bool)
(declare-fun y$784 () Bool)
(declare-fun y$793 () Bool)
(declare-fun y$794 () Bool)
(declare-fun y$795 () Bool)
(declare-fun y$796 () Bool)
(declare-fun y$797 () Bool)
(declare-fun y$798 () Bool)
(declare-fun y$799 () Bool)
(declare-fun y$800 () Bool)
(declare-fun y$801 () Bool)
(declare-fun y$803 () Bool)
(declare-fun y$806 () Bool)
(declare-fun y$807 () Bool)
(declare-fun y$808 () Bool)
(declare-fun y$9 () Bool)
(declare-fun y$GRANT_O () utt$4)
(declare-fun y$GRANT_O$next () utt$4)
(declare-fun y$GRANT_O$next_rhs () utt$4)
(declare-fun y$GRANT_O$next_rhs_op () utt$4)
(declare-fun y$REQUEST1 () Bool)
(declare-fun y$REQUEST2 () Bool)
(declare-fun y$REQUEST3 () Bool)
(declare-fun y$REQUEST4 () Bool)
(declare-fun y$coda0 () utt$3)
(declare-fun y$coda0$next () utt$3)
(declare-fun y$coda0$next_rhs () utt$3)
(declare-fun y$coda0$next_rhs_op () utt$3)
(declare-fun y$coda1 () utt$3)
(declare-fun y$coda1$next () utt$3)
(declare-fun y$coda1$next_rhs () utt$3)
(declare-fun y$coda1$next_rhs_op () utt$3)
(declare-fun y$coda2 () utt$3)
(declare-fun y$coda2$next () utt$3)
(declare-fun y$coda2$next_rhs () utt$3)
(declare-fun y$coda2$next_rhs_op () utt$3)
(declare-fun y$coda3 () utt$3)
(declare-fun y$coda3$next () utt$3)
(declare-fun y$coda3$next_rhs () utt$3)
(declare-fun y$coda3$next_rhs_op () utt$3)
(declare-fun y$fu1 () Bool)
(declare-fun y$fu1$next () Bool)
(declare-fun y$fu1$next_rhs () Bool)
(declare-fun y$fu1$next_rhs_op () Bool)
(declare-fun y$fu2 () Bool)
(declare-fun y$fu2$next () Bool)
(declare-fun y$fu2$next_rhs () Bool)
(declare-fun y$fu2$next_rhs_op () Bool)
(declare-fun y$fu3 () Bool)
(declare-fun y$fu3$next () Bool)
(declare-fun y$fu3$next_rhs () Bool)
(declare-fun y$fu3$next_rhs_op () Bool)
(declare-fun y$fu4 () Bool)
(declare-fun y$fu4$next () Bool)
(declare-fun y$fu4$next_rhs () Bool)
(declare-fun y$fu4$next_rhs_op () Bool)
(declare-fun y$grant () utt$4)
(declare-fun y$grant$next () utt$4)
(declare-fun y$grant$next_rhs () utt$4)
(declare-fun y$grant$next_rhs_op () utt$4)
(declare-fun y$n0s2 () utt$2)
(declare-fun y$n0s28 () utt$28)
(declare-fun y$n0s3 () utt$3)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n0s4 () utt$4)
(declare-fun y$n1s1 () Bool)
(declare-fun y$n1s2 () utt$2)
(declare-fun y$n1s3 () utt$3)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n1s4 () utt$4)
(declare-fun y$n2s2 () utt$2)
(declare-fun y$n2s3 () utt$3)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$n2s4 () utt$4)
(declare-fun y$n3s32 () utt$32)
(declare-fun y$n3s4 () utt$4)
(declare-fun y$n4s3 () utt$3)
(declare-fun y$n4s32 () utt$32)
(declare-fun y$n4s4 () utt$4)
(declare-fun y$n7s3 () utt$3)
(declare-fun y$n8s32 () utt$32)
(declare-fun y$n8s4 () utt$4)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$prop0 () Bool)
(declare-fun y$prop0$next () Bool)
(declare-fun y$prop0$next_op () Bool)
(declare-fun y$prop0_op () Bool)
(declare-fun y$ru1 () Bool)
(declare-fun y$ru1$next () Bool)
(declare-fun y$ru1$next_rhs () Bool)
(declare-fun y$ru1$next_rhs_op () Bool)
(declare-fun y$ru2 () Bool)
(declare-fun y$ru2$next () Bool)
(declare-fun y$ru2$next_rhs () Bool)
(declare-fun y$ru2$next_rhs_op () Bool)
(declare-fun y$ru3 () Bool)
(declare-fun y$ru3$next () Bool)
(declare-fun y$ru3$next_rhs () Bool)
(declare-fun y$ru3$next_rhs_op () Bool)
(declare-fun y$ru4 () Bool)
(declare-fun y$ru4$next () Bool)
(declare-fun y$ru4$next_rhs () Bool)
(declare-fun y$ru4$next_rhs_op () Bool)
(declare-fun y$s$100 () utt$3)
(declare-fun y$s$100_op () utt$3)
(declare-fun y$s$102 () utt$3)
(declare-fun y$s$102_op () utt$3)
(declare-fun y$s$103 () utt$3)
(declare-fun y$s$103_op () utt$3)
(declare-fun y$s$104 () utt$3)
(declare-fun y$s$104_op () utt$3)
(declare-fun y$s$105 () utt$3)
(declare-fun y$s$105_op () utt$3)
(declare-fun y$s$107 () utt$3)
(declare-fun y$s$107_op () utt$3)
(declare-fun y$s$108 () utt$3)
(declare-fun y$s$108_op () utt$3)
(declare-fun y$s$109 () utt$3)
(declare-fun y$s$109_op () utt$3)
(declare-fun y$s$110 () utt$3)
(declare-fun y$s$110_op () utt$3)
(declare-fun y$s$112 () utt$3)
(declare-fun y$s$112_op () utt$3)
(declare-fun y$s$113 () utt$3)
(declare-fun y$s$113_op () utt$3)
(declare-fun y$s$114 () utt$3)
(declare-fun y$s$114_op () utt$3)
(declare-fun y$s$115 () utt$3)
(declare-fun y$s$115_op () utt$3)
(declare-fun y$s$117 () utt$3)
(declare-fun y$s$117_op () utt$3)
(declare-fun y$s$118 () utt$3)
(declare-fun y$s$118_op () utt$3)
(declare-fun y$s$119 () utt$3)
(declare-fun y$s$119_op () utt$3)
(declare-fun y$s$120 () utt$3)
(declare-fun y$s$120_op () utt$3)
(declare-fun y$s$122 () utt$3)
(declare-fun y$s$122_op () utt$3)
(declare-fun y$s$123 () utt$3)
(declare-fun y$s$123_op () utt$3)
(declare-fun y$s$124 () utt$3)
(declare-fun y$s$124_op () utt$3)
(declare-fun y$s$125 () utt$3)
(declare-fun y$s$125_op () utt$3)
(declare-fun y$s$127 () utt$3)
(declare-fun y$s$127_op () utt$3)
(declare-fun y$s$128 () utt$3)
(declare-fun y$s$128_op () utt$3)
(declare-fun y$s$129 () utt$3)
(declare-fun y$s$129_op () utt$3)
(declare-fun y$s$130 () utt$3)
(declare-fun y$s$130_op () utt$3)
(declare-fun y$s$132 () utt$3)
(declare-fun y$s$132_op () utt$3)
(declare-fun y$s$133 () utt$3)
(declare-fun y$s$133_op () utt$3)
(declare-fun y$s$135 () utt$3)
(declare-fun y$s$135_op () utt$3)
(declare-fun y$s$136 () utt$3)
(declare-fun y$s$136_op () utt$3)
(declare-fun y$s$139 () utt$3)
(declare-fun y$s$139_op () utt$3)
(declare-fun y$s$140 () utt$3)
(declare-fun y$s$140_op () utt$3)
(declare-fun y$s$141 () utt$3)
(declare-fun y$s$141_op () utt$3)
(declare-fun y$s$144 () utt$3)
(declare-fun y$s$144_op () utt$3)
(declare-fun y$s$145 () utt$3)
(declare-fun y$s$145_op () utt$3)
(declare-fun y$s$146 () utt$3)
(declare-fun y$s$146_op () utt$3)
(declare-fun y$s$149 () utt$3)
(declare-fun y$s$149_op () utt$3)
(declare-fun y$s$15 () utt$3)
(declare-fun y$s$150 () utt$3)
(declare-fun y$s$150_op () utt$3)
(declare-fun y$s$151 () utt$4)
(declare-fun y$s$151_op () utt$4)
(declare-fun y$s$152 () utt$3)
(declare-fun y$s$152_op () utt$3)
(declare-fun y$s$154 () utt$3)
(declare-fun y$s$154_op () utt$3)
(declare-fun y$s$155 () utt$3)
(declare-fun y$s$155_op () utt$3)
(declare-fun y$s$156 () utt$3)
(declare-fun y$s$156_op () utt$3)
(declare-fun y$s$158 () utt$3)
(declare-fun y$s$158_op () utt$3)
(declare-fun y$s$159 () utt$3)
(declare-fun y$s$159_op () utt$3)
(declare-fun y$s$15_op () utt$3)
(declare-fun y$s$16 () utt$3)
(declare-fun y$s$160 () utt$3)
(declare-fun y$s$160_op () utt$3)
(declare-fun y$s$163 () utt$3)
(declare-fun y$s$163_op () utt$3)
(declare-fun y$s$164 () utt$3)
(declare-fun y$s$164_op () utt$3)
(declare-fun y$s$165 () utt$3)
(declare-fun y$s$165_op () utt$3)
(declare-fun y$s$167 () utt$3)
(declare-fun y$s$167_op () utt$3)
(declare-fun y$s$168 () utt$3)
(declare-fun y$s$168_op () utt$3)
(declare-fun y$s$169 () utt$3)
(declare-fun y$s$169_op () utt$3)
(declare-fun y$s$16_op () utt$3)
(declare-fun y$s$17 () utt$3)
(declare-fun y$s$171 () utt$3)
(declare-fun y$s$171_op () utt$3)
(declare-fun y$s$172 () utt$3)
(declare-fun y$s$172_op () utt$3)
(declare-fun y$s$173 () utt$3)
(declare-fun y$s$173_op () utt$3)
(declare-fun y$s$174 () utt$3)
(declare-fun y$s$174_op () utt$3)
(declare-fun y$s$176 () utt$3)
(declare-fun y$s$176_op () utt$3)
(declare-fun y$s$177 () utt$3)
(declare-fun y$s$177_op () utt$3)
(declare-fun y$s$179 () utt$3)
(declare-fun y$s$179_op () utt$3)
(declare-fun y$s$17_op () utt$3)
(declare-fun y$s$18 () utt$3)
(declare-fun y$s$180 () utt$3)
(declare-fun y$s$180_op () utt$3)
(declare-fun y$s$183 () utt$3)
(declare-fun y$s$183_op () utt$3)
(declare-fun y$s$184 () utt$3)
(declare-fun y$s$184_op () utt$3)
(declare-fun y$s$186 () utt$3)
(declare-fun y$s$186_op () utt$3)
(declare-fun y$s$187 () utt$3)
(declare-fun y$s$187_op () utt$3)
(declare-fun y$s$189 () utt$3)
(declare-fun y$s$189_op () utt$3)
(declare-fun y$s$18_op () utt$3)
(declare-fun y$s$19 () utt$3)
(declare-fun y$s$190 () utt$3)
(declare-fun y$s$190_op () utt$3)
(declare-fun y$s$191 () utt$3)
(declare-fun y$s$191_op () utt$3)
(declare-fun y$s$193 () utt$3)
(declare-fun y$s$193_op () utt$3)
(declare-fun y$s$194 () utt$3)
(declare-fun y$s$194_op () utt$3)
(declare-fun y$s$196 () utt$3)
(declare-fun y$s$196_op () utt$3)
(declare-fun y$s$197 () utt$3)
(declare-fun y$s$197_op () utt$3)
(declare-fun y$s$199 () utt$3)
(declare-fun y$s$199_op () utt$3)
(declare-fun y$s$19_op () utt$3)
(declare-fun y$s$20 () utt$3)
(declare-fun y$s$200 () utt$3)
(declare-fun y$s$200_op () utt$3)
(declare-fun y$s$203 () utt$3)
(declare-fun y$s$203_op () utt$3)
(declare-fun y$s$205 () utt$3)
(declare-fun y$s$205_op () utt$3)
(declare-fun y$s$207 () utt$3)
(declare-fun y$s$207_op () utt$3)
(declare-fun y$s$209 () utt$3)
(declare-fun y$s$209_op () utt$3)
(declare-fun y$s$20_op () utt$3)
(declare-fun y$s$21 () utt$3)
(declare-fun y$s$211 () utt$3)
(declare-fun y$s$211_op () utt$3)
(declare-fun y$s$21_op () utt$3)
(declare-fun y$s$22 () utt$3)
(declare-fun y$s$22_op () utt$3)
(declare-fun y$s$23 () utt$4)
(declare-fun y$s$238 () utt$3)
(declare-fun y$s$238_op () utt$3)
(declare-fun y$s$23_op () utt$4)
(declare-fun y$s$24 () utt$3)
(declare-fun y$s$240 () utt$4)
(declare-fun y$s$240_op () utt$4)
(declare-fun y$s$242 () utt$3)
(declare-fun y$s$242_op () utt$3)
(declare-fun y$s$243 () utt$3)
(declare-fun y$s$243_op () utt$3)
(declare-fun y$s$244 () utt$3)
(declare-fun y$s$244_op () utt$3)
(declare-fun y$s$245 () utt$3)
(declare-fun y$s$245_op () utt$3)
(declare-fun y$s$246 () utt$3)
(declare-fun y$s$246_op () utt$3)
(declare-fun y$s$248 () utt$3)
(declare-fun y$s$248_op () utt$3)
(declare-fun y$s$249 () utt$3)
(declare-fun y$s$249_op () utt$3)
(declare-fun y$s$24_op () utt$3)
(declare-fun y$s$25 () utt$3)
(declare-fun y$s$250 () utt$3)
(declare-fun y$s$250_op () utt$3)
(declare-fun y$s$251 () utt$3)
(declare-fun y$s$251_op () utt$3)
(declare-fun y$s$252 () utt$3)
(declare-fun y$s$252_op () utt$3)
(declare-fun y$s$25_op () utt$3)
(declare-fun y$s$26 () utt$3)
(declare-fun y$s$26_op () utt$3)
(declare-fun y$s$27 () utt$3)
(declare-fun y$s$27_op () utt$3)
(declare-fun y$s$28 () utt$4)
(declare-fun y$s$28_op () utt$4)
(declare-fun y$s$29 () utt$3)
(declare-fun y$s$29_op () utt$3)
(declare-fun y$s$30 () utt$3)
(declare-fun y$s$30_op () utt$3)
(declare-fun y$s$31 () utt$3)
(declare-fun y$s$31_op () utt$3)
(declare-fun y$s$32 () utt$3)
(declare-fun y$s$32_op () utt$3)
(declare-fun y$s$33 () utt$3)
(declare-fun y$s$33_op () utt$3)
(declare-fun y$s$34 () utt$3)
(declare-fun y$s$34_op () utt$3)
(declare-fun y$s$35 () utt$3)
(declare-fun y$s$35_op () utt$3)
(declare-fun y$s$36 () utt$3)
(declare-fun y$s$36_op () utt$3)
(declare-fun y$s$37 () utt$3)
(declare-fun y$s$37_op () utt$3)
(declare-fun y$s$38 () utt$3)
(declare-fun y$s$38_op () utt$3)
(declare-fun y$s$39 () utt$3)
(declare-fun y$s$39_op () utt$3)
(declare-fun y$s$40 () utt$3)
(declare-fun y$s$40_op () utt$3)
(declare-fun y$s$41 () utt$3)
(declare-fun y$s$41_op () utt$3)
(declare-fun y$s$42 () utt$3)
(declare-fun y$s$42_op () utt$3)
(declare-fun y$s$43 () utt$3)
(declare-fun y$s$43_op () utt$3)
(declare-fun y$s$44 () utt$3)
(declare-fun y$s$44_op () utt$3)
(declare-fun y$s$45 () utt$3)
(declare-fun y$s$45_op () utt$3)
(declare-fun y$s$46 () utt$3)
(declare-fun y$s$46_op () utt$3)
(declare-fun y$s$47 () utt$3)
(declare-fun y$s$47_op () utt$3)
(declare-fun y$s$48 () utt$3)
(declare-fun y$s$48_op () utt$3)
(declare-fun y$s$49 () utt$3)
(declare-fun y$s$49_op () utt$3)
(declare-fun y$s$50 () utt$3)
(declare-fun y$s$50_op () utt$3)
(declare-fun y$s$51 () utt$3)
(declare-fun y$s$51_op () utt$3)
(declare-fun y$s$52 () utt$3)
(declare-fun y$s$52_op () utt$3)
(declare-fun y$s$53 () Bool)
(declare-fun y$s$53_op () Bool)
(declare-fun y$s$54 () Bool)
(declare-fun y$s$54_op () Bool)
(declare-fun y$s$55 () utt$4)
(declare-fun y$s$55_op () utt$4)
(declare-fun y$s$56 () utt$4)
(declare-fun y$s$56_op () utt$4)
(declare-fun y$s$57 () utt$4)
(declare-fun y$s$57_op () utt$4)
(declare-fun y$s$58 () utt$4)
(declare-fun y$s$58_op () utt$4)
(declare-fun y$s$59 () utt$2)
(declare-fun y$s$59_op () utt$2)
(declare-fun y$s$60 () utt$2)
(declare-fun y$s$60_op () utt$2)
(declare-fun y$s$61 () Bool)
(declare-fun y$s$61_op () Bool)
(declare-fun y$s$62 () Bool)
(declare-fun y$s$62_op () Bool)
(declare-fun y$s$63 () Bool)
(declare-fun y$s$63_op () Bool)
(declare-fun y$s$64 () Bool)
(declare-fun y$s$64_op () Bool)
(declare-fun y$s$65 () utt$3)
(declare-fun y$s$65_op () utt$3)
(declare-fun y$s$66 () utt$3)
(declare-fun y$s$66_op () utt$3)
(declare-fun y$s$67 () utt$3)
(declare-fun y$s$67_op () utt$3)
(declare-fun y$s$68 () utt$3)
(declare-fun y$s$68_op () utt$3)
(declare-fun y$s$78 () Bool)
(declare-fun y$s$78$next () Bool)
(declare-fun y$s$78$next_op () Bool)
(declare-fun y$s$78_op () Bool)
(declare-fun y$s$79 () Bool)
(declare-fun y$s$79$next () Bool)
(declare-fun y$s$79$next_op () Bool)
(declare-fun y$s$79_op () Bool)
(declare-fun y$s$80 () Bool)
(declare-fun y$s$80$next () Bool)
(declare-fun y$s$80$next_op () Bool)
(declare-fun y$s$80_op () Bool)
(declare-fun y$s$81 () Bool)
(declare-fun y$s$81_op () Bool)
(declare-fun y$s$82 () Bool)
(declare-fun y$s$82_op () Bool)
(declare-fun y$s$83 () Bool)
(declare-fun y$s$83_op () Bool)
(declare-fun y$s$85 () utt$3)
(declare-fun y$s$85_op () utt$3)
(declare-fun y$s$86 () utt$3)
(declare-fun y$s$86_op () utt$3)
(declare-fun y$s$87 () utt$3)
(declare-fun y$s$87_op () utt$3)
(declare-fun y$s$88 () utt$3)
(declare-fun y$s$88_op () utt$3)
(declare-fun y$s$89 () utt$3)
(declare-fun y$s$89_op () utt$3)
(declare-fun y$s$91 () utt$3)
(declare-fun y$s$91_op () utt$3)
(declare-fun y$s$92 () utt$3)
(declare-fun y$s$92_op () utt$3)
(declare-fun y$s$93 () utt$3)
(declare-fun y$s$93_op () utt$3)
(declare-fun y$s$94 () utt$3)
(declare-fun y$s$94_op () utt$3)
(declare-fun y$s$95 () utt$3)
(declare-fun y$s$95_op () utt$3)
(declare-fun y$s$97 () utt$3)
(declare-fun y$s$97_op () utt$3)
(declare-fun y$s$98 () utt$3)
(declare-fun y$s$98_op () utt$3)
(declare-fun y$s$99 () utt$3)
(declare-fun y$s$99_op () utt$3)
(declare-fun y$stato () utt$2)
(declare-fun y$stato$next () utt$2)
(declare-fun y$stato$next_rhs () utt$2)
(declare-fun y$stato$next_rhs_op () utt$2)
(declare-fun y$w$1 () utt$32)
(declare-fun y$w$1$next () utt$32)
(declare-fun y$w$1$next_op () utt$32)
(declare-fun y$w$1_op () utt$32)
(assert (distinct y$n0s2 y$n1s2 y$n2s2))
(assert (distinct y$n0s3 y$n4s3 y$n2s3 y$n1s3 y$n7s3))
(assert (distinct y$n0s4 y$n1s4 y$n2s4 y$n4s4 y$n8s4 y$n3s4))
(assert (distinct y$n0s32 y$n8s32 y$n4s32 y$n2s32 y$n1s32 y$n3s32))
(assert (= y$w$1_op (Concat_32_4_28 y$GRANT_O y$n0s28)))
(assert (= y$438 (= y$n0s32 y$w$1_op)))
(assert (= y$440 (= y$n8s32 y$w$1_op)))
(assert (= y$s$78_op (or y$438 y$440)))
(assert (= y$444 (= y$n4s32 y$w$1_op)))
(assert (= y$s$79_op (or y$s$78_op y$444)))
(assert (= y$448 (= y$n2s32 y$w$1_op)))
(assert (= y$s$80_op (or y$s$79_op y$448)))
(assert (= y$452 (= y$n1s32 y$w$1_op)))
(assert (= y$prop0_op (or y$s$80_op y$452)))
(assert (= y$455 (= y$prop y$prop0_op)))
(assert (= y$36 (= y$n1s2 y$stato)))
(assert (= y$GRANT_O$next_rhs_op (ite y$36 y$grant y$GRANT_O)))
(assert (= y$39 (= y$GRANT_O$next y$GRANT_O$next_rhs_op)))
(assert (= y$42 (= y$n2s2 y$stato)))
(assert (= y$s$54_op (or y$36 y$42)))
(assert (= y$s$59_op (ite y$42 y$n1s2 y$n2s2)))
(assert (= y$32 (= y$n0s2 y$stato)))
(assert (= y$s$60_op (ite y$32 y$n1s2 y$stato)))
(assert (= y$stato$next_rhs_op (ite y$s$54_op y$s$59_op y$s$60_op)))
(assert (= y$51 (= y$stato$next y$stato$next_rhs_op)))
(assert (= y$s$81_op (or y$fu1 y$fu2)))
(assert (= y$s$82_op (or y$fu3 y$s$81_op)))
(assert (= y$s$83_op (or y$fu4 y$s$82_op)))
(assert (= y$s$238_op (ite y$s$83_op y$coda1 y$coda0)))
(assert (= y$s$15_op (ite y$42 y$s$238_op y$n0s3)))
(assert (= y$fu1 (not y$13)))
(assert (= y$s$189_op (ite y$13 y$n4s3 y$coda0)))
(assert (= y$s$190_op (ite y$ru1 y$s$189_op y$n0s3)))
(assert (= y$s$24_op (ite y$36 y$s$190_op y$n0s3)))
(assert (= y$fu2 (not y$15)))
(assert (= y$s$158_op (ite y$15 y$n2s3 y$coda0)))
(assert (= y$s$159_op (ite y$ru2 y$s$158_op y$n0s3)))
(assert (= y$s$160_op (ite y$ru1 y$n0s3 y$s$159_op)))
(assert (= y$s$33_op (ite y$36 y$s$160_op y$n0s3)))
(assert (= y$fu3 (not y$17)))
(assert (= y$s$117_op (ite y$17 y$n1s3 y$coda0)))
(assert (= y$s$118_op (ite y$ru3 y$s$117_op y$n0s3)))
(assert (= y$s$119_op (ite y$ru2 y$n0s3 y$s$118_op)))
(assert (= y$s$120_op (ite y$ru1 y$n0s3 y$s$119_op)))
(assert (= y$s$41_op (ite y$36 y$s$120_op y$n0s3)))
(assert (= y$fu4 (not y$19)))
(assert (= y$s$242_op (ite y$19 y$n7s3 y$coda0)))
(assert (= y$s$243_op (ite y$ru4 y$s$242_op y$n0s3)))
(assert (= y$s$244_op (ite y$ru3 y$n0s3 y$s$243_op)))
(assert (= y$s$245_op (ite y$ru2 y$n0s3 y$s$244_op)))
(assert (= y$s$246_op (ite y$ru1 y$n0s3 y$s$245_op)))
(assert (= y$s$49_op (ite y$36 y$s$246_op y$n0s3)))
(assert (= y$s$112_op (ite y$ru4 y$s$49_op y$coda0)))
(assert (= y$s$113_op (ite y$ru3 y$n0s3 y$s$112_op)))
(assert (= y$s$114_op (ite y$ru2 y$n0s3 y$s$113_op)))
(assert (= y$s$115_op (ite y$ru1 y$n0s3 y$s$114_op)))
(assert (= y$s$45_op (ite y$36 y$s$115_op y$n0s3)))
(assert (= y$s$154_op (ite y$ru3 y$s$41_op y$s$45_op)))
(assert (= y$s$155_op (ite y$ru2 y$n0s3 y$s$154_op)))
(assert (= y$s$156_op (ite y$ru1 y$n0s3 y$s$155_op)))
(assert (= y$s$37_op (ite y$36 y$s$156_op y$n0s3)))
(assert (= y$s$186_op (ite y$ru2 y$s$33_op y$s$37_op)))
(assert (= y$s$187_op (ite y$ru1 y$n0s3 y$s$186_op)))
(assert (= y$s$29_op (ite y$36 y$s$187_op y$n0s3)))
(assert (= y$s$209_op (ite y$ru1 y$s$24_op y$s$29_op)))
(assert (= y$s$19_op (ite y$36 y$s$209_op y$n0s3)))
(assert (= y$s$68_op (ite y$36 y$s$19_op y$coda0)))
(assert (= y$coda0$next_rhs_op (ite y$42 y$s$15_op y$s$68_op)))
(assert (= y$135 (= y$coda0$next y$coda0$next_rhs_op)))
(assert (= y$s$211_op (ite y$s$83_op y$coda2 y$coda1)))
(assert (= y$s$16_op (ite y$42 y$s$211_op y$n0s3)))
(assert (= y$s$193_op (ite y$13 y$coda0 y$coda1)))
(assert (= y$s$194_op (ite y$ru1 y$s$193_op y$n0s3)))
(assert (= y$s$25_op (ite y$36 y$s$194_op y$n0s3)))
(assert (= y$s$163_op (ite y$15 y$coda0 y$coda1)))
(assert (= y$s$164_op (ite y$ru2 y$s$163_op y$n0s3)))
(assert (= y$s$165_op (ite y$ru1 y$n0s3 y$s$164_op)))
(assert (= y$s$34_op (ite y$36 y$s$165_op y$n0s3)))
(assert (= y$s$122_op (ite y$17 y$coda0 y$coda1)))
(assert (= y$s$123_op (ite y$ru3 y$s$122_op y$n0s3)))
(assert (= y$s$124_op (ite y$ru2 y$n0s3 y$s$123_op)))
(assert (= y$s$125_op (ite y$ru1 y$n0s3 y$s$124_op)))
(assert (= y$s$42_op (ite y$36 y$s$125_op y$n0s3)))
(assert (= y$s$248_op (ite y$19 y$coda0 y$coda1)))
(assert (= y$s$249_op (ite y$ru4 y$s$248_op y$n0s3)))
(assert (= y$s$250_op (ite y$ru3 y$n0s3 y$s$249_op)))
(assert (= y$s$251_op (ite y$ru2 y$n0s3 y$s$250_op)))
(assert (= y$s$252_op (ite y$ru1 y$n0s3 y$s$251_op)))
(assert (= y$s$50_op (ite y$36 y$s$252_op y$n0s3)))
(assert (= y$s$107_op (ite y$ru4 y$s$50_op y$coda1)))
(assert (= y$s$108_op (ite y$ru3 y$n0s3 y$s$107_op)))
(assert (= y$s$109_op (ite y$ru2 y$n0s3 y$s$108_op)))
(assert (= y$s$110_op (ite y$ru1 y$n0s3 y$s$109_op)))
(assert (= y$s$46_op (ite y$36 y$s$110_op y$n0s3)))
(assert (= y$s$149_op (ite y$ru3 y$s$42_op y$s$46_op)))
(assert (= y$s$150_op (ite y$ru2 y$n0s3 y$s$149_op)))
(assert (= y$s$152_op (ite y$ru1 y$n0s3 y$s$150_op)))
(assert (= y$s$38_op (ite y$36 y$s$152_op y$n0s3)))
(assert (= y$s$183_op (ite y$ru2 y$s$34_op y$s$38_op)))
(assert (= y$s$184_op (ite y$ru1 y$n0s3 y$s$183_op)))
(assert (= y$s$30_op (ite y$36 y$s$184_op y$n0s3)))
(assert (= y$s$207_op (ite y$ru1 y$s$25_op y$s$30_op)))
(assert (= y$s$20_op (ite y$36 y$s$207_op y$n0s3)))
(assert (= y$s$67_op (ite y$36 y$s$20_op y$coda1)))
(assert (= y$coda1$next_rhs_op (ite y$42 y$s$16_op y$s$67_op)))
(assert (= y$209 (= y$coda1$next y$coda1$next_rhs_op)))
(assert (= y$s$191_op (ite y$s$83_op y$coda3 y$coda2)))
(assert (= y$s$17_op (ite y$42 y$s$191_op y$n0s3)))
(assert (= y$s$196_op (ite y$13 y$coda1 y$coda2)))
(assert (= y$s$197_op (ite y$ru1 y$s$196_op y$n0s3)))
(assert (= y$s$26_op (ite y$36 y$s$197_op y$n0s3)))
(assert (= y$s$167_op (ite y$15 y$coda1 y$coda2)))
(assert (= y$s$168_op (ite y$ru2 y$s$167_op y$n0s3)))
(assert (= y$s$169_op (ite y$ru1 y$n0s3 y$s$168_op)))
(assert (= y$s$35_op (ite y$36 y$s$169_op y$n0s3)))
(assert (= y$s$127_op (ite y$17 y$coda1 y$coda2)))
(assert (= y$s$128_op (ite y$ru3 y$s$127_op y$n0s3)))
(assert (= y$s$129_op (ite y$ru2 y$n0s3 y$s$128_op)))
(assert (= y$s$130_op (ite y$ru1 y$n0s3 y$s$129_op)))
(assert (= y$s$43_op (ite y$36 y$s$130_op y$n0s3)))
(assert (= y$s$85_op (ite y$19 y$coda1 y$coda2)))
(assert (= y$s$86_op (ite y$ru4 y$s$85_op y$n0s3)))
(assert (= y$s$87_op (ite y$ru3 y$n0s3 y$s$86_op)))
(assert (= y$s$88_op (ite y$ru2 y$n0s3 y$s$87_op)))
(assert (= y$s$89_op (ite y$ru1 y$n0s3 y$s$88_op)))
(assert (= y$s$51_op (ite y$36 y$s$89_op y$n0s3)))
(assert (= y$s$102_op (ite y$ru4 y$s$51_op y$coda2)))
(assert (= y$s$103_op (ite y$ru3 y$n0s3 y$s$102_op)))
(assert (= y$s$104_op (ite y$ru2 y$n0s3 y$s$103_op)))
(assert (= y$s$105_op (ite y$ru1 y$n0s3 y$s$104_op)))
(assert (= y$s$47_op (ite y$36 y$s$105_op y$n0s3)))
(assert (= y$s$144_op (ite y$ru3 y$s$43_op y$s$47_op)))
(assert (= y$s$145_op (ite y$ru2 y$n0s3 y$s$144_op)))
(assert (= y$s$146_op (ite y$ru1 y$n0s3 y$s$145_op)))
(assert (= y$s$39_op (ite y$36 y$s$146_op y$n0s3)))
(assert (= y$s$179_op (ite y$ru2 y$s$35_op y$s$39_op)))
(assert (= y$s$180_op (ite y$ru1 y$n0s3 y$s$179_op)))
(assert (= y$s$31_op (ite y$36 y$s$180_op y$n0s3)))
(assert (= y$s$205_op (ite y$ru1 y$s$26_op y$s$31_op)))
(assert (= y$s$21_op (ite y$36 y$s$205_op y$n0s3)))
(assert (= y$s$66_op (ite y$36 y$s$21_op y$coda2)))
(assert (= y$coda2$next_rhs_op (ite y$42 y$s$17_op y$s$66_op)))
(assert (= y$283 (= y$coda2$next y$coda2$next_rhs_op)))
(assert (= y$s$171_op (ite y$s$83_op y$n0s3 y$coda3)))
(assert (= y$s$18_op (ite y$42 y$s$171_op y$n0s3)))
(assert (= y$s$199_op (ite y$13 y$coda2 y$coda3)))
(assert (= y$s$200_op (ite y$ru1 y$s$199_op y$n0s3)))
(assert (= y$s$27_op (ite y$36 y$s$200_op y$n0s3)))
(assert (= y$s$172_op (ite y$15 y$coda2 y$coda3)))
(assert (= y$s$173_op (ite y$ru2 y$s$172_op y$n0s3)))
(assert (= y$s$174_op (ite y$ru1 y$n0s3 y$s$173_op)))
(assert (= y$s$36_op (ite y$36 y$s$174_op y$n0s3)))
(assert (= y$s$132_op (ite y$17 y$coda2 y$coda3)))
(assert (= y$s$133_op (ite y$ru3 y$s$132_op y$n0s3)))
(assert (= y$s$135_op (ite y$ru2 y$n0s3 y$s$133_op)))
(assert (= y$s$136_op (ite y$ru1 y$n0s3 y$s$135_op)))
(assert (= y$s$44_op (ite y$36 y$s$136_op y$n0s3)))
(assert (= y$s$91_op (ite y$19 y$coda2 y$coda3)))
(assert (= y$s$92_op (ite y$ru4 y$s$91_op y$n0s3)))
(assert (= y$s$93_op (ite y$ru3 y$n0s3 y$s$92_op)))
(assert (= y$s$94_op (ite y$ru2 y$n0s3 y$s$93_op)))
(assert (= y$s$95_op (ite y$ru1 y$n0s3 y$s$94_op)))
(assert (= y$s$52_op (ite y$36 y$s$95_op y$n0s3)))
(assert (= y$s$97_op (ite y$ru4 y$s$52_op y$coda3)))
(assert (= y$s$98_op (ite y$ru3 y$n0s3 y$s$97_op)))
(assert (= y$s$99_op (ite y$ru2 y$n0s3 y$s$98_op)))
(assert (= y$s$100_op (ite y$ru1 y$n0s3 y$s$99_op)))
(assert (= y$s$48_op (ite y$36 y$s$100_op y$n0s3)))
(assert (= y$s$139_op (ite y$ru3 y$s$44_op y$s$48_op)))
(assert (= y$s$140_op (ite y$ru2 y$n0s3 y$s$139_op)))
(assert (= y$s$141_op (ite y$ru1 y$n0s3 y$s$140_op)))
(assert (= y$s$40_op (ite y$36 y$s$141_op y$n0s3)))
(assert (= y$s$176_op (ite y$ru2 y$s$36_op y$s$40_op)))
(assert (= y$s$177_op (ite y$ru1 y$n0s3 y$s$176_op)))
(assert (= y$s$32_op (ite y$36 y$s$177_op y$n0s3)))
(assert (= y$s$203_op (ite y$ru1 y$s$27_op y$s$32_op)))
(assert (= y$s$22_op (ite y$36 y$s$203_op y$n0s3)))
(assert (= y$s$65_op (ite y$36 y$s$22_op y$coda3)))
(assert (= y$coda3$next_rhs_op (ite y$42 y$s$18_op y$s$65_op)))
(assert (= y$357 (= y$coda3$next y$coda3$next_rhs_op)))
(assert (= y$s$64_op (ite y$32 y$REQUEST1 y$ru1)))
(assert (= y$ru1$next_rhs_op (ite y$42 y$REQUEST1 y$s$64_op)))
(assert (= y$364 (= y$ru1$next y$ru1$next_rhs_op)))
(assert (= y$s$63_op (ite y$32 y$REQUEST2 y$ru2)))
(assert (= y$ru2$next_rhs_op (ite y$42 y$REQUEST2 y$s$63_op)))
(assert (= y$371 (= y$ru2$next y$ru2$next_rhs_op)))
(assert (= y$s$62_op (ite y$32 y$REQUEST3 y$ru3)))
(assert (= y$ru3$next_rhs_op (ite y$42 y$REQUEST3 y$s$62_op)))
(assert (= y$378 (= y$ru3$next y$ru3$next_rhs_op)))
(assert (= y$s$61_op (ite y$32 y$REQUEST4 y$ru4)))
(assert (= y$ru4$next_rhs_op (ite y$42 y$REQUEST4 y$s$61_op)))
(assert (= y$385 (= y$ru4$next y$ru4$next_rhs_op)))
(assert (= y$fu1$next_rhs_op (ite y$36 y$ru1 y$fu1)))
(assert (= y$389 (= y$fu1$next y$fu1$next_rhs_op)))
(assert (= y$fu2$next_rhs_op (ite y$36 y$ru2 y$fu2)))
(assert (= y$393 (= y$fu2$next y$fu2$next_rhs_op)))
(assert (= y$fu3$next_rhs_op (ite y$36 y$ru3 y$fu3)))
(assert (= y$397 (= y$fu3$next y$fu3$next_rhs_op)))
(assert (= y$fu4$next_rhs_op (ite y$36 y$ru4 y$fu4)))
(assert (= y$401 (= y$fu4$next y$fu4$next_rhs_op)))
(assert (= y$403 (= y$n1s3 y$coda0)))
(assert (= y$404 (= y$n7s3 y$coda0)))
(assert (= y$s$53_op (or y$403 y$404)))
(assert (= y$s$55_op (ite y$404 y$n1s4 y$n2s4)))
(assert (= y$411 (= y$n2s3 y$coda0)))
(assert (= y$413 (= y$n4s3 y$coda0)))
(assert (= y$s$56_op (ite y$413 y$n8s4 y$n0s4)))
(assert (= y$s$57_op (ite y$411 y$n4s4 y$s$56_op)))
(assert (= y$s$58_op (ite y$s$53_op y$s$55_op y$s$57_op)))
(assert (= y$s$151_op (ite y$s$83_op y$s$58_op y$n0s4)))
(assert (= y$s$28_op (ite y$42 y$s$151_op y$n0s4)))
(assert (= y$s$240_op (ite y$s$83_op y$s$28_op y$grant)))
(assert (= y$s$23_op (ite y$42 y$s$240_op y$n0s4)))
(assert (= y$grant$next_rhs_op (ite y$42 y$s$23_op y$grant)))
(assert (= y$431 (= y$grant$next y$grant$next_rhs_op)))
(assert (= y$432 (and y$39 y$51 y$135 y$209 y$283 y$357 y$364 y$371 y$378 y$385 y$389 y$393 y$397 y$401 y$431)))
(assert (= y$w$1$next_op (Concat_32_4_28 y$GRANT_O$next y$n0s28)))
(assert (= (= y$n0s32 y$w$1$next_op) y$470))
(assert (= y$471 (= y$n8s32 y$w$1$next_op)))
(assert (= y$s$78$next_op (or y$470 y$471)))
(assert (= y$474 (= y$n4s32 y$w$1$next_op)))
(assert (= y$s$79$next_op (or y$s$78$next_op y$474)))
(assert (= y$477 (= y$n2s32 y$w$1$next_op)))
(assert (= y$s$80$next_op (or y$s$79$next_op y$477)))
(assert (= y$480 (= y$n1s32 y$w$1$next_op)))
(assert (= y$prop0$next_op (or y$s$80$next_op y$480)))
(assert (= y$483 (= y$prop$next y$prop0$next_op)))
(assert (= y$prop$next (not y$467)))
(assert (= y$513 (= y$n0s4 y$GRANT_O$next)))
(assert (= y$514 (not (= y$n0s32 y$w$1$next_op))))
(assert (= y$515 (and y$513 y$514)))
(assert (= y$515 (not y$517)))
(assert (= y$2 (= y$n0s4 y$GRANT_O)))
(assert (= (not (= y$n0s32 y$w$1_op)) y$486))
(assert (= y$512 (and y$2 y$486)))
(assert (= y$512 (not y$516)))
(assert (= y$21 (= y$n0s4 y$grant)))
(assert (= y$629 (and y$21 y$514 y$36 y$39)))
(assert (= y$629 (not y$630)))
(assert (= y$636 (and y$prop y$455 y$517 y$516 y$432 y$483 y$467 y$630)))
(assert y$636)
(assert (distinct y$n0s2 y$n1s2 y$n2s2))
(assert (distinct y$n0s3 y$n4s3 y$n2s3 y$n1s3 y$n7s3))
(assert (distinct y$n0s4 y$n1s4 y$n2s4 y$n4s4 y$n8s4 y$n3s4))
(assert (distinct y$n0s32 y$n8s32 y$n4s32 y$n2s32 y$n1s32 y$n3s32))
(assert (= y$727 (= y$n2s4 y$grant)))
(assert (= y$36 (= y$n1s2 y$stato)))
(assert (= y$w$1$next_op (Concat_32_4_28 y$GRANT_O$next y$n0s28)))
(assert (= (not (= y$n2s32 y$w$1$next_op)) y$573))
(assert (= y$GRANT_O$next_rhs_op (ite y$36 y$grant y$GRANT_O)))
(assert (= y$39 (= y$GRANT_O$next y$GRANT_O$next_rhs_op)))
(assert (= y$739 (and y$36 y$39 y$573 y$727)))
(assert (= y$739 (not y$740)))
(assert y$740)
(assert (distinct y$n0s2 y$n1s2 y$n2s2))
(assert (distinct y$n0s3 y$n4s3 y$n2s3 y$n1s3 y$n7s3))
(assert (distinct y$n0s4 y$n1s4 y$n2s4 y$n4s4 y$n8s4 y$n3s4))
(assert (distinct y$n0s32 y$n8s32 y$n4s32 y$n2s32 y$n1s32 y$n3s32))
(assert (= y$793 (= y$n4s4 y$grant)))
(assert (= y$36 (= y$n1s2 y$stato)))
(assert (= y$w$1$next_op (Concat_32_4_28 y$GRANT_O$next y$n0s28)))
(assert (= (not (= y$n4s32 y$w$1$next_op)) y$568))
(assert (= y$GRANT_O$next_rhs_op (ite y$36 y$grant y$GRANT_O)))
(assert (= y$39 (= y$GRANT_O$next y$GRANT_O$next_rhs_op)))
(assert (= y$806 (and y$36 y$39 y$568 y$793)))
(assert (= y$806 (not y$807)))
(assert y$807)
(assert (distinct y$n0s2 y$n1s2 y$n2s2))
(assert (distinct y$n0s3 y$n4s3 y$n2s3 y$n1s3 y$n7s3))
(assert (distinct y$n0s4 y$n1s4 y$n2s4 y$n4s4 y$n8s4 y$n3s4))
(assert (distinct y$n0s32 y$n8s32 y$n4s32 y$n2s32 y$n1s32 y$n3s32))
(check-sat)
(exit)
