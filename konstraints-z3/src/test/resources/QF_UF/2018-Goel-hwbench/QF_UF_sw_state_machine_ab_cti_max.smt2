(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: sw_state_machine
query-maker: "Yices 2"
query-time: 0.284000 ms
query-class: abstract
query-category: oneshot
query-type: cti
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$32 0)
(declare-fun Le_1_32_32 (utt$32 utt$32 ) Bool)
(declare-fun y$10 () Bool)
(declare-fun y$101 () Bool)
(declare-fun y$103 () Bool)
(declare-fun y$108 () Bool)
(declare-fun y$114 () Bool)
(declare-fun y$116 () Bool)
(declare-fun y$12 () Bool)
(declare-fun y$123 () Bool)
(declare-fun y$14 () Bool)
(declare-fun y$141 () Bool)
(declare-fun y$16 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$20 () Bool)
(declare-fun y$22 () Bool)
(declare-fun y$244 () Bool)
(declare-fun y$245 () Bool)
(declare-fun y$247 () Bool)
(declare-fun y$255 () Bool)
(declare-fun y$256 () Bool)
(declare-fun y$257 () Bool)
(declare-fun y$258 () Bool)
(declare-fun y$259 () Bool)
(declare-fun y$260 () Bool)
(declare-fun y$261 () Bool)
(declare-fun y$262 () Bool)
(declare-fun y$263 () Bool)
(declare-fun y$30 () Bool)
(declare-fun y$4 () Bool)
(declare-fun y$42 () Bool)
(declare-fun y$53 () Bool)
(declare-fun y$58 () Bool)
(declare-fun y$6 () Bool)
(declare-fun y$62 () Bool)
(declare-fun y$71 () Bool)
(declare-fun y$73 () Bool)
(declare-fun y$8 () Bool)
(declare-fun y$80 () Bool)
(declare-fun y$86 () Bool)
(declare-fun y$88 () Bool)
(declare-fun y$95 () Bool)
(declare-fun y$L1 () Bool)
(declare-fun y$L1$next () Bool)
(declare-fun y$L1$next_rhs () Bool)
(declare-fun y$L1$next_rhs_op () Bool)
(declare-fun y$L10 () Bool)
(declare-fun y$L10$next () Bool)
(declare-fun y$L10$next_rhs () Bool)
(declare-fun y$L10$next_rhs_op () Bool)
(declare-fun y$L3 () Bool)
(declare-fun y$L3$next () Bool)
(declare-fun y$L3$next_rhs () Bool)
(declare-fun y$L3$next_rhs_op () Bool)
(declare-fun y$L4 () Bool)
(declare-fun y$L4$next () Bool)
(declare-fun y$L4$next_rhs () Bool)
(declare-fun y$L4$next_rhs_op () Bool)
(declare-fun y$L5 () Bool)
(declare-fun y$L5$next () Bool)
(declare-fun y$L5$next_rhs () Bool)
(declare-fun y$L5$next_rhs_op () Bool)
(declare-fun y$L6 () Bool)
(declare-fun y$L6$next () Bool)
(declare-fun y$L6$next_rhs () Bool)
(declare-fun y$L6$next_rhs_op () Bool)
(declare-fun y$L7 () Bool)
(declare-fun y$L7$next () Bool)
(declare-fun y$L7$next_rhs () Bool)
(declare-fun y$L7$next_rhs_op () Bool)
(declare-fun y$L8 () Bool)
(declare-fun y$L8$next () Bool)
(declare-fun y$L8$next_rhs () Bool)
(declare-fun y$L8$next_rhs_op () Bool)
(declare-fun y$L9 () Bool)
(declare-fun y$L9$next () Bool)
(declare-fun y$L9$next_rhs () Bool)
(declare-fun y$L9$next_rhs_op () Bool)
(declare-fun y$LoneHot () Bool)
(declare-fun y$LoneHot$next () Bool)
(declare-fun y$LoneHot$next_rhs () Bool)
(declare-fun y$LoneHot$next_rhs_op () Bool)
(declare-fun y$S () utt$32)
(declare-fun y$S$next () utt$32)
(declare-fun y$S$next_rhs () utt$32)
(declare-fun y$S$next_rhs_op () utt$32)
(declare-fun y$X () Bool)
(declare-fun y$X$next () Bool)
(declare-fun y$X$next_rhs () Bool)
(declare-fun y$X$next_rhs_op () Bool)
(declare-fun y$inp () Bool)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n2s32 () utt$32)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$s$100 () Bool)
(declare-fun y$s$100_op () Bool)
(declare-fun y$s$101 () Bool)
(declare-fun y$s$101_op () Bool)
(declare-fun y$s$102 () Bool)
(declare-fun y$s$102_op () Bool)
(declare-fun y$s$103 () Bool)
(declare-fun y$s$103_op () Bool)
(declare-fun y$s$18 () Bool)
(declare-fun y$s$185 () Bool)
(declare-fun y$s$185_op () Bool)
(declare-fun y$s$186 () Bool)
(declare-fun y$s$186_op () Bool)
(declare-fun y$s$187 () Bool)
(declare-fun y$s$187_op () Bool)
(declare-fun y$s$188 () Bool)
(declare-fun y$s$188_op () Bool)
(declare-fun y$s$189 () Bool)
(declare-fun y$s$189_op () Bool)
(declare-fun y$s$18_op () Bool)
(declare-fun y$s$19 () Bool)
(declare-fun y$s$190 () Bool)
(declare-fun y$s$190_op () Bool)
(declare-fun y$s$191 () Bool)
(declare-fun y$s$191_op () Bool)
(declare-fun y$s$192 () Bool)
(declare-fun y$s$192_op () Bool)
(declare-fun y$s$193 () Bool)
(declare-fun y$s$193_op () Bool)
(declare-fun y$s$194 () Bool)
(declare-fun y$s$194_op () Bool)
(declare-fun y$s$196 () Bool)
(declare-fun y$s$196_op () Bool)
(declare-fun y$s$197 () Bool)
(declare-fun y$s$197_op () Bool)
(declare-fun y$s$198 () Bool)
(declare-fun y$s$198_op () Bool)
(declare-fun y$s$19_op () Bool)
(declare-fun y$s$20 () Bool)
(declare-fun y$s$201 () Bool)
(declare-fun y$s$201_op () Bool)
(declare-fun y$s$204 () utt$32)
(declare-fun y$s$204_op () utt$32)
(declare-fun y$s$205 () utt$32)
(declare-fun y$s$205_op () utt$32)
(declare-fun y$s$206 () utt$32)
(declare-fun y$s$206_op () utt$32)
(declare-fun y$s$207 () utt$32)
(declare-fun y$s$207_op () utt$32)
(declare-fun y$s$208 () Bool)
(declare-fun y$s$208_op () Bool)
(declare-fun y$s$209 () Bool)
(declare-fun y$s$209_op () Bool)
(declare-fun y$s$20_op () Bool)
(declare-fun y$s$21 () Bool)
(declare-fun y$s$21_op () Bool)
(declare-fun y$s$22 () Bool)
(declare-fun y$s$22_op () Bool)
(declare-fun y$s$23 () Bool)
(declare-fun y$s$23_op () Bool)
(declare-fun y$s$24 () Bool)
(declare-fun y$s$24_op () Bool)
(declare-fun y$s$25 () Bool)
(declare-fun y$s$25_op () Bool)
(declare-fun y$s$26 () Bool)
(declare-fun y$s$26_op () Bool)
(declare-fun y$s$27 () Bool)
(declare-fun y$s$27_op () Bool)
(declare-fun y$s$28 () Bool)
(declare-fun y$s$28_op () Bool)
(declare-fun y$s$29 () Bool)
(declare-fun y$s$29_op () Bool)
(declare-fun y$s$30 () Bool)
(declare-fun y$s$30_op () Bool)
(declare-fun y$s$31 () Bool)
(declare-fun y$s$31_op () Bool)
(declare-fun y$s$32 () Bool)
(declare-fun y$s$32_op () Bool)
(declare-fun y$s$33 () Bool)
(declare-fun y$s$33_op () Bool)
(declare-fun y$s$35 () Bool)
(declare-fun y$s$35_op () Bool)
(declare-fun y$s$36 () Bool)
(declare-fun y$s$36_op () Bool)
(declare-fun y$s$37 () Bool)
(declare-fun y$s$37_op () Bool)
(declare-fun y$s$38 () Bool)
(declare-fun y$s$38_op () Bool)
(declare-fun y$s$39 () Bool)
(declare-fun y$s$39_op () Bool)
(declare-fun y$s$40 () Bool)
(declare-fun y$s$40_op () Bool)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$44 () Bool)
(declare-fun y$s$44_op () Bool)
(declare-fun y$s$45 () Bool)
(declare-fun y$s$45_op () Bool)
(declare-fun y$s$46 () Bool)
(declare-fun y$s$46_op () Bool)
(declare-fun y$s$47 () Bool)
(declare-fun y$s$47_op () Bool)
(declare-fun y$s$48 () Bool)
(declare-fun y$s$48_op () Bool)
(declare-fun y$s$49 () Bool)
(declare-fun y$s$49_op () Bool)
(declare-fun y$s$53 () Bool)
(declare-fun y$s$53_op () Bool)
(declare-fun y$s$54 () Bool)
(declare-fun y$s$54_op () Bool)
(declare-fun y$s$55 () Bool)
(declare-fun y$s$55_op () Bool)
(declare-fun y$s$56 () Bool)
(declare-fun y$s$56_op () Bool)
(declare-fun y$s$57 () Bool)
(declare-fun y$s$57_op () Bool)
(declare-fun y$s$58 () Bool)
(declare-fun y$s$58_op () Bool)
(declare-fun y$s$63 () Bool)
(declare-fun y$s$63_op () Bool)
(declare-fun y$s$64 () Bool)
(declare-fun y$s$64_op () Bool)
(declare-fun y$s$65 () Bool)
(declare-fun y$s$65_op () Bool)
(declare-fun y$s$71 () Bool)
(declare-fun y$s$71_op () Bool)
(declare-fun y$s$72 () Bool)
(declare-fun y$s$72_op () Bool)
(declare-fun y$s$73 () Bool)
(declare-fun y$s$73_op () Bool)
(declare-fun y$s$80 () Bool)
(declare-fun y$s$80_op () Bool)
(declare-fun y$s$81 () Bool)
(declare-fun y$s$81_op () Bool)
(declare-fun y$s$82 () Bool)
(declare-fun y$s$82_op () Bool)
(declare-fun y$s$83 () Bool)
(declare-fun y$s$83_op () Bool)
(declare-fun y$s$84 () Bool)
(declare-fun y$s$84_op () Bool)
(declare-fun y$s$85 () Bool)
(declare-fun y$s$85_op () Bool)
(declare-fun y$s$86 () Bool)
(declare-fun y$s$86_op () Bool)
(declare-fun y$s$87 () Bool)
(declare-fun y$s$87_op () Bool)
(declare-fun y$s$88 () Bool)
(declare-fun y$s$88_op () Bool)
(declare-fun y$s$89 () Bool)
(declare-fun y$s$89_op () Bool)
(declare-fun y$s$93 () Bool)
(declare-fun y$s$93_op () Bool)
(declare-fun y$s$94 () Bool)
(declare-fun y$s$94_op () Bool)
(declare-fun y$s$95 () Bool)
(declare-fun y$s$95_op () Bool)
(declare-fun y$s$96 () Bool)
(declare-fun y$s$96_op () Bool)
(declare-fun y$s$98 () Bool)
(declare-fun y$s$98_op () Bool)
(declare-fun y$s$99 () Bool)
(declare-fun y$s$99_op () Bool)
(assert (distinct y$n0s32 y$n1s32 y$n2s32))
(assert (= y$L10 (not y$2)))
(assert (= y$247 (= y$2 y$prop)))
(assert (= y$20 (= y$n0s32 y$S)))
(assert (= y$s$99_op (and y$20 y$X)))
(assert (= y$s$204_op (ite y$s$99_op y$n1s32 y$S)))
(assert (= y$30 (= y$n1s32 y$S)))
(assert (= y$X (not y$22)))
(assert (= y$s$101_op (and y$22 y$30)))
(assert (= y$s$205_op (ite y$s$101_op y$n2s32 y$S)))
(assert (= y$s$206_op (ite y$L8 y$s$205_op y$S)))
(assert (= y$s$207_op (ite y$L6 y$s$204_op y$s$206_op)))
(assert (= y$S$next_rhs_op (ite y$LoneHot y$s$207_op y$S)))
(assert (= y$42 (= y$S$next y$S$next_rhs_op)))
(assert (= y$s$201_op (Le_1_32_32 y$S y$n2s32)))
(assert (= y$s$208_op (ite y$s$201_op y$inp y$X)))
(assert (= y$s$209_op (ite y$L4 y$s$208_op y$X)))
(assert (= y$X$next_rhs_op (ite y$LoneHot y$s$209_op y$X)))
(assert (= y$53 (= y$X$next y$X$next_rhs_op)))
(assert (= y$L1$next_rhs_op (and y$L1 (not y$LoneHot))))
(assert (= y$58 (= y$L1$next y$L1$next_rhs_op)))
(assert (= y$s$192_op (or y$L1 y$L7)))
(assert (= y$s$101_op (not y$62)))
(assert (= y$s$93_op (and y$L8 y$62)))
(assert (= y$s$193_op (or y$s$192_op y$s$93_op)))
(assert (= y$s$194_op (or y$L9 y$s$193_op)))
(assert (= y$L3$next_rhs_op (ite y$LoneHot y$s$194_op y$L3)))
(assert (= y$71 (= y$L3$next y$L3$next_rhs_op)))
(assert (= y$73 (not (= y$n2s32 y$S))))
(assert (= y$s$197_op (or y$22 y$73)))
(assert (= y$s$94_op (and y$L3 y$s$197_op)))
(assert (= y$L4$next_rhs_op (ite y$LoneHot y$s$94_op y$L4)))
(assert (= y$80 (= y$L4$next y$L4$next_rhs_op)))
(assert (= y$s$95_op (and y$L4 y$s$201_op)))
(assert (= y$L5$next_rhs_op (ite y$LoneHot y$s$95_op y$L5)))
(assert (= y$86 (= y$L5$next y$L5$next_rhs_op)))
(assert (= y$s$201_op (not y$88)))
(assert (= y$s$96_op (and y$L4 y$88)))
(assert (= y$s$196_op (or y$L5 y$s$96_op)))
(assert (= y$L6$next_rhs_op (ite y$LoneHot y$s$196_op y$L6)))
(assert (= y$95 (= y$L6$next y$L6$next_rhs_op)))
(assert (= y$s$98_op (and y$L6 y$s$99_op)))
(assert (= y$L7$next_rhs_op (ite y$LoneHot y$s$98_op y$L7)))
(assert (= y$101 (= y$L7$next y$L7$next_rhs_op)))
(assert (= y$s$99_op (not y$103)))
(assert (= y$s$100_op (and y$L6 y$103)))
(assert (= y$L8$next_rhs_op (ite y$LoneHot y$s$100_op y$L8)))
(assert (= y$108 (= y$L8$next y$L8$next_rhs_op)))
(assert (= y$s$102_op (and y$L8 y$s$101_op)))
(assert (= y$L9$next_rhs_op (ite y$LoneHot y$s$102_op y$L9)))
(assert (= y$114 (= y$L9$next y$L9$next_rhs_op)))
(assert (= y$s$197_op (not y$116)))
(assert (= y$s$103_op (and y$L3 y$116)))
(assert (= y$s$198_op (or y$L10 y$s$103_op)))
(assert (= y$L10$next_rhs_op (ite y$LoneHot y$s$198_op y$L10)))
(assert (= y$123 (= y$L10$next y$L10$next_rhs_op)))
(assert (= y$L3 (not y$4)))
(assert (= y$s$22_op (and y$L1 y$4)))
(assert (= y$L4 (not y$6)))
(assert (= y$s$23_op (and y$6 y$s$22_op)))
(assert (= y$L5 (not y$8)))
(assert (= y$s$24_op (and y$8 y$s$23_op)))
(assert (= y$L6 (not y$10)))
(assert (= y$s$25_op (and y$10 y$s$24_op)))
(assert (= y$L7 (not y$12)))
(assert (= y$s$18_op (and y$12 y$s$25_op)))
(assert (= y$L8 (not y$14)))
(assert (= y$s$19_op (and y$14 y$s$18_op)))
(assert (= y$L9 (not y$16)))
(assert (= y$s$20_op (and y$16 y$s$19_op)))
(assert (= y$s$21_op (and y$2 y$s$20_op)))
(assert (= y$L1 (not y$141)))
(assert (= y$s$26_op (and y$L3 y$141)))
(assert (= y$s$27_op (and y$6 y$s$26_op)))
(assert (= y$s$28_op (and y$8 y$s$27_op)))
(assert (= y$s$29_op (and y$10 y$s$28_op)))
(assert (= y$s$30_op (and y$12 y$s$29_op)))
(assert (= y$s$31_op (and y$14 y$s$30_op)))
(assert (= y$s$32_op (and y$16 y$s$31_op)))
(assert (= y$s$33_op (and y$2 y$s$32_op)))
(assert (= y$s$185_op (or y$s$21_op y$s$33_op)))
(assert (= y$s$82_op (and y$4 y$141)))
(assert (= y$s$35_op (and y$L4 y$s$82_op)))
(assert (= y$s$36_op (and y$8 y$s$35_op)))
(assert (= y$s$37_op (and y$10 y$s$36_op)))
(assert (= y$s$38_op (and y$12 y$s$37_op)))
(assert (= y$s$39_op (and y$14 y$s$38_op)))
(assert (= y$s$40_op (and y$16 y$s$39_op)))
(assert (= y$s$41_op (and y$2 y$s$40_op)))
(assert (= y$s$186_op (or y$s$185_op y$s$41_op)))
(assert (= y$s$83_op (and y$6 y$s$82_op)))
(assert (= y$s$44_op (and y$L5 y$s$83_op)))
(assert (= y$s$45_op (and y$10 y$s$44_op)))
(assert (= y$s$46_op (and y$12 y$s$45_op)))
(assert (= y$s$47_op (and y$14 y$s$46_op)))
(assert (= y$s$48_op (and y$16 y$s$47_op)))
(assert (= y$s$49_op (and y$2 y$s$48_op)))
(assert (= y$s$187_op (or y$s$186_op y$s$49_op)))
(assert (= y$s$84_op (and y$8 y$s$83_op)))
(assert (= y$s$53_op (and y$L6 y$s$84_op)))
(assert (= y$s$54_op (and y$12 y$s$53_op)))
(assert (= y$s$55_op (and y$14 y$s$54_op)))
(assert (= y$s$56_op (and y$16 y$s$55_op)))
(assert (= y$s$57_op (and y$2 y$s$56_op)))
(assert (= y$s$188_op (or y$s$187_op y$s$57_op)))
(assert (= y$s$85_op (and y$10 y$s$84_op)))
(assert (= y$s$63_op (and y$L7 y$s$85_op)))
(assert (= y$s$64_op (and y$14 y$s$63_op)))
(assert (= y$s$65_op (and y$16 y$s$64_op)))
(assert (= y$s$58_op (and y$2 y$s$65_op)))
(assert (= y$s$189_op (or y$s$188_op y$s$58_op)))
(assert (= y$s$86_op (and y$12 y$s$85_op)))
(assert (= y$s$71_op (and y$L8 y$s$86_op)))
(assert (= y$s$72_op (and y$16 y$s$71_op)))
(assert (= y$s$73_op (and y$2 y$s$72_op)))
(assert (= y$s$190_op (or y$s$189_op y$s$73_op)))
(assert (= y$s$87_op (and y$14 y$s$86_op)))
(assert (= y$s$80_op (and y$L9 y$s$87_op)))
(assert (= y$s$81_op (and y$2 y$s$80_op)))
(assert (= y$s$191_op (or y$s$190_op y$s$81_op)))
(assert (= y$s$88_op (and y$16 y$s$87_op)))
(assert (= y$s$89_op (and y$L10 y$s$88_op)))
(assert (= y$LoneHot$next_rhs_op (or y$s$191_op y$s$89_op)))
(assert (= y$244 (= y$LoneHot$next y$LoneHot$next_rhs_op)))
(assert (= y$245 (and y$42 y$53 y$58 y$71 y$80 y$86 y$95 y$101 y$108 y$114 y$123 y$244)))
(assert (= y$L10$next (not y$257)))
(assert (= y$258 (= y$prop$next y$257)))
(assert (= y$prop$next (not y$256)))
(assert (= y$261 (and y$prop y$247 y$245 y$258 y$256)))
(assert y$261)
(assert (distinct y$n0s32 y$n1s32 y$n2s32))
(check-sat)
(exit)
