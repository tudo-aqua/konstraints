(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: sw_ball2004_2
query-maker: "Yices 2"
query-time: 0.001000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status unsat)
(declare-sort utt$8 0)
(declare-fun Le_1_8_8 (utt$8 utt$8 ) Bool)
(declare-fun y$10 () Bool)
(declare-fun y$107 () Bool)
(declare-fun y$111 () Bool)
(declare-fun y$117 () Bool)
(declare-fun y$12 () Bool)
(declare-fun y$124 () Bool)
(declare-fun y$14 () Bool)
(declare-fun y$142 () Bool)
(declare-fun y$16 () Bool)
(declare-fun y$19 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$241 () Bool)
(declare-fun y$242 () Bool)
(declare-fun y$244 () Bool)
(declare-fun y$255 () Bool)
(declare-fun y$256 () Bool)
(declare-fun y$257 () Bool)
(declare-fun y$258 () Bool)
(declare-fun y$259 () Bool)
(declare-fun y$260 () Bool)
(declare-fun y$28 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$33 () Bool)
(declare-fun y$36 () Bool)
(declare-fun y$4 () Bool)
(declare-fun y$43 () Bool)
(declare-fun y$48 () Bool)
(declare-fun y$52 () Bool)
(declare-fun y$6 () Bool)
(declare-fun y$60 () Bool)
(declare-fun y$66 () Bool)
(declare-fun y$70 () Bool)
(declare-fun y$77 () Bool)
(declare-fun y$79 () Bool)
(declare-fun y$8 () Bool)
(declare-fun y$90 () Bool)
(declare-fun y$97 () Bool)
(declare-fun y$A () utt$8)
(declare-fun y$A$next () utt$8)
(declare-fun y$A$next_rhs () utt$8)
(declare-fun y$A$next_rhs_op () utt$8)
(declare-fun y$B () utt$8)
(declare-fun y$B$next () utt$8)
(declare-fun y$L0 () Bool)
(declare-fun y$L0$next () Bool)
(declare-fun y$L0$next_rhs () Bool)
(declare-fun y$L0$next_rhs_op () Bool)
(declare-fun y$L1 () Bool)
(declare-fun y$L1$next () Bool)
(declare-fun y$L1$next_rhs () Bool)
(declare-fun y$L1$next_rhs_op () Bool)
(declare-fun y$L11 () Bool)
(declare-fun y$L11$next () Bool)
(declare-fun y$L11$next_rhs () Bool)
(declare-fun y$L11$next_rhs_op () Bool)
(declare-fun y$L12 () Bool)
(declare-fun y$L12$next () Bool)
(declare-fun y$L12$next_rhs () Bool)
(declare-fun y$L12$next_rhs_op () Bool)
(declare-fun y$L1w () Bool)
(declare-fun y$L1w$next () Bool)
(declare-fun y$L1w$next_rhs () Bool)
(declare-fun y$L1w$next_rhs_op () Bool)
(declare-fun y$L2 () Bool)
(declare-fun y$L2$next () Bool)
(declare-fun y$L2$next_rhs () Bool)
(declare-fun y$L2$next_rhs_op () Bool)
(declare-fun y$L3 () Bool)
(declare-fun y$L3$next () Bool)
(declare-fun y$L3$next_rhs () Bool)
(declare-fun y$L3$next_rhs_op () Bool)
(declare-fun y$L4 () Bool)
(declare-fun y$L4$next () Bool)
(declare-fun y$L4$next_rhs () Bool)
(declare-fun y$L4$next_rhs_op () Bool)
(declare-fun y$L5 () Bool)
(declare-fun y$L5$next () Bool)
(declare-fun y$L5$next_rhs () Bool)
(declare-fun y$L5$next_rhs_op () Bool)
(declare-fun y$LoneHot () Bool)
(declare-fun y$LoneHot$next () Bool)
(declare-fun y$LoneHot$next_rhs () Bool)
(declare-fun y$LoneHot$next_rhs_op () Bool)
(declare-fun y$X () utt$8)
(declare-fun y$X$next () utt$8)
(declare-fun y$Y () utt$8)
(declare-fun y$Y$next () utt$8)
(declare-fun y$Z () utt$8)
(declare-fun y$Z$next () utt$8)
(declare-fun y$Z$next_rhs () utt$8)
(declare-fun y$Z$next_rhs_op () utt$8)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n1s1 () Bool)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$s$13 () Bool)
(declare-fun y$s$13_op () Bool)
(declare-fun y$s$14 () Bool)
(declare-fun y$s$14_op () Bool)
(declare-fun y$s$15 () Bool)
(declare-fun y$s$15_op () Bool)
(declare-fun y$s$16 () Bool)
(declare-fun y$s$167 () Bool)
(declare-fun y$s$167_op () Bool)
(declare-fun y$s$168 () Bool)
(declare-fun y$s$168_op () Bool)
(declare-fun y$s$169 () Bool)
(declare-fun y$s$169_op () Bool)
(declare-fun y$s$16_op () Bool)
(declare-fun y$s$17 () Bool)
(declare-fun y$s$170 () Bool)
(declare-fun y$s$170_op () Bool)
(declare-fun y$s$171 () Bool)
(declare-fun y$s$171_op () Bool)
(declare-fun y$s$172 () Bool)
(declare-fun y$s$172_op () Bool)
(declare-fun y$s$173 () Bool)
(declare-fun y$s$173_op () Bool)
(declare-fun y$s$174 () Bool)
(declare-fun y$s$174_op () Bool)
(declare-fun y$s$175 () Bool)
(declare-fun y$s$175_op () Bool)
(declare-fun y$s$176 () Bool)
(declare-fun y$s$176_op () Bool)
(declare-fun y$s$177 () Bool)
(declare-fun y$s$177_op () Bool)
(declare-fun y$s$178 () Bool)
(declare-fun y$s$178_op () Bool)
(declare-fun y$s$179 () Bool)
(declare-fun y$s$179_op () Bool)
(declare-fun y$s$17_op () Bool)
(declare-fun y$s$18 () Bool)
(declare-fun y$s$182 () Bool)
(declare-fun y$s$182_op () Bool)
(declare-fun y$s$183 () Bool)
(declare-fun y$s$183_op () Bool)
(declare-fun y$s$185 () Bool)
(declare-fun y$s$185_op () Bool)
(declare-fun y$s$186 () utt$8)
(declare-fun y$s$186_op () utt$8)
(declare-fun y$s$187 () utt$8)
(declare-fun y$s$187_op () utt$8)
(declare-fun y$s$188 () Bool)
(declare-fun y$s$188_op () Bool)
(declare-fun y$s$18_op () Bool)
(declare-fun y$s$19 () Bool)
(declare-fun y$s$19_op () Bool)
(declare-fun y$s$20 () Bool)
(declare-fun y$s$20_op () Bool)
(declare-fun y$s$21 () Bool)
(declare-fun y$s$21_op () Bool)
(declare-fun y$s$22 () Bool)
(declare-fun y$s$22_op () Bool)
(declare-fun y$s$23 () Bool)
(declare-fun y$s$23_op () Bool)
(declare-fun y$s$24 () Bool)
(declare-fun y$s$24_op () Bool)
(declare-fun y$s$25 () Bool)
(declare-fun y$s$25_op () Bool)
(declare-fun y$s$26 () Bool)
(declare-fun y$s$26_op () Bool)
(declare-fun y$s$27 () Bool)
(declare-fun y$s$27_op () Bool)
(declare-fun y$s$28 () Bool)
(declare-fun y$s$28_op () Bool)
(declare-fun y$s$30 () Bool)
(declare-fun y$s$30_op () Bool)
(declare-fun y$s$31 () Bool)
(declare-fun y$s$31_op () Bool)
(declare-fun y$s$32 () Bool)
(declare-fun y$s$32_op () Bool)
(declare-fun y$s$33 () Bool)
(declare-fun y$s$33_op () Bool)
(declare-fun y$s$34 () Bool)
(declare-fun y$s$34_op () Bool)
(declare-fun y$s$35 () Bool)
(declare-fun y$s$35_op () Bool)
(declare-fun y$s$36 () Bool)
(declare-fun y$s$36_op () Bool)
(declare-fun y$s$39 () Bool)
(declare-fun y$s$39_op () Bool)
(declare-fun y$s$40 () Bool)
(declare-fun y$s$40_op () Bool)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$42 () Bool)
(declare-fun y$s$42_op () Bool)
(declare-fun y$s$43 () Bool)
(declare-fun y$s$43_op () Bool)
(declare-fun y$s$44 () Bool)
(declare-fun y$s$44_op () Bool)
(declare-fun y$s$48 () Bool)
(declare-fun y$s$48_op () Bool)
(declare-fun y$s$49 () Bool)
(declare-fun y$s$49_op () Bool)
(declare-fun y$s$50 () Bool)
(declare-fun y$s$50_op () Bool)
(declare-fun y$s$51 () Bool)
(declare-fun y$s$51_op () Bool)
(declare-fun y$s$52 () Bool)
(declare-fun y$s$52_op () Bool)
(declare-fun y$s$53 () Bool)
(declare-fun y$s$53_op () Bool)
(declare-fun y$s$58 () Bool)
(declare-fun y$s$58_op () Bool)
(declare-fun y$s$59 () Bool)
(declare-fun y$s$59_op () Bool)
(declare-fun y$s$60 () Bool)
(declare-fun y$s$60_op () Bool)
(declare-fun y$s$67 () Bool)
(declare-fun y$s$67_op () Bool)
(declare-fun y$s$68 () Bool)
(declare-fun y$s$68_op () Bool)
(declare-fun y$s$76 () Bool)
(declare-fun y$s$76_op () Bool)
(declare-fun y$s$77 () Bool)
(declare-fun y$s$77_op () Bool)
(declare-fun y$s$78 () Bool)
(declare-fun y$s$78_op () Bool)
(declare-fun y$s$79 () Bool)
(declare-fun y$s$79_op () Bool)
(declare-fun y$s$80 () Bool)
(declare-fun y$s$80_op () Bool)
(declare-fun y$s$81 () Bool)
(declare-fun y$s$81_op () Bool)
(declare-fun y$s$82 () Bool)
(declare-fun y$s$82_op () Bool)
(declare-fun y$s$83 () Bool)
(declare-fun y$s$83_op () Bool)
(declare-fun y$s$84 () Bool)
(declare-fun y$s$84_op () Bool)
(declare-fun y$s$85 () Bool)
(declare-fun y$s$85_op () Bool)
(declare-fun y$s$86 () Bool)
(declare-fun y$s$86_op () Bool)
(declare-fun y$s$87 () Bool)
(declare-fun y$s$87_op () Bool)
(declare-fun y$s$88 () Bool)
(declare-fun y$s$88_op () Bool)
(declare-fun y$s$89 () Bool)
(declare-fun y$s$89_op () Bool)
(declare-fun y$s$90 () Bool)
(declare-fun y$s$90_op () Bool)
(declare-fun y$s$91 () Bool)
(declare-fun y$s$91_op () Bool)
(declare-fun y$s$92 () Bool)
(declare-fun y$s$92_op () Bool)
(declare-fun y$t1 () Bool)
(declare-fun y$t1$next () Bool)
(declare-fun y$t1$next_rhs () Bool)
(declare-fun y$t1$next_rhs_op () Bool)
(assert (= y$L1 (not y$2)))
(assert (= y$L11 (not y$4)))
(assert (= y$L12 (not y$6)))
(assert (= y$L1w (not y$8)))
(assert (= y$L2 (not y$10)))
(assert (= y$L3 (not y$12)))
(assert (= y$L4 (not y$14)))
(assert (= y$L5 (not y$16)))
(assert (= y$t1 (not y$19)))
(assert (= y$s$187_op (ite y$L2 y$Y y$A)))
(assert (= y$A$next_rhs_op (ite y$LoneHot y$s$187_op y$A)))
(assert (= y$28 (= y$A$next y$A$next_rhs_op)))
(assert (= y$31 (= y$B$next y$B)))
(assert (= y$33 (= y$Y y$Y$next)))
(assert (= y$36 (= y$X$next y$X)))
(assert (= y$s$186_op (ite y$L12 y$B y$Z)))
(assert (= y$Z$next_rhs_op (ite y$LoneHot y$s$186_op y$Z)))
(assert (= y$43 (= y$Z$next y$Z$next_rhs_op)))
(assert (= y$L0$next_rhs_op (and y$L0 (not y$LoneHot))))
(assert (= y$48 (= y$L0$next y$L0$next_rhs_op)))
(assert (= y$L1$next_rhs_op (ite y$LoneHot y$L0 y$L1)))
(assert (= y$52 (= y$L1$next y$L1$next_rhs_op)))
(assert (= y$s$182_op (Le_1_8_8 y$X y$Y)))
(assert (= y$s$85_op (and y$L1 y$s$182_op)))
(assert (= y$L2$next_rhs_op (ite y$LoneHot y$s$85_op y$L2)))
(assert (= y$60 (= y$L2$next y$L2$next_rhs_op)))
(assert (= y$s$86_op (and y$L1w y$t1)))
(assert (= y$L3$next_rhs_op (ite y$LoneHot y$s$86_op y$L3)))
(assert (= y$66 (= y$L3$next y$L3$next_rhs_op)))
(assert (= y$s$183_op (Le_1_8_8 y$X y$Z)))
(assert (= y$s$183_op (not y$70)))
(assert (= y$s$87_op (and y$L3 y$70)))
(assert (= y$s$174_op (or y$L4 y$s$87_op)))
(assert (= y$L4$next_rhs_op (ite y$LoneHot y$s$174_op y$L4)))
(assert (= y$77 (= y$L4$next y$L4$next_rhs_op)))
(assert (= y$s$182_op (not y$79)))
(assert (= y$s$88_op (and y$L1 y$79)))
(assert (= y$s$175_op (or y$L5 y$s$88_op)))
(assert (= y$s$89_op (and y$L3 y$s$183_op)))
(assert (= y$s$176_op (or y$s$175_op y$s$89_op)))
(assert (= y$s$185_op (Le_1_8_8 y$A y$B)))
(assert (= y$s$185_op (not y$90)))
(assert (= y$s$90_op (and y$L11 y$90)))
(assert (= y$s$177_op (or y$s$176_op y$s$90_op)))
(assert (= y$L5$next_rhs_op (ite y$LoneHot y$s$177_op y$L5)))
(assert (= y$97 (= y$L5$next y$L5$next_rhs_op)))
(assert (= y$s$178_op (or y$L12 y$L2)))
(assert (= y$s$91_op (and y$L1w y$19)))
(assert (= y$s$179_op (or y$s$178_op y$s$91_op)))
(assert (= y$L1w$next_rhs_op (ite y$LoneHot y$s$179_op y$L1w)))
(assert (= y$107 (= y$L1w$next y$L1w$next_rhs_op)))
(assert (= y$L11$next_rhs_op (ite y$LoneHot y$L2 y$L11)))
(assert (= y$111 (= y$L11$next y$L11$next_rhs_op)))
(assert (= y$s$92_op (and y$L11 y$s$185_op)))
(assert (= y$L12$next_rhs_op (ite y$LoneHot y$s$92_op y$L12)))
(assert (= y$117 (= y$L12$next y$L12$next_rhs_op)))
(assert (= y$s$188_op (or y$L12 y$t1)))
(assert (= y$t1$next_rhs_op (ite y$LoneHot y$s$188_op y$t1)))
(assert (= y$124 (= y$t1$next y$t1$next_rhs_op)))
(assert (= y$s$17_op (and y$L0 y$2)))
(assert (= y$s$18_op (and y$10 y$s$17_op)))
(assert (= y$s$19_op (and y$12 y$s$18_op)))
(assert (= y$s$20_op (and y$14 y$s$19_op)))
(assert (= y$s$13_op (and y$16 y$s$20_op)))
(assert (= y$s$14_op (and y$8 y$s$13_op)))
(assert (= y$s$15_op (and y$4 y$s$14_op)))
(assert (= y$s$16_op (and y$6 y$s$15_op)))
(assert (= y$L0 (not y$142)))
(assert (= y$s$21_op (and y$L1 y$142)))
(assert (= y$s$22_op (and y$10 y$s$21_op)))
(assert (= y$s$23_op (and y$12 y$s$22_op)))
(assert (= y$s$24_op (and y$14 y$s$23_op)))
(assert (= y$s$25_op (and y$16 y$s$24_op)))
(assert (= y$s$26_op (and y$8 y$s$25_op)))
(assert (= y$s$27_op (and y$4 y$s$26_op)))
(assert (= y$s$28_op (and y$6 y$s$27_op)))
(assert (= y$s$167_op (or y$s$16_op y$s$28_op)))
(assert (= y$s$77_op (and y$2 y$142)))
(assert (= y$s$30_op (and y$L2 y$s$77_op)))
(assert (= y$s$31_op (and y$12 y$s$30_op)))
(assert (= y$s$32_op (and y$14 y$s$31_op)))
(assert (= y$s$33_op (and y$16 y$s$32_op)))
(assert (= y$s$34_op (and y$8 y$s$33_op)))
(assert (= y$s$35_op (and y$4 y$s$34_op)))
(assert (= y$s$36_op (and y$6 y$s$35_op)))
(assert (= y$s$168_op (or y$s$167_op y$s$36_op)))
(assert (= y$s$78_op (and y$10 y$s$77_op)))
(assert (= y$s$39_op (and y$L3 y$s$78_op)))
(assert (= y$s$40_op (and y$14 y$s$39_op)))
(assert (= y$s$41_op (and y$16 y$s$40_op)))
(assert (= y$s$42_op (and y$8 y$s$41_op)))
(assert (= y$s$43_op (and y$4 y$s$42_op)))
(assert (= y$s$44_op (and y$6 y$s$43_op)))
(assert (= y$s$169_op (or y$s$168_op y$s$44_op)))
(assert (= y$s$79_op (and y$12 y$s$78_op)))
(assert (= y$s$48_op (and y$L4 y$s$79_op)))
(assert (= y$s$49_op (and y$16 y$s$48_op)))
(assert (= y$s$50_op (and y$8 y$s$49_op)))
(assert (= y$s$51_op (and y$4 y$s$50_op)))
(assert (= y$s$52_op (and y$6 y$s$51_op)))
(assert (= y$s$170_op (or y$s$169_op y$s$52_op)))
(assert (= y$s$80_op (and y$14 y$s$79_op)))
(assert (= y$s$58_op (and y$L5 y$s$80_op)))
(assert (= y$s$59_op (and y$8 y$s$58_op)))
(assert (= y$s$60_op (and y$4 y$s$59_op)))
(assert (= y$s$53_op (and y$6 y$s$60_op)))
(assert (= y$s$171_op (or y$s$170_op y$s$53_op)))
(assert (= y$s$81_op (and y$16 y$s$80_op)))
(assert (= y$s$82_op (and y$L1w y$s$81_op)))
(assert (= y$s$67_op (and y$L11 y$s$82_op)))
(assert (= y$s$68_op (and y$6 y$s$67_op)))
(assert (= y$s$172_op (or y$s$171_op y$s$68_op)))
(assert (= y$s$83_op (and y$4 y$s$82_op)))
(assert (= y$s$76_op (and y$L12 y$s$83_op)))
(assert (= y$s$173_op (or y$s$172_op y$s$76_op)))
(assert (= y$s$84_op (and y$6 y$s$83_op)))
(assert (= y$LoneHot$next_rhs_op (or y$s$173_op y$s$84_op)))
(assert (= y$241 (= y$LoneHot$next y$LoneHot$next_rhs_op)))
(assert (= y$242 (and y$28 y$31 y$33 y$36 y$43 y$48 y$52 y$60 y$66 y$77 y$97 y$107 y$111 y$117 y$124 y$241)))
(assert (= y$L4$next (not y$257)))
(assert (= y$258 (= y$prop$next y$257)))
(assert (= y$prop$next (not y$256)))
(assert (= y$260 (and y$L0 y$2 y$4 y$6 y$8 y$10 y$12 y$14 y$16 y$LoneHot y$19 y$242 y$258 y$256)))
(assert y$260)
(check-sat)
(exit)
