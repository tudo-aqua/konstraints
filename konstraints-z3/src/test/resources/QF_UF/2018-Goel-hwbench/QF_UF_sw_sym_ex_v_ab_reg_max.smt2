(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: sw_sym_ex_v
query-maker: "Yices 2"
query-time: 0.002000 ms
query-class: abstract
query-category: oneshot
query-type: regular
status: unsat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status unsat)
(declare-sort utt$8 0)
(declare-fun Add_8_8_8 (utt$8 utt$8 ) utt$8)
(declare-fun Le_1_8_8 (utt$8 utt$8 ) Bool)
(declare-fun y$10 () Bool)
(declare-fun y$103 () Bool)
(declare-fun y$119 () Bool)
(declare-fun y$12 () Bool)
(declare-fun y$14 () Bool)
(declare-fun y$18 () Bool)
(declare-fun y$2 () Bool)
(declare-fun y$20 () Bool)
(declare-fun y$202 () Bool)
(declare-fun y$203 () Bool)
(declare-fun y$205 () Bool)
(declare-fun y$215 () Bool)
(declare-fun y$216 () Bool)
(declare-fun y$217 () Bool)
(declare-fun y$218 () Bool)
(declare-fun y$219 () Bool)
(declare-fun y$220 () Bool)
(declare-fun y$24 () Bool)
(declare-fun y$26 () Bool)
(declare-fun y$36 () Bool)
(declare-fun y$38 () Bool)
(declare-fun y$4 () Bool)
(declare-fun y$46 () Bool)
(declare-fun y$51 () Bool)
(declare-fun y$55 () Bool)
(declare-fun y$59 () Bool)
(declare-fun y$6 () Bool)
(declare-fun y$69 () Bool)
(declare-fun y$73 () Bool)
(declare-fun y$75 () Bool)
(declare-fun y$8 () Bool)
(declare-fun y$82 () Bool)
(declare-fun y$87 () Bool)
(declare-fun y$94 () Bool)
(declare-fun y$96 () Bool)
(declare-fun y$L0 () Bool)
(declare-fun y$L0$next () Bool)
(declare-fun y$L0$next_rhs () Bool)
(declare-fun y$L0$next_rhs_op () Bool)
(declare-fun y$L1 () Bool)
(declare-fun y$L1$next () Bool)
(declare-fun y$L1$next_rhs () Bool)
(declare-fun y$L1$next_rhs_op () Bool)
(declare-fun y$L2 () Bool)
(declare-fun y$L2$next () Bool)
(declare-fun y$L2$next_rhs () Bool)
(declare-fun y$L2$next_rhs_op () Bool)
(declare-fun y$L3 () Bool)
(declare-fun y$L3$next () Bool)
(declare-fun y$L3$next_rhs () Bool)
(declare-fun y$L3$next_rhs_op () Bool)
(declare-fun y$L4 () Bool)
(declare-fun y$L4$next () Bool)
(declare-fun y$L4$next_rhs () Bool)
(declare-fun y$L4$next_rhs_op () Bool)
(declare-fun y$L5 () Bool)
(declare-fun y$L5$next () Bool)
(declare-fun y$L5$next_rhs () Bool)
(declare-fun y$L5$next_rhs_op () Bool)
(declare-fun y$L6 () Bool)
(declare-fun y$L6$next () Bool)
(declare-fun y$L6$next_rhs () Bool)
(declare-fun y$L6$next_rhs_op () Bool)
(declare-fun y$L7 () Bool)
(declare-fun y$L7$next () Bool)
(declare-fun y$L7$next_rhs () Bool)
(declare-fun y$L7$next_rhs_op () Bool)
(declare-fun y$LoneHot () Bool)
(declare-fun y$LoneHot$next () Bool)
(declare-fun y$LoneHot$next_rhs () Bool)
(declare-fun y$LoneHot$next_rhs_op () Bool)
(declare-fun y$X () utt$8)
(declare-fun y$X$next () utt$8)
(declare-fun y$X$next_rhs () utt$8)
(declare-fun y$X$next_rhs_op () utt$8)
(declare-fun y$Y () utt$8)
(declare-fun y$Y$next () utt$8)
(declare-fun y$Y$next_rhs () utt$8)
(declare-fun y$Y$next_rhs_op () utt$8)
(declare-fun y$a () utt$8)
(declare-fun y$b () utt$8)
(declare-fun y$c () utt$8)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n0s8 () utt$8)
(declare-fun y$n2s8 () utt$8)
(declare-fun y$n3s8 () utt$8)
(declare-fun y$n4s8 () utt$8)
(declare-fun y$n5s8 () utt$8)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$s$12 () utt$8)
(declare-fun y$s$12_op () utt$8)
(declare-fun y$s$133 () Bool)
(declare-fun y$s$133_op () Bool)
(declare-fun y$s$134 () Bool)
(declare-fun y$s$134_op () Bool)
(declare-fun y$s$135 () Bool)
(declare-fun y$s$135_op () Bool)
(declare-fun y$s$136 () Bool)
(declare-fun y$s$136_op () Bool)
(declare-fun y$s$137 () Bool)
(declare-fun y$s$137_op () Bool)
(declare-fun y$s$138 () Bool)
(declare-fun y$s$138_op () Bool)
(declare-fun y$s$139 () Bool)
(declare-fun y$s$139_op () Bool)
(declare-fun y$s$140 () Bool)
(declare-fun y$s$140_op () Bool)
(declare-fun y$s$141 () Bool)
(declare-fun y$s$141_op () Bool)
(declare-fun y$s$143 () Bool)
(declare-fun y$s$143_op () Bool)
(declare-fun y$s$147 () utt$8)
(declare-fun y$s$147_op () utt$8)
(declare-fun y$s$148 () utt$8)
(declare-fun y$s$148_op () utt$8)
(declare-fun y$s$149 () utt$8)
(declare-fun y$s$149_op () utt$8)
(declare-fun y$s$15 () Bool)
(declare-fun y$s$150 () utt$8)
(declare-fun y$s$150_op () utt$8)
(declare-fun y$s$15_op () Bool)
(declare-fun y$s$16 () Bool)
(declare-fun y$s$16_op () Bool)
(declare-fun y$s$17 () Bool)
(declare-fun y$s$17_op () Bool)
(declare-fun y$s$18 () Bool)
(declare-fun y$s$18_op () Bool)
(declare-fun y$s$19 () Bool)
(declare-fun y$s$19_op () Bool)
(declare-fun y$s$20 () Bool)
(declare-fun y$s$20_op () Bool)
(declare-fun y$s$21 () Bool)
(declare-fun y$s$21_op () Bool)
(declare-fun y$s$22 () Bool)
(declare-fun y$s$22_op () Bool)
(declare-fun y$s$23 () Bool)
(declare-fun y$s$23_op () Bool)
(declare-fun y$s$24 () Bool)
(declare-fun y$s$24_op () Bool)
(declare-fun y$s$25 () Bool)
(declare-fun y$s$25_op () Bool)
(declare-fun y$s$26 () Bool)
(declare-fun y$s$26_op () Bool)
(declare-fun y$s$27 () Bool)
(declare-fun y$s$27_op () Bool)
(declare-fun y$s$28 () Bool)
(declare-fun y$s$28_op () Bool)
(declare-fun y$s$30 () Bool)
(declare-fun y$s$30_op () Bool)
(declare-fun y$s$31 () Bool)
(declare-fun y$s$31_op () Bool)
(declare-fun y$s$32 () Bool)
(declare-fun y$s$32_op () Bool)
(declare-fun y$s$33 () Bool)
(declare-fun y$s$33_op () Bool)
(declare-fun y$s$34 () Bool)
(declare-fun y$s$34_op () Bool)
(declare-fun y$s$35 () Bool)
(declare-fun y$s$35_op () Bool)
(declare-fun y$s$38 () Bool)
(declare-fun y$s$38_op () Bool)
(declare-fun y$s$39 () Bool)
(declare-fun y$s$39_op () Bool)
(declare-fun y$s$40 () Bool)
(declare-fun y$s$40_op () Bool)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$42 () Bool)
(declare-fun y$s$42_op () Bool)
(declare-fun y$s$46 () Bool)
(declare-fun y$s$46_op () Bool)
(declare-fun y$s$47 () Bool)
(declare-fun y$s$47_op () Bool)
(declare-fun y$s$48 () Bool)
(declare-fun y$s$48_op () Bool)
(declare-fun y$s$49 () Bool)
(declare-fun y$s$49_op () Bool)
(declare-fun y$s$54 () Bool)
(declare-fun y$s$54_op () Bool)
(declare-fun y$s$55 () Bool)
(declare-fun y$s$55_op () Bool)
(declare-fun y$s$56 () Bool)
(declare-fun y$s$56_op () Bool)
(declare-fun y$s$58 () Bool)
(declare-fun y$s$58_op () Bool)
(declare-fun y$s$59 () Bool)
(declare-fun y$s$59_op () Bool)
(declare-fun y$s$64 () Bool)
(declare-fun y$s$64_op () Bool)
(declare-fun y$s$65 () Bool)
(declare-fun y$s$65_op () Bool)
(declare-fun y$s$66 () Bool)
(declare-fun y$s$66_op () Bool)
(declare-fun y$s$67 () Bool)
(declare-fun y$s$67_op () Bool)
(declare-fun y$s$68 () Bool)
(declare-fun y$s$68_op () Bool)
(declare-fun y$s$69 () Bool)
(declare-fun y$s$69_op () Bool)
(declare-fun y$s$70 () Bool)
(declare-fun y$s$70_op () Bool)
(declare-fun y$s$71 () Bool)
(declare-fun y$s$71_op () Bool)
(declare-fun y$s$72 () Bool)
(declare-fun y$s$72_op () Bool)
(declare-fun y$s$73 () Bool)
(declare-fun y$s$73_op () Bool)
(declare-fun y$s$74 () Bool)
(declare-fun y$s$74_op () Bool)
(declare-fun y$s$75 () Bool)
(declare-fun y$s$75_op () Bool)
(assert (distinct y$n0s8 y$n2s8 y$n3s8 y$n5s8 y$n4s8))
(assert (= y$L1 (not y$2)))
(assert (= y$L2 (not y$4)))
(assert (= y$L3 (not y$6)))
(assert (= y$L4 (not y$8)))
(assert (= y$L5 (not y$10)))
(assert (= y$L6 (not y$12)))
(assert (= y$L7 (not y$14)))
(assert (= y$18 (= y$n0s8 y$X)))
(assert (= y$20 (= y$n0s8 y$Y)))
(assert (= y$24 (= y$n0s8 y$a)))
(assert (= y$26 (not (= y$n0s8 y$c))))
(assert (= y$s$71_op (and y$24 y$26)))
(assert (= y$s$149_op (ite y$s$71_op y$n2s8 y$c)))
(assert (= y$s$150_op (ite y$L3 y$s$149_op y$Y)))
(assert (= y$Y$next_rhs_op (ite y$LoneHot y$s$150_op y$Y)))
(assert (= y$36 (= y$Y$next y$Y$next_rhs_op)))
(assert (= (not (= y$n0s8 y$a)) y$38))
(assert (= y$s$147_op (ite y$38 y$n3s8 y$X)))
(assert (= y$s$148_op (ite y$L1 y$s$147_op y$X)))
(assert (= y$X$next_rhs_op (ite y$LoneHot y$s$148_op y$X)))
(assert (= y$46 (= y$X$next y$X$next_rhs_op)))
(assert (= y$L0$next_rhs_op (and y$L0 (not y$LoneHot))))
(assert (= y$51 (= y$L0$next y$L0$next_rhs_op)))
(assert (= y$L1$next_rhs_op (ite y$LoneHot y$L0 y$L1)))
(assert (= y$55 (= y$L1$next y$L1$next_rhs_op)))
(assert (= y$L2$next_rhs_op (ite y$LoneHot y$L1 y$L2)))
(assert (= y$59 (= y$L2$next y$L2$next_rhs_op)))
(assert (= y$s$143_op (Le_1_8_8 y$b y$n5s8)))
(assert (= y$s$72_op (and y$L2 y$s$143_op)))
(assert (= y$L3$next_rhs_op (ite y$LoneHot y$s$72_op y$L3)))
(assert (= y$69 (= y$L3$next y$L3$next_rhs_op)))
(assert (= y$L4$next_rhs_op (ite y$LoneHot y$L3 y$L4)))
(assert (= y$73 (= y$L4$next y$L4$next_rhs_op)))
(assert (= y$s$143_op (not y$75)))
(assert (= y$s$73_op (and y$L2 y$75)))
(assert (= y$s$139_op (or y$L4 y$s$73_op)))
(assert (= y$L5$next_rhs_op (ite y$LoneHot y$s$139_op y$L5)))
(assert (= y$82 (= y$L5$next y$L5$next_rhs_op)))
(assert (= y$s$12_op (Add_8_8_8 y$X y$Y)))
(assert (= y$87 (not (= y$n4s8 y$s$12_op))))
(assert (= y$s$74_op (and y$L5 y$87)))
(assert (= y$s$140_op (or y$L6 y$s$74_op)))
(assert (= y$L6$next_rhs_op (ite y$LoneHot y$s$140_op y$L6)))
(assert (= y$94 (= y$L6$next y$L6$next_rhs_op)))
(assert (= (= y$n4s8 y$s$12_op) y$96))
(assert (= y$s$75_op (and y$L5 y$96)))
(assert (= y$s$141_op (or y$L7 y$s$75_op)))
(assert (= y$L7$next_rhs_op (ite y$LoneHot y$s$141_op y$L7)))
(assert (= y$103 (= y$L7$next y$L7$next_rhs_op)))
(assert (= y$s$18_op (and y$L0 y$2)))
(assert (= y$s$19_op (and y$4 y$s$18_op)))
(assert (= y$s$20_op (and y$6 y$s$19_op)))
(assert (= y$s$21_op (and y$8 y$s$20_op)))
(assert (= y$s$15_op (and y$10 y$s$21_op)))
(assert (= y$s$16_op (and y$12 y$s$15_op)))
(assert (= y$s$17_op (and y$14 y$s$16_op)))
(assert (= y$L0 (not y$119)))
(assert (= y$s$22_op (and y$L1 y$119)))
(assert (= y$s$23_op (and y$4 y$s$22_op)))
(assert (= y$s$24_op (and y$6 y$s$23_op)))
(assert (= y$s$25_op (and y$8 y$s$24_op)))
(assert (= y$s$26_op (and y$10 y$s$25_op)))
(assert (= y$s$27_op (and y$12 y$s$26_op)))
(assert (= y$s$28_op (and y$14 y$s$27_op)))
(assert (= y$s$133_op (or y$s$17_op y$s$28_op)))
(assert (= y$s$64_op (and y$2 y$119)))
(assert (= y$s$30_op (and y$L2 y$s$64_op)))
(assert (= y$s$31_op (and y$6 y$s$30_op)))
(assert (= y$s$32_op (and y$8 y$s$31_op)))
(assert (= y$s$33_op (and y$10 y$s$32_op)))
(assert (= y$s$34_op (and y$12 y$s$33_op)))
(assert (= y$s$35_op (and y$14 y$s$34_op)))
(assert (= y$s$134_op (or y$s$133_op y$s$35_op)))
(assert (= y$s$65_op (and y$4 y$s$64_op)))
(assert (= y$s$38_op (and y$L3 y$s$65_op)))
(assert (= y$s$39_op (and y$8 y$s$38_op)))
(assert (= y$s$40_op (and y$10 y$s$39_op)))
(assert (= y$s$41_op (and y$12 y$s$40_op)))
(assert (= y$s$42_op (and y$14 y$s$41_op)))
(assert (= y$s$135_op (or y$s$134_op y$s$42_op)))
(assert (= y$s$66_op (and y$6 y$s$65_op)))
(assert (= y$s$46_op (and y$L4 y$s$66_op)))
(assert (= y$s$47_op (and y$10 y$s$46_op)))
(assert (= y$s$48_op (and y$12 y$s$47_op)))
(assert (= y$s$49_op (and y$14 y$s$48_op)))
(assert (= y$s$136_op (or y$s$135_op y$s$49_op)))
(assert (= y$s$67_op (and y$8 y$s$66_op)))
(assert (= y$s$54_op (and y$L5 y$s$67_op)))
(assert (= y$s$55_op (and y$12 y$s$54_op)))
(assert (= y$s$56_op (and y$14 y$s$55_op)))
(assert (= y$s$137_op (or y$s$136_op y$s$56_op)))
(assert (= y$s$68_op (and y$10 y$s$67_op)))
(assert (= y$s$58_op (and y$L6 y$s$68_op)))
(assert (= y$s$59_op (and y$14 y$s$58_op)))
(assert (= y$s$138_op (or y$s$137_op y$s$59_op)))
(assert (= y$s$69_op (and y$12 y$s$68_op)))
(assert (= y$s$70_op (and y$L7 y$s$69_op)))
(assert (= y$LoneHot$next_rhs_op (or y$s$138_op y$s$70_op)))
(assert (= y$202 (= y$LoneHot$next y$LoneHot$next_rhs_op)))
(assert (= y$203 (and y$36 y$46 y$51 y$55 y$59 y$69 y$73 y$82 y$94 y$103 y$202)))
(assert (= y$L7$next (not y$217)))
(assert (= y$218 (= y$prop$next y$217)))
(assert (= y$prop$next (not y$216)))
(assert (= y$220 (and y$L0 y$2 y$4 y$6 y$8 y$10 y$12 y$14 y$LoneHot y$18 y$20 y$203 y$218 y$216)))
(assert y$220)
(check-sat)
(exit)
