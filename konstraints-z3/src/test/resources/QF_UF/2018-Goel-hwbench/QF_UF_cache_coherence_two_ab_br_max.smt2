(set-info :smt-lib-version 2.6)
(set-logic QF_UF)
(set-info :source |
Generated by: Aman Goel (amangoel@umich.edu), Karem A. Sakallah (karem@umich.edu)
Generated on: 2018-04-06

Generated by the tool Averroes 2 (successor of [1]) which implements safety property
verification on hardware systems.

This SMT problem belongs to a set of SMT problems generated by applying Averroes 2
to benchmarks derived from [2-5].

A total of 412 systems (345 from [2], 19 from [3], 26 from [4], 22 from [5]) were
syntactically converted from their original formats (using [6, 7]), and given to 
Averroes 2 to perform property checking with abstraction (wide bit-vectors -> terms, 
wide operators -> UF) using SMT solvers [8, 9].

[1] Lee S., Sakallah K.A. (2014) Unbounded Scalable Verification Based on Approximate
Property-Directed Reachability and Datapath Abstraction. In: Biere A., Bloem R. (eds)
Computer Aided Verification. CAV 2014. Lecture Notes in Computer Science, vol 8559.
Springer, Cham
[2] http://fmv.jku.at/aiger/index.html#beem
[3] http://www.cs.cmu.edu/~modelcheck/vcegar
[4] http://www.cprover.org/hardware/v2c
[5] http://github.com/aman-goel/verilogbench
[6] http://www.clifford.at/yosys
[7] http://github.com/chengyinwu/V3
[8] http://github.com/Z3Prover/z3
[9] http://github.com/SRI-CSL/yices2

id: cache_coherence_two
query-maker: "Yices 2"
query-time: 7.169000 ms
query-class: abstract
query-category: incremental
query-type: br
status: sat
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")

;
(set-info :status sat)
(declare-sort utt$2 0)
(declare-sort utt$3 0)
(declare-sort utt$29 0)
(declare-sort utt$31 0)
(declare-sort utt$32 0)
(declare-fun Concat_32_1_31 (Bool utt$31 ) utt$32)
(declare-fun Concat_32_3_29 (utt$3 utt$29 ) utt$32)
(declare-fun Extract_1_0_0_32 (utt$32 ) Bool)
(declare-fun Extract_3_2_0_32 (utt$32 ) utt$3)
(declare-fun Sub_32_32_32 (utt$32 utt$32 ) utt$32)
(declare-fun y$1 () Bool)
(declare-fun y$10 () Bool)
(declare-fun y$104 () Bool)
(declare-fun y$109 () Bool)
(declare-fun y$112 () Bool)
(declare-fun y$12 () Bool)
(declare-fun y$120 () Bool)
(declare-fun y$126 () Bool)
(declare-fun y$14 () Bool)
(declare-fun y$143 () Bool)
(declare-fun y$147 () Bool)
(declare-fun y$149 () Bool)
(declare-fun y$156 () Bool)
(declare-fun y$158 () Bool)
(declare-fun y$16 () Bool)
(declare-fun y$162 () Bool)
(declare-fun y$163 () Bool)
(declare-fun y$164 () Bool)
(declare-fun y$177 () Bool)
(declare-fun y$178 () Bool)
(declare-fun y$179 () Bool)
(declare-fun y$184 () Bool)
(declare-fun y$20 () Bool)
(declare-fun y$200 () Bool)
(declare-fun y$204 () Bool)
(declare-fun y$205 () Bool)
(declare-fun y$206 () Bool)
(declare-fun y$208 () Bool)
(declare-fun y$217 () Bool)
(declare-fun y$23 () Bool)
(declare-fun y$234 () Bool)
(declare-fun y$236 () Bool)
(declare-fun y$237 () Bool)
(declare-fun y$247 () Bool)
(declare-fun y$250 () Bool)
(declare-fun y$251 () Bool)
(declare-fun y$255 () Bool)
(declare-fun y$28 () Bool)
(declare-fun y$290 () Bool)
(declare-fun y$292 () Bool)
(declare-fun y$295 () Bool)
(declare-fun y$3 () Bool)
(declare-fun y$300 () Bool)
(declare-fun y$31 () Bool)
(declare-fun y$311 () Bool)
(declare-fun y$33 () Bool)
(declare-fun y$35 () Bool)
(declare-fun y$367 () Bool)
(declare-fun y$37 () Bool)
(declare-fun y$373 () Bool)
(declare-fun y$379 () Bool)
(declare-fun y$385 () Bool)
(declare-fun y$39 () Bool)
(declare-fun y$391 () Bool)
(declare-fun y$395 () Bool)
(declare-fun y$403 () Bool)
(declare-fun y$41 () Bool)
(declare-fun y$414 () Bool)
(declare-fun y$418 () Bool)
(declare-fun y$419 () Bool)
(declare-fun y$420 () Bool)
(declare-fun y$421 () Bool)
(declare-fun y$426 () Bool)
(declare-fun y$431 () Bool)
(declare-fun y$435 () utt$3)
(declare-fun y$44 () Bool)
(declare-fun y$441 () Bool)
(declare-fun y$455 () Bool)
(declare-fun y$46 () Bool)
(declare-fun y$460 () Bool)
(declare-fun y$463 () Bool)
(declare-fun y$470 () Bool)
(declare-fun y$475 () Bool)
(declare-fun y$492 () Bool)
(declare-fun y$496 () Bool)
(declare-fun y$498 () Bool)
(declare-fun y$5 () Bool)
(declare-fun y$50 () Bool)
(declare-fun y$505 () Bool)
(declare-fun y$507 () Bool)
(declare-fun y$52 () Bool)
(declare-fun y$54 () Bool)
(declare-fun y$540 () Bool)
(declare-fun y$56 () Bool)
(declare-fun y$592 () Bool)
(declare-fun y$598 () Bool)
(declare-fun y$604 () Bool)
(declare-fun y$610 () Bool)
(declare-fun y$616 () Bool)
(declare-fun y$620 () Bool)
(declare-fun y$637 () Bool)
(declare-fun y$64 () Bool)
(declare-fun y$641 () Bool)
(declare-fun y$642 () Bool)
(declare-fun y$643 () Bool)
(declare-fun y$644 () Bool)
(declare-fun y$648 () Bool)
(declare-fun y$653 () Bool)
(declare-fun y$657 () utt$3)
(declare-fun y$663 () Bool)
(declare-fun y$664 () Bool)
(declare-fun y$670 () Bool)
(declare-fun y$673 () Bool)
(declare-fun y$676 () Bool)
(declare-fun y$685 () Bool)
(declare-fun y$686 () Bool)
(declare-fun y$687 () Bool)
(declare-fun y$69 () Bool)
(declare-fun y$690 () Bool)
(declare-fun y$691 () Bool)
(declare-fun y$695 () Bool)
(declare-fun y$696 () Bool)
(declare-fun y$699 () Bool)
(declare-fun y$7 () Bool)
(declare-fun y$700 () Bool)
(declare-fun y$704 () Bool)
(declare-fun y$707 () Bool)
(declare-fun y$708 () Bool)
(declare-fun y$709 () Bool)
(declare-fun y$710 () Bool)
(declare-fun y$711 () Bool)
(declare-fun y$712 () Bool)
(declare-fun y$714 () Bool)
(declare-fun y$718 () Bool)
(declare-fun y$720 () Bool)
(declare-fun y$721 () Bool)
(declare-fun y$722 () Bool)
(declare-fun y$723 () Bool)
(declare-fun y$742 () Bool)
(declare-fun y$75 () Bool)
(declare-fun y$773 () Bool)
(declare-fun y$775 () Bool)
(declare-fun y$779 () Bool)
(declare-fun y$785 () Bool)
(declare-fun y$791 () Bool)
(declare-fun y$792 () Bool)
(declare-fun y$793 () Bool)
(declare-fun y$799 () Bool)
(declare-fun y$801 () Bool)
(declare-fun y$81 () Bool)
(declare-fun y$824 () Bool)
(declare-fun y$829 () Bool)
(declare-fun y$830 () Bool)
(declare-fun y$831 () Bool)
(declare-fun y$832 () Bool)
(declare-fun y$835 () Bool)
(declare-fun y$837 () Bool)
(declare-fun y$838 () Bool)
(declare-fun y$839 () Bool)
(declare-fun y$841 () utt$32)
(declare-fun y$842 () Bool)
(declare-fun y$843 () Bool)
(declare-fun y$844 () Bool)
(declare-fun y$845 () Bool)
(declare-fun y$846 () Bool)
(declare-fun y$85 () Bool)
(declare-fun y$852 () Bool)
(declare-fun y$855 () Bool)
(declare-fun y$856 () Bool)
(declare-fun y$857 () Bool)
(declare-fun y$860 () Bool)
(declare-fun y$864 () Bool)
(declare-fun y$865 () Bool)
(declare-fun y$869 () Bool)
(declare-fun y$879 () Bool)
(declare-fun y$88 () Bool)
(declare-fun y$880 () Bool)
(declare-fun y$881 () Bool)
(declare-fun y$882 () Bool)
(declare-fun y$885 () Bool)
(declare-fun y$887 () Bool)
(declare-fun y$888 () Bool)
(declare-fun y$889 () Bool)
(declare-fun y$890 () Bool)
(declare-fun y$893 () Bool)
(declare-fun y$897 () Bool)
(declare-fun y$898 () Bool)
(declare-fun y$899 () Bool)
(declare-fun y$900 () Bool)
(declare-fun y$901 () Bool)
(declare-fun y$902 () Bool)
(declare-fun y$903 () Bool)
(declare-fun y$ND_inB () Bool)
(declare-fun y$ND_inB_op () Bool)
(declare-fun y$all_shared () Bool)
(declare-fun y$all_shared_op () Bool)
(declare-fun y$bus_arbiter.bus_ackA () Bool)
(declare-fun y$bus_arbiter.bus_ackA$next () Bool)
(declare-fun y$bus_arbiter.bus_ackA$next_rhs () Bool)
(declare-fun y$bus_arbiter.bus_ackA$next_rhs_op () Bool)
(declare-fun y$bus_arbiter.bus_ackB () Bool)
(declare-fun y$bus_arbiter.bus_ackB$next () Bool)
(declare-fun y$bus_arbiter.bus_ackB$next_rhs () Bool)
(declare-fun y$bus_arbiter.bus_ackB$next_rhs_op () Bool)
(declare-fun y$bus_arbiter.invalidate () Bool)
(declare-fun y$bus_arbiter.invalidate$next () Bool)
(declare-fun y$bus_arbiter.invalidate$next_rhs () Bool)
(declare-fun y$bus_arbiter.invalidate$next_rhs_op () Bool)
(declare-fun y$bus_arbiter.is_snoop () Bool)
(declare-fun y$bus_arbiter.is_snoop$next () Bool)
(declare-fun y$bus_arbiter.is_snoop$next_rhs () Bool)
(declare-fun y$bus_arbiter.is_snoop$next_rhs_op () Bool)
(declare-fun y$bus_arbiter.shared_snoop () utt$3)
(declare-fun y$bus_arbiter.shared_snoop$next () utt$3)
(declare-fun y$bus_arbiter.shared_snoop$next_rhs () utt$3)
(declare-fun y$bus_arbiter.shared_snoop$next_rhs_op () utt$3)
(declare-fun y$info_availA () Bool)
(declare-fun y$info_availB () Bool)
(declare-fun y$is_sharedA () Bool)
(declare-fun y$is_sharedA$next () Bool)
(declare-fun y$is_sharedB () Bool)
(declare-fun y$is_sharedB$next () Bool)
(declare-fun y$master_inB () Bool)
(declare-fun y$n0s1 () Bool)
(declare-fun y$n0s2 () utt$2)
(declare-fun y$n0s29 () utt$29)
(declare-fun y$n0s3 () utt$3)
(declare-fun y$n0s31 () utt$31)
(declare-fun y$n0s32 () utt$32)
(declare-fun y$n1s1 () Bool)
(declare-fun y$n1s2 () utt$2)
(declare-fun y$n1s3 () utt$3)
(declare-fun y$n1s32 () utt$32)
(declare-fun y$n2s2 () utt$2)
(declare-fun y$n2s3 () utt$3)
(declare-fun y$n3s3 () utt$3)
(declare-fun y$n4s3 () utt$3)
(declare-fun y$n5s3 () utt$3)
(declare-fun y$pcacheA.bus_req () Bool)
(declare-fun y$pcacheA.bus_req$next () Bool)
(declare-fun y$pcacheA.bus_req$next_rhs () Bool)
(declare-fun y$pcacheA.bus_req$next_rhs_op () Bool)
(declare-fun y$pcacheA.hit () Bool)
(declare-fun y$pcacheA.hit$next () Bool)
(declare-fun y$pcacheA.hit$next_rhs () Bool)
(declare-fun y$pcacheA.hit$next_rhs_op () Bool)
(declare-fun y$pcacheA.inv_out () Bool)
(declare-fun y$pcacheA.inv_out$next () Bool)
(declare-fun y$pcacheA.inv_out$next_rhs () Bool)
(declare-fun y$pcacheA.inv_out$next_rhs_op () Bool)
(declare-fun y$pcacheA.miss () Bool)
(declare-fun y$pcacheA.miss$next () Bool)
(declare-fun y$pcacheA.miss$next_rhs () Bool)
(declare-fun y$pcacheA.miss$next_rhs_op () Bool)
(declare-fun y$pcacheA.next_state () utt$2)
(declare-fun y$pcacheA.next_state$next () utt$2)
(declare-fun y$pcacheA.next_state$next_rhs () utt$2)
(declare-fun y$pcacheA.next_state$next_rhs_op () utt$2)
(declare-fun y$pcacheA.proc.count () utt$3)
(declare-fun y$pcacheA.proc.count$next () utt$3)
(declare-fun y$pcacheA.proc.count$next_rhs () utt$3)
(declare-fun y$pcacheA.proc.count$next_rhs_op () utt$3)
(declare-fun y$pcacheA.proc.req_enable () Bool)
(declare-fun y$pcacheA.proc.valid () Bool)
(declare-fun y$pcacheA.proc.valid$next () Bool)
(declare-fun y$pcacheA.proc.valid$next_rhs () Bool)
(declare-fun y$pcacheA.proc.valid$next_rhs_op () Bool)
(declare-fun y$pcacheA.read () Bool)
(declare-fun y$pcacheA.read$next () Bool)
(declare-fun y$pcacheA.read$next_rhs () Bool)
(declare-fun y$pcacheA.read$next_rhs_op () Bool)
(declare-fun y$pcacheA.snoop_type () utt$3)
(declare-fun y$pcacheA.snoop_type$next () utt$3)
(declare-fun y$pcacheA.snoop_type$next_rhs () utt$3)
(declare-fun y$pcacheA.snoop_type$next_rhs_op () utt$3)
(declare-fun y$pcacheA.state () utt$2)
(declare-fun y$pcacheA.state$next () utt$2)
(declare-fun y$pcacheA.update () Bool)
(declare-fun y$pcacheA.update$next () Bool)
(declare-fun y$pcacheA.update$next_rhs () Bool)
(declare-fun y$pcacheA.update$next_rhs_op () Bool)
(declare-fun y$pcacheA.write () Bool)
(declare-fun y$pcacheA.write$next () Bool)
(declare-fun y$pcacheA.write$next_rhs () Bool)
(declare-fun y$pcacheA.write$next_rhs_op () Bool)
(declare-fun y$pcacheB.bus_req () Bool)
(declare-fun y$pcacheB.bus_req$next () Bool)
(declare-fun y$pcacheB.bus_req$next_rhs () Bool)
(declare-fun y$pcacheB.bus_req$next_rhs_op () Bool)
(declare-fun y$pcacheB.hit () Bool)
(declare-fun y$pcacheB.hit$next () Bool)
(declare-fun y$pcacheB.hit$next_rhs () Bool)
(declare-fun y$pcacheB.hit$next_rhs_op () Bool)
(declare-fun y$pcacheB.inv_out () Bool)
(declare-fun y$pcacheB.inv_out$next () Bool)
(declare-fun y$pcacheB.inv_out$next_rhs () Bool)
(declare-fun y$pcacheB.inv_out$next_rhs_op () Bool)
(declare-fun y$pcacheB.miss () Bool)
(declare-fun y$pcacheB.miss$next () Bool)
(declare-fun y$pcacheB.miss$next_rhs () Bool)
(declare-fun y$pcacheB.miss$next_rhs_op () Bool)
(declare-fun y$pcacheB.next_state () utt$2)
(declare-fun y$pcacheB.next_state$next () utt$2)
(declare-fun y$pcacheB.next_state$next_rhs () utt$2)
(declare-fun y$pcacheB.next_state$next_rhs_op () utt$2)
(declare-fun y$pcacheB.proc.count () utt$3)
(declare-fun y$pcacheB.proc.count$next () utt$3)
(declare-fun y$pcacheB.proc.count$next_rhs () utt$3)
(declare-fun y$pcacheB.proc.count$next_rhs_op () utt$3)
(declare-fun y$pcacheB.proc.req_enable () Bool)
(declare-fun y$pcacheB.proc.valid () Bool)
(declare-fun y$pcacheB.proc.valid$next () Bool)
(declare-fun y$pcacheB.proc.valid$next_rhs () Bool)
(declare-fun y$pcacheB.proc.valid$next_rhs_op () Bool)
(declare-fun y$pcacheB.read () Bool)
(declare-fun y$pcacheB.read$next () Bool)
(declare-fun y$pcacheB.read$next_rhs () Bool)
(declare-fun y$pcacheB.read$next_rhs_op () Bool)
(declare-fun y$pcacheB.snoop_type () utt$3)
(declare-fun y$pcacheB.snoop_type$next () utt$3)
(declare-fun y$pcacheB.snoop_type$next_rhs () utt$3)
(declare-fun y$pcacheB.snoop_type$next_rhs_op () utt$3)
(declare-fun y$pcacheB.state () utt$2)
(declare-fun y$pcacheB.state$next () utt$2)
(declare-fun y$pcacheB.update () Bool)
(declare-fun y$pcacheB.update$next () Bool)
(declare-fun y$pcacheB.update$next_rhs () Bool)
(declare-fun y$pcacheB.update$next_rhs_op () Bool)
(declare-fun y$pcacheB.write () Bool)
(declare-fun y$pcacheB.write$next () Bool)
(declare-fun y$pcacheB.write$next_rhs () Bool)
(declare-fun y$pcacheB.write$next_rhs_op () Bool)
(declare-fun y$prop () Bool)
(declare-fun y$prop$next () Bool)
(declare-fun y$prop0 () Bool)
(declare-fun y$prop0$next () Bool)
(declare-fun y$prop0$next_op () Bool)
(declare-fun y$prop0_op () Bool)
(declare-fun y$s$100 () Bool)
(declare-fun y$s$100_op () Bool)
(declare-fun y$s$101 () Bool)
(declare-fun y$s$101_op () Bool)
(declare-fun y$s$102 () Bool)
(declare-fun y$s$102_op () Bool)
(declare-fun y$s$103 () Bool)
(declare-fun y$s$103_op () Bool)
(declare-fun y$s$104 () Bool)
(declare-fun y$s$104_op () Bool)
(declare-fun y$s$105 () Bool)
(declare-fun y$s$105_op () Bool)
(declare-fun y$s$106 () Bool)
(declare-fun y$s$106_op () Bool)
(declare-fun y$s$107 () Bool)
(declare-fun y$s$107_op () Bool)
(declare-fun y$s$108 () Bool)
(declare-fun y$s$108_op () Bool)
(declare-fun y$s$109 () Bool)
(declare-fun y$s$109_op () Bool)
(declare-fun y$s$13 () utt$3)
(declare-fun y$s$131 () Bool)
(declare-fun y$s$131_op () Bool)
(declare-fun y$s$132 () Bool)
(declare-fun y$s$132_op () Bool)
(declare-fun y$s$133 () Bool)
(declare-fun y$s$133_op () Bool)
(declare-fun y$s$134 () Bool)
(declare-fun y$s$134_op () Bool)
(declare-fun y$s$135 () Bool)
(declare-fun y$s$135_op () Bool)
(declare-fun y$s$138 () Bool)
(declare-fun y$s$138_op () Bool)
(declare-fun y$s$13_op () utt$3)
(declare-fun y$s$14 () Bool)
(declare-fun y$s$141 () Bool)
(declare-fun y$s$141_op () Bool)
(declare-fun y$s$142 () Bool)
(declare-fun y$s$142_op () Bool)
(declare-fun y$s$143 () Bool)
(declare-fun y$s$143_op () Bool)
(declare-fun y$s$144 () Bool)
(declare-fun y$s$144_op () Bool)
(declare-fun y$s$145 () utt$3)
(declare-fun y$s$145_op () utt$3)
(declare-fun y$s$146 () utt$3)
(declare-fun y$s$146_op () utt$3)
(declare-fun y$s$147 () utt$3)
(declare-fun y$s$147_op () utt$3)
(declare-fun y$s$148 () utt$3)
(declare-fun y$s$148_op () utt$3)
(declare-fun y$s$149 () Bool)
(declare-fun y$s$149_op () Bool)
(declare-fun y$s$14_op () Bool)
(declare-fun y$s$15 () Bool)
(declare-fun y$s$150 () Bool)
(declare-fun y$s$150_op () Bool)
(declare-fun y$s$151 () Bool)
(declare-fun y$s$151_op () Bool)
(declare-fun y$s$152 () Bool)
(declare-fun y$s$152_op () Bool)
(declare-fun y$s$153 () utt$2)
(declare-fun y$s$153_op () utt$2)
(declare-fun y$s$154 () utt$2)
(declare-fun y$s$154_op () utt$2)
(declare-fun y$s$15_op () Bool)
(declare-fun y$s$162 () utt$2)
(declare-fun y$s$162_op () utt$2)
(declare-fun y$s$163 () utt$2)
(declare-fun y$s$163_op () utt$2)
(declare-fun y$s$169 () utt$2)
(declare-fun y$s$169_op () utt$2)
(declare-fun y$s$171 () utt$2)
(declare-fun y$s$171_op () utt$2)
(declare-fun y$s$173 () utt$2)
(declare-fun y$s$173_op () utt$2)
(declare-fun y$s$174 () utt$2)
(declare-fun y$s$174_op () utt$2)
(declare-fun y$s$179 () utt$2)
(declare-fun y$s$179_op () utt$2)
(declare-fun y$s$181 () utt$2)
(declare-fun y$s$181_op () utt$2)
(declare-fun y$s$183 () utt$2)
(declare-fun y$s$183_op () utt$2)
(declare-fun y$s$185 () utt$2)
(declare-fun y$s$185_op () utt$2)
(declare-fun y$s$186 () utt$2)
(declare-fun y$s$186_op () utt$2)
(declare-fun y$s$189 () utt$2)
(declare-fun y$s$189_op () utt$2)
(declare-fun y$s$191 () Bool)
(declare-fun y$s$191_op () Bool)
(declare-fun y$s$198 () Bool)
(declare-fun y$s$198_op () Bool)
(declare-fun y$s$202 () Bool)
(declare-fun y$s$202_op () Bool)
(declare-fun y$s$204 () Bool)
(declare-fun y$s$204_op () Bool)
(declare-fun y$s$206 () Bool)
(declare-fun y$s$206_op () Bool)
(declare-fun y$s$207 () Bool)
(declare-fun y$s$207_op () Bool)
(declare-fun y$s$219 () Bool)
(declare-fun y$s$219_op () Bool)
(declare-fun y$s$220 () Bool)
(declare-fun y$s$220_op () Bool)
(declare-fun y$s$221 () utt$32)
(declare-fun y$s$221_op () utt$32)
(declare-fun y$s$222 () utt$32)
(declare-fun y$s$222_op () utt$32)
(declare-fun y$s$223 () utt$32)
(declare-fun y$s$223_op () utt$32)
(declare-fun y$s$226 () utt$32)
(declare-fun y$s$226_op () utt$32)
(declare-fun y$s$228 () utt$32)
(declare-fun y$s$228_op () utt$32)
(declare-fun y$s$233 () utt$3)
(declare-fun y$s$233_op () utt$3)
(declare-fun y$s$234 () Bool)
(declare-fun y$s$234_op () Bool)
(declare-fun y$s$235 () utt$32)
(declare-fun y$s$235_op () utt$32)
(declare-fun y$s$245 () utt$3)
(declare-fun y$s$245_op () utt$3)
(declare-fun y$s$246 () Bool)
(declare-fun y$s$246_op () Bool)
(declare-fun y$s$25 () utt$3)
(declare-fun y$s$250 () utt$2)
(declare-fun y$s$250_op () utt$2)
(declare-fun y$s$251 () utt$2)
(declare-fun y$s$251_op () utt$2)
(declare-fun y$s$252 () utt$2)
(declare-fun y$s$252_op () utt$2)
(declare-fun y$s$253 () utt$2)
(declare-fun y$s$253_op () utt$2)
(declare-fun y$s$254 () utt$2)
(declare-fun y$s$254_op () utt$2)
(declare-fun y$s$255 () utt$2)
(declare-fun y$s$255_op () utt$2)
(declare-fun y$s$256 () utt$2)
(declare-fun y$s$256_op () utt$2)
(declare-fun y$s$257 () utt$2)
(declare-fun y$s$257_op () utt$2)
(declare-fun y$s$258 () utt$2)
(declare-fun y$s$258_op () utt$2)
(declare-fun y$s$259 () utt$2)
(declare-fun y$s$259_op () utt$2)
(declare-fun y$s$25_op () utt$3)
(declare-fun y$s$260 () Bool)
(declare-fun y$s$260_op () Bool)
(declare-fun y$s$261 () Bool)
(declare-fun y$s$261_op () Bool)
(declare-fun y$s$262 () Bool)
(declare-fun y$s$262_op () Bool)
(declare-fun y$s$263 () Bool)
(declare-fun y$s$263_op () Bool)
(declare-fun y$s$264 () Bool)
(declare-fun y$s$264_op () Bool)
(declare-fun y$s$265 () Bool)
(declare-fun y$s$265_op () Bool)
(declare-fun y$s$266 () Bool)
(declare-fun y$s$266_op () Bool)
(declare-fun y$s$267 () Bool)
(declare-fun y$s$267_op () Bool)
(declare-fun y$s$268 () Bool)
(declare-fun y$s$268_op () Bool)
(declare-fun y$s$269 () Bool)
(declare-fun y$s$269_op () Bool)
(declare-fun y$s$30 () utt$2)
(declare-fun y$s$301 () Bool)
(declare-fun y$s$301_op () Bool)
(declare-fun y$s$302 () Bool)
(declare-fun y$s$302_op () Bool)
(declare-fun y$s$303 () Bool)
(declare-fun y$s$303_op () Bool)
(declare-fun y$s$304 () Bool)
(declare-fun y$s$304_op () Bool)
(declare-fun y$s$305 () Bool)
(declare-fun y$s$305_op () Bool)
(declare-fun y$s$306 () Bool)
(declare-fun y$s$306_op () Bool)
(declare-fun y$s$307 () Bool)
(declare-fun y$s$307_op () Bool)
(declare-fun y$s$308 () Bool)
(declare-fun y$s$308_op () Bool)
(declare-fun y$s$309 () Bool)
(declare-fun y$s$309_op () Bool)
(declare-fun y$s$30_op () utt$2)
(declare-fun y$s$31 () utt$2)
(declare-fun y$s$310 () Bool)
(declare-fun y$s$310_op () Bool)
(declare-fun y$s$311 () Bool)
(declare-fun y$s$311_op () Bool)
(declare-fun y$s$312 () Bool)
(declare-fun y$s$312_op () Bool)
(declare-fun y$s$313 () Bool)
(declare-fun y$s$313_op () Bool)
(declare-fun y$s$314 () Bool)
(declare-fun y$s$314_op () Bool)
(declare-fun y$s$315 () Bool)
(declare-fun y$s$315_op () Bool)
(declare-fun y$s$316 () Bool)
(declare-fun y$s$316_op () Bool)
(declare-fun y$s$317 () Bool)
(declare-fun y$s$317_op () Bool)
(declare-fun y$s$318 () Bool)
(declare-fun y$s$318_op () Bool)
(declare-fun y$s$319 () Bool)
(declare-fun y$s$319_op () Bool)
(declare-fun y$s$31_op () utt$2)
(declare-fun y$s$32 () utt$2)
(declare-fun y$s$32_op () utt$2)
(declare-fun y$s$33 () utt$2)
(declare-fun y$s$33_op () utt$2)
(declare-fun y$s$34 () utt$2)
(declare-fun y$s$340 () Bool)
(declare-fun y$s$340_op () Bool)
(declare-fun y$s$341 () Bool)
(declare-fun y$s$341_op () Bool)
(declare-fun y$s$342 () Bool)
(declare-fun y$s$342_op () Bool)
(declare-fun y$s$343 () Bool)
(declare-fun y$s$343_op () Bool)
(declare-fun y$s$346 () Bool)
(declare-fun y$s$346_op () Bool)
(declare-fun y$s$347 () Bool)
(declare-fun y$s$347_op () Bool)
(declare-fun y$s$348 () Bool)
(declare-fun y$s$348_op () Bool)
(declare-fun y$s$349 () Bool)
(declare-fun y$s$349_op () Bool)
(declare-fun y$s$34_op () utt$2)
(declare-fun y$s$35 () utt$2)
(declare-fun y$s$350 () utt$3)
(declare-fun y$s$350_op () utt$3)
(declare-fun y$s$351 () utt$3)
(declare-fun y$s$351_op () utt$3)
(declare-fun y$s$352 () utt$3)
(declare-fun y$s$352_op () utt$3)
(declare-fun y$s$353 () utt$3)
(declare-fun y$s$353_op () utt$3)
(declare-fun y$s$354 () Bool)
(declare-fun y$s$354_op () Bool)
(declare-fun y$s$355 () Bool)
(declare-fun y$s$355_op () Bool)
(declare-fun y$s$356 () Bool)
(declare-fun y$s$356_op () Bool)
(declare-fun y$s$357 () Bool)
(declare-fun y$s$357_op () Bool)
(declare-fun y$s$358 () utt$2)
(declare-fun y$s$358_op () utt$2)
(declare-fun y$s$359 () utt$2)
(declare-fun y$s$359_op () utt$2)
(declare-fun y$s$35_op () utt$2)
(declare-fun y$s$36 () utt$2)
(declare-fun y$s$367 () utt$2)
(declare-fun y$s$367_op () utt$2)
(declare-fun y$s$368 () utt$2)
(declare-fun y$s$368_op () utt$2)
(declare-fun y$s$36_op () utt$2)
(declare-fun y$s$37 () utt$2)
(declare-fun y$s$373 () utt$2)
(declare-fun y$s$373_op () utt$2)
(declare-fun y$s$374 () utt$2)
(declare-fun y$s$374_op () utt$2)
(declare-fun y$s$376 () utt$2)
(declare-fun y$s$376_op () utt$2)
(declare-fun y$s$378 () utt$2)
(declare-fun y$s$378_op () utt$2)
(declare-fun y$s$379 () utt$2)
(declare-fun y$s$379_op () utt$2)
(declare-fun y$s$37_op () utt$2)
(declare-fun y$s$38 () utt$2)
(declare-fun y$s$384 () utt$2)
(declare-fun y$s$384_op () utt$2)
(declare-fun y$s$386 () utt$2)
(declare-fun y$s$386_op () utt$2)
(declare-fun y$s$387 () utt$2)
(declare-fun y$s$387_op () utt$2)
(declare-fun y$s$388 () utt$2)
(declare-fun y$s$388_op () utt$2)
(declare-fun y$s$38_op () utt$2)
(declare-fun y$s$39 () utt$2)
(declare-fun y$s$390 () utt$2)
(declare-fun y$s$390_op () utt$2)
(declare-fun y$s$391 () utt$2)
(declare-fun y$s$391_op () utt$2)
(declare-fun y$s$394 () utt$2)
(declare-fun y$s$394_op () utt$2)
(declare-fun y$s$395 () Bool)
(declare-fun y$s$395_op () Bool)
(declare-fun y$s$396 () Bool)
(declare-fun y$s$396_op () Bool)
(declare-fun y$s$39_op () utt$2)
(declare-fun y$s$40 () Bool)
(declare-fun y$s$403 () Bool)
(declare-fun y$s$403_op () Bool)
(declare-fun y$s$407 () Bool)
(declare-fun y$s$407_op () Bool)
(declare-fun y$s$409 () Bool)
(declare-fun y$s$409_op () Bool)
(declare-fun y$s$40_op () Bool)
(declare-fun y$s$41 () Bool)
(declare-fun y$s$411 () Bool)
(declare-fun y$s$411_op () Bool)
(declare-fun y$s$412 () Bool)
(declare-fun y$s$412_op () Bool)
(declare-fun y$s$415 () Bool)
(declare-fun y$s$415_op () Bool)
(declare-fun y$s$417 () Bool)
(declare-fun y$s$417_op () Bool)
(declare-fun y$s$418 () Bool)
(declare-fun y$s$418_op () Bool)
(declare-fun y$s$41_op () Bool)
(declare-fun y$s$42 () Bool)
(declare-fun y$s$420 () Bool)
(declare-fun y$s$420_op () Bool)
(declare-fun y$s$421 () Bool)
(declare-fun y$s$421_op () Bool)
(declare-fun y$s$424 () Bool)
(declare-fun y$s$424_op () Bool)
(declare-fun y$s$425 () Bool)
(declare-fun y$s$425_op () Bool)
(declare-fun y$s$426 () utt$32)
(declare-fun y$s$426_op () utt$32)
(declare-fun y$s$427 () utt$32)
(declare-fun y$s$427_op () utt$32)
(declare-fun y$s$428 () utt$32)
(declare-fun y$s$428_op () utt$32)
(declare-fun y$s$42_op () Bool)
(declare-fun y$s$43 () Bool)
(declare-fun y$s$431 () utt$32)
(declare-fun y$s$431_op () utt$32)
(declare-fun y$s$436 () utt$3)
(declare-fun y$s$436_op () utt$3)
(declare-fun y$s$437 () Bool)
(declare-fun y$s$437_op () Bool)
(declare-fun y$s$438 () utt$32)
(declare-fun y$s$438_op () utt$32)
(declare-fun y$s$43_op () Bool)
(declare-fun y$s$44 () Bool)
(declare-fun y$s$44_op () Bool)
(declare-fun y$s$5 () Bool)
(declare-fun y$s$5_op () Bool)
(declare-fun y$s$89 () Bool)
(declare-fun y$s$89_op () Bool)
(declare-fun y$s$90 () Bool)
(declare-fun y$s$90_op () Bool)
(declare-fun y$s$91 () Bool)
(declare-fun y$s$91_op () Bool)
(declare-fun y$s$92 () Bool)
(declare-fun y$s$92_op () Bool)
(declare-fun y$s$93 () Bool)
(declare-fun y$s$93_op () Bool)
(declare-fun y$s$94 () Bool)
(declare-fun y$s$94_op () Bool)
(declare-fun y$s$95 () Bool)
(declare-fun y$s$95_op () Bool)
(declare-fun y$s$96 () Bool)
(declare-fun y$s$96_op () Bool)
(declare-fun y$s$97 () Bool)
(declare-fun y$s$97_op () Bool)
(declare-fun y$s$98 () Bool)
(declare-fun y$s$98_op () Bool)
(declare-fun y$s$99 () Bool)
(declare-fun y$s$99_op () Bool)
(declare-fun y$w$1 () utt$32)
(declare-fun y$w$1$next () utt$32)
(declare-fun y$w$1$next_op () utt$32)
(declare-fun y$w$10 () utt$32)
(declare-fun y$w$10_op () utt$32)
(declare-fun y$w$11 () utt$3)
(declare-fun y$w$12 () utt$32)
(declare-fun y$w$12_op () utt$32)
(declare-fun y$w$13 () utt$3)
(declare-fun y$w$14 () utt$32)
(declare-fun y$w$14_op () utt$32)
(declare-fun y$w$15 () utt$32)
(declare-fun y$w$15_op () utt$32)
(declare-fun y$w$16 () utt$32)
(declare-fun y$w$16_op () utt$32)
(declare-fun y$w$17 () utt$32)
(declare-fun y$w$17_op () utt$32)
(declare-fun y$w$18 () utt$32)
(declare-fun y$w$18_op () utt$32)
(declare-fun y$w$19 () utt$32)
(declare-fun y$w$19_op () utt$32)
(declare-fun y$w$1_op () utt$32)
(declare-fun y$w$2 () utt$32)
(declare-fun y$w$2$next () utt$32)
(declare-fun y$w$2$next_op () utt$32)
(declare-fun y$w$20 () utt$32)
(declare-fun y$w$20_op () utt$32)
(declare-fun y$w$21 () utt$32)
(declare-fun y$w$21_op () utt$32)
(declare-fun y$w$22 () utt$32)
(declare-fun y$w$22_op () utt$32)
(declare-fun y$w$23 () utt$32)
(declare-fun y$w$23_op () utt$32)
(declare-fun y$w$2_op () utt$32)
(declare-fun y$w$3 () utt$32)
(declare-fun y$w$3$next () utt$32)
(declare-fun y$w$3$next_op () utt$32)
(declare-fun y$w$3_op () utt$32)
(declare-fun y$w$4 () utt$32)
(declare-fun y$w$4$next () utt$32)
(declare-fun y$w$4$next_op () utt$32)
(declare-fun y$w$4_op () utt$32)
(declare-fun y$w$5 () utt$32)
(declare-fun y$w$5_op () utt$32)
(declare-fun y$w$6 () utt$32)
(declare-fun y$w$6_op () utt$32)
(declare-fun y$w$7 () utt$32)
(declare-fun y$w$7_op () utt$32)
(declare-fun y$w$8 () utt$32)
(declare-fun y$w$8_op () utt$32)
(declare-fun y$w$9 () utt$32)
(declare-fun y$w$9_op () utt$32)
(assert (distinct y$n0s2 y$n2s2 y$n1s2))
(assert (distinct y$n0s3 y$n5s3 y$n2s3 y$n1s3 y$n3s3 y$n4s3))
(assert (not (= y$n1s32 y$n0s32)))
(assert (= (not (= y$n1s2 y$pcacheB.next_state)) y$801))
(assert (= (not (= y$n1s2 y$pcacheA.next_state)) y$742))
(assert (= (not (= y$n1s2 y$pcacheB.state)) y$718))
(assert (= (not (= y$n1s2 y$pcacheA.state)) y$714))
(assert (= y$88 (= y$n1s2 y$pcacheA.state)))
(assert (= y$w$1_op (ite y$88 y$n1s32 y$n0s32)))
(assert (= y$88 y$s$204_op))
(assert (= y$290 (Extract_1_0_0_32 y$w$1_op)))
(assert (= y$s$204_op y$290))
(assert (= y$w$2_op (Concat_32_1_31 y$290 y$n0s31)))
(assert (= y$670 (not (= y$n1s32 y$w$2_op))))
(assert (= y$292 (= y$n1s2 y$pcacheB.state)))
(assert (= y$w$3_op (ite y$292 y$n1s32 y$n0s32)))
(assert (= y$292 y$s$409_op))
(assert (= y$295 (Extract_1_0_0_32 y$w$3_op)))
(assert (= y$s$409_op y$295))
(assert (= y$w$4_op (Concat_32_1_31 y$295 y$n0s31)))
(assert (= y$673 (= y$n1s32 y$w$4_op)))
(assert (= y$prop0_op (or y$670 y$673)))
(assert (= y$676 (= y$prop y$prop0_op)))
(assert (= y$687 (= y$n1s2 y$pcacheA.state$next)))
(assert (= y$w$1$next_op (ite y$687 y$n1s32 y$n0s32)))
(assert (= y$687 y$691))
(assert (= y$690 (Extract_1_0_0_32 y$w$1$next_op)))
(assert (= y$691 y$690))
(assert (= y$w$2$next_op (Concat_32_1_31 y$690 y$n0s31)))
(assert (= y$695 (not (= y$n1s32 y$w$2$next_op))))
(assert (= y$696 (= y$n1s2 y$pcacheB.state$next)))
(assert (= y$w$3$next_op (ite y$696 y$n1s32 y$n0s32)))
(assert (= y$696 y$700))
(assert (= y$699 (Extract_1_0_0_32 y$w$3$next_op)))
(assert (= y$700 y$699))
(assert (= y$w$4$next_op (Concat_32_1_31 y$699 y$n0s31)))
(assert (= y$704 (= y$n1s32 y$w$4$next_op)))
(assert (= y$prop0$next_op (or y$695 y$704)))
(assert (= y$707 (= y$prop$next y$prop0$next_op)))
(assert (= y$901 (and y$prop y$676 y$707 y$801 y$742 y$718 y$714)))
(assert y$901)
(assert (distinct y$n0s2 y$n2s2 y$n1s2))
(assert (distinct y$n0s3 y$n5s3 y$n2s3 y$n1s3 y$n3s3 y$n4s3))
(assert (not (= y$n1s32 y$n0s32)))
(assert (= y$158 (= y$pcacheA.next_state y$pcacheA.state$next)))
(assert y$158)
(assert (= y$bus_arbiter.is_snoop (not y$7)))
(assert (= y$s$143_op (or y$bus_arbiter.bus_ackA y$7)))
(assert (= y$bus_arbiter.bus_ackA (not y$1)))
(assert (= y$162 (= y$n3s3 y$bus_arbiter.shared_snoop)))
(assert (= y$163 (= y$n4s3 y$bus_arbiter.shared_snoop)))
(assert (= y$164 (= y$n5s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$246_op (or y$162 y$163 y$164)))
(assert (= y$bus_arbiter.invalidate (not y$5)))
(assert (= y$178 (= y$n1s3 y$bus_arbiter.shared_snoop)))
(assert (= y$179 (= y$n1s2 y$pcacheA.next_state)))
(assert (= y$s$135_op (or y$178 y$179)))
(assert (= y$20 (= y$n0s2 y$pcacheA.next_state)))
(assert (= y$10 (= y$n0s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$341_op (or y$10 y$178)))
(assert (= y$s$341_op (not y$184)))
(assert (= y$s$96_op (and y$20 y$184)))
(assert (= y$s$342_op (or y$163 y$164)))
(assert (= y$s$97_op (and y$179 y$s$342_op)))
(assert (= y$s$138_op (or y$s$96_op y$s$97_op)))
(assert (= y$w$5_op (Concat_32_1_31 y$1 y$n0s31)))
(assert (= y$s$228_op (ite y$s$138_op y$w$5_op y$n0s32)))
(assert (= y$w$6_op (ite y$s$135_op y$n1s32 y$s$228_op)))
(assert (= y$205 (and y$1 y$s$138_op)))
(assert (= y$206 (or y$s$135_op y$205)))
(assert (= y$200 (Extract_1_0_0_32 y$w$6_op)))
(assert (= y$206 y$200))
(assert (= y$208 (= y$n1s2 y$pcacheB.next_state)))
(assert (= y$s$340_op (or y$178 y$208)))
(assert (= y$44 (= y$n0s2 y$pcacheB.next_state)))
(assert (= y$s$306_op (and y$44 y$184)))
(assert (= y$s$307_op (and y$s$342_op y$208)))
(assert (= y$s$343_op (or y$s$306_op y$s$307_op)))
(assert (= y$217 (= y$n2s2 y$pcacheA.next_state)))
(assert (= y$177 (= y$n2s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$131_op (or y$163 y$177)))
(assert (= y$s$132_op (or y$164 y$s$131_op)))
(assert (= y$s$94_op (and y$178 y$179)))
(assert (= y$s$133_op (or y$s$132_op y$s$94_op)))
(assert (= y$s$95_op (and y$20 y$162)))
(assert (= y$s$134_op (or y$s$133_op y$s$95_op)))
(assert (= y$s$226_op (ite y$s$134_op y$n1s32 y$n0s32)))
(assert (= y$w$7_op (ite y$217 y$n0s32 y$s$226_op)))
(assert (= y$s$134_op y$236))
(assert (= y$237 (and (not y$217) y$236)))
(assert (= y$234 (Extract_1_0_0_32 y$w$7_op)))
(assert (= y$237 y$234))
(assert (= y$bus_arbiter.bus_ackB (not y$3)))
(assert (= y$ND_inB_op (ite y$234 y$1 y$3)))
(assert (= y$w$8_op (Concat_32_1_31 y$ND_inB_op y$n0s31)))
(assert (= y$s$431_op (ite y$s$343_op y$w$8_op y$n0s32)))
(assert (= y$w$9_op (ite y$s$340_op y$n1s32 y$s$431_op)))
(assert (= y$250 (and y$s$343_op y$ND_inB_op)))
(assert (= y$251 (or y$s$340_op y$250)))
(assert (= y$247 (Extract_1_0_0_32 y$w$9_op)))
(assert (= y$251 y$247))
(assert (= y$s$5_op (or y$200 y$247)))
(assert (= y$s$5_op (not y$255)))
(assert (= y$s$387_op (ite y$255 y$n0s2 y$n1s2)))
(assert (= y$s$179_op (ite y$5 y$s$387_op y$pcacheA.state)))
(assert (= y$s$181_op (ite y$bus_arbiter.invalidate y$n0s2 y$pcacheA.state)))
(assert (= y$s$183_op (ite y$5 y$s$387_op y$s$181_op)))
(assert (= y$s$35_op (ite y$163 y$s$179_op y$s$183_op)))
(assert (= y$s$36_op (ite y$164 y$s$179_op y$s$35_op)))
(assert (= y$s$185_op (ite y$255 y$n0s2 y$pcacheA.state)))
(assert (= y$s$186_op (ite y$5 y$s$185_op y$pcacheA.state)))
(assert (= y$s$37_op (ite y$178 y$n0s2 y$pcacheA.state)))
(assert (= y$s$38_op (ite y$177 y$s$186_op y$s$37_op)))
(assert (= y$s$39_op (ite y$s$246_op y$s$36_op y$s$38_op)))
(assert (= y$s$189_op (ite y$1 y$pcacheA.state y$s$39_op)))
(assert (= y$s$108_op (and y$1 y$bus_arbiter.is_snoop)))
(assert (= y$88 (= y$n1s2 y$pcacheA.state)))
(assert (= y$s$162_op (ite y$bus_arbiter.invalidate y$n2s2 y$pcacheA.state)))
(assert (= y$126 (= y$n0s2 y$pcacheA.state)))
(assert (= y$s$373_op (ite y$5 y$n1s2 y$n2s2)))
(assert (= y$s$169_op (ite y$126 y$s$373_op y$pcacheA.state)))
(assert (= y$s$163_op (ite y$88 y$s$162_op y$s$169_op)))
(assert (= y$s$30_op (ite y$163 y$s$163_op y$s$169_op)))
(assert (= y$s$31_op (ite y$164 y$s$163_op y$s$30_op)))
(assert (= y$s$171_op (ite y$88 y$n2s2 y$pcacheA.state)))
(assert (= y$s$32_op (ite y$178 y$s$171_op y$pcacheA.state)))
(assert (= y$s$33_op (ite y$177 y$s$169_op y$s$32_op)))
(assert (= y$s$34_op (ite y$s$246_op y$s$31_op y$s$33_op)))
(assert (= y$s$109_op (and y$88 y$177)))
(assert (= y$w$1_op (ite y$88 y$n1s32 y$n0s32)))
(assert (= y$88 y$s$204_op))
(assert (= y$290 (Extract_1_0_0_32 y$w$1_op)))
(assert (= y$s$204_op y$290))
(assert (= y$292 (= y$n1s2 y$pcacheB.state)))
(assert (= y$w$3_op (ite y$292 y$n1s32 y$n0s32)))
(assert (= y$292 y$s$409_op))
(assert (= y$295 (Extract_1_0_0_32 y$w$3_op)))
(assert (= y$s$409_op y$295))
(assert (= y$all_shared_op (and y$290 y$295)))
(assert (= y$all_shared_op (not y$300)))
(assert (= y$s$153_op (ite y$300 y$n0s2 y$pcacheA.state)))
(assert (= y$s$154_op (ite y$s$109_op y$s$153_op y$pcacheA.next_state)))
(assert (= y$s$173_op (ite y$200 y$s$34_op y$s$154_op)))
(assert (= y$s$174_op (ite y$s$108_op y$s$173_op y$pcacheA.next_state)))
(assert (= y$pcacheA.next_state$next_rhs_op (ite y$s$143_op y$s$189_op y$s$174_op)))
(assert (= y$367 (= y$pcacheA.next_state$next y$pcacheA.next_state$next_rhs_op)))
(assert y$367)
(assert (= y$507 (= y$pcacheB.next_state y$pcacheB.state$next)))
(assert y$507)
(assert (= y$bus_arbiter.is_snoop (not y$7)))
(assert (= y$s$348_op (or y$bus_arbiter.bus_ackB y$7)))
(assert (= y$bus_arbiter.bus_ackB (not y$3)))
(assert (= y$162 (= y$n3s3 y$bus_arbiter.shared_snoop)))
(assert (= y$163 (= y$n4s3 y$bus_arbiter.shared_snoop)))
(assert (= y$164 (= y$n5s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$246_op (or y$162 y$163 y$164)))
(assert (= y$bus_arbiter.invalidate (not y$5)))
(assert (= y$178 (= y$n1s3 y$bus_arbiter.shared_snoop)))
(assert (= y$179 (= y$n1s2 y$pcacheA.next_state)))
(assert (= y$s$135_op (or y$178 y$179)))
(assert (= y$20 (= y$n0s2 y$pcacheA.next_state)))
(assert (= y$10 (= y$n0s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$341_op (or y$10 y$178)))
(assert (= y$s$341_op (not y$184)))
(assert (= y$s$96_op (and y$20 y$184)))
(assert (= y$s$342_op (or y$163 y$164)))
(assert (= y$s$97_op (and y$179 y$s$342_op)))
(assert (= y$s$138_op (or y$s$96_op y$s$97_op)))
(assert (= y$bus_arbiter.bus_ackA (not y$1)))
(assert (= y$w$5_op (Concat_32_1_31 y$1 y$n0s31)))
(assert (= y$s$228_op (ite y$s$138_op y$w$5_op y$n0s32)))
(assert (= y$w$6_op (ite y$s$135_op y$n1s32 y$s$228_op)))
(assert (= y$205 (and y$1 y$s$138_op)))
(assert (= y$206 (or y$s$135_op y$205)))
(assert (= y$200 (Extract_1_0_0_32 y$w$6_op)))
(assert (= y$206 y$200))
(assert (= y$208 (= y$n1s2 y$pcacheB.next_state)))
(assert (= y$s$340_op (or y$178 y$208)))
(assert (= y$44 (= y$n0s2 y$pcacheB.next_state)))
(assert (= y$s$306_op (and y$44 y$184)))
(assert (= y$s$307_op (and y$s$342_op y$208)))
(assert (= y$s$343_op (or y$s$306_op y$s$307_op)))
(assert (= y$217 (= y$n2s2 y$pcacheA.next_state)))
(assert (= y$177 (= y$n2s3 y$bus_arbiter.shared_snoop)))
(assert (= y$s$131_op (or y$163 y$177)))
(assert (= y$s$132_op (or y$164 y$s$131_op)))
(assert (= y$s$94_op (and y$178 y$179)))
(assert (= y$s$133_op (or y$s$132_op y$s$94_op)))
(assert (= y$s$95_op (and y$20 y$162)))
(assert (= y$s$134_op (or y$s$133_op y$s$95_op)))
(assert (= y$s$226_op (ite y$s$134_op y$n1s32 y$n0s32)))
(assert (= y$w$7_op (ite y$217 y$n0s32 y$s$226_op)))
(assert (= y$s$134_op y$236))
(assert (= y$237 (and (not y$217) y$236)))
(assert (= y$234 (Extract_1_0_0_32 y$w$7_op)))
(assert (= y$237 y$234))
(assert (= y$ND_inB_op (ite y$234 y$1 y$3)))
(assert (= y$w$8_op (Concat_32_1_31 y$ND_inB_op y$n0s31)))
(assert (= y$s$431_op (ite y$s$343_op y$w$8_op y$n0s32)))
(assert (= y$w$9_op (ite y$s$340_op y$n1s32 y$s$431_op)))
(assert (= y$250 (and y$s$343_op y$ND_inB_op)))
(assert (= y$251 (or y$s$340_op y$250)))
(assert (= y$247 (Extract_1_0_0_32 y$w$9_op)))
(assert (= y$251 y$247))
(assert (= y$s$5_op (or y$200 y$247)))
(assert (= y$s$5_op (not y$255)))
(assert (= y$s$387_op (ite y$255 y$n0s2 y$n1s2)))
(assert (= y$s$384_op (ite y$5 y$s$387_op y$pcacheB.state)))
(assert (= y$s$386_op (ite y$bus_arbiter.invalidate y$n0s2 y$pcacheB.state)))
(assert (= y$s$388_op (ite y$5 y$s$387_op y$s$386_op)))
(assert (= y$s$255_op (ite y$163 y$s$384_op y$s$388_op)))
(assert (= y$s$256_op (ite y$164 y$s$384_op y$s$255_op)))
(assert (= y$s$390_op (ite y$255 y$n0s2 y$pcacheB.state)))
(assert (= y$s$391_op (ite y$5 y$s$390_op y$pcacheB.state)))
(assert (= y$s$257_op (ite y$178 y$n0s2 y$pcacheB.state)))
(assert (= y$s$258_op (ite y$177 y$s$391_op y$s$257_op)))
(assert (= y$s$259_op (ite y$s$246_op y$s$256_op y$s$258_op)))
(assert (= y$s$394_op (ite y$3 y$pcacheB.state y$s$259_op)))
(assert (= y$s$318_op (and y$3 y$bus_arbiter.is_snoop)))
(assert (= y$292 (= y$n1s2 y$pcacheB.state)))
(assert (= y$s$367_op (ite y$bus_arbiter.invalidate y$n2s2 y$pcacheB.state)))
(assert (= y$475 (= y$n0s2 y$pcacheB.state)))
(assert (= y$s$373_op (ite y$5 y$n1s2 y$n2s2)))
(assert (= y$s$374_op (ite y$475 y$s$373_op y$pcacheB.state)))
(assert (= y$s$368_op (ite y$292 y$s$367_op y$s$374_op)))
(assert (= y$s$250_op (ite y$163 y$s$368_op y$s$374_op)))
(assert (= y$s$251_op (ite y$164 y$s$368_op y$s$250_op)))
(assert (= y$s$376_op (ite y$292 y$n2s2 y$pcacheB.state)))
(assert (= y$s$252_op (ite y$178 y$s$376_op y$pcacheB.state)))
(assert (= y$s$253_op (ite y$177 y$s$374_op y$s$252_op)))
(assert (= y$s$254_op (ite y$s$246_op y$s$251_op y$s$253_op)))
(assert (= y$s$319_op (and y$292 y$177)))
(assert (= y$88 (= y$n1s2 y$pcacheA.state)))
(assert (= y$w$1_op (ite y$88 y$n1s32 y$n0s32)))
(assert (= y$88 y$s$204_op))
(assert (= y$290 (Extract_1_0_0_32 y$w$1_op)))
(assert (= y$s$204_op y$290))
(assert (= y$w$3_op (ite y$292 y$n1s32 y$n0s32)))
(assert (= y$292 y$s$409_op))
(assert (= y$295 (Extract_1_0_0_32 y$w$3_op)))
(assert (= y$s$409_op y$295))
(assert (= y$all_shared_op (and y$290 y$295)))
(assert (= y$all_shared_op (not y$300)))
(assert (= y$s$358_op (ite y$300 y$n0s2 y$pcacheB.state)))
(assert (= y$s$359_op (ite y$s$319_op y$s$358_op y$pcacheB.next_state)))
(assert (= y$s$378_op (ite y$247 y$s$254_op y$s$359_op)))
(assert (= y$s$379_op (ite y$s$318_op y$s$378_op y$pcacheB.next_state)))
(assert (= y$pcacheB.next_state$next_rhs_op (ite y$s$348_op y$s$394_op y$s$379_op)))
(assert (= y$592 (= y$pcacheB.next_state$next y$pcacheB.next_state$next_rhs_op)))
(assert y$592)
(assert (= y$792 (= y$n1s2 y$pcacheB.next_state$next)))
(assert (= y$793 (not (= y$n1s2 y$pcacheA.next_state$next))))
(assert (= y$687 (= y$n1s2 y$pcacheA.state$next)))
(assert (= y$w$1$next_op (ite y$687 y$n1s32 y$n0s32)))
(assert (= y$687 y$691))
(assert (= y$690 (Extract_1_0_0_32 y$w$1$next_op)))
(assert (= y$691 y$690))
(assert (= y$w$2$next_op (Concat_32_1_31 y$690 y$n0s31)))
(assert (= (= y$n1s32 y$w$2$next_op) y$779))
(assert (= y$696 (= y$n1s2 y$pcacheB.state$next)))
(assert (= y$w$3$next_op (ite y$696 y$n1s32 y$n0s32)))
(assert (= y$696 y$700))
(assert (= y$699 (Extract_1_0_0_32 y$w$3$next_op)))
(assert (= y$700 y$699))
(assert (= y$w$4$next_op (Concat_32_1_31 y$699 y$n0s31)))
(assert (= y$704 (= y$n1s32 y$w$4$next_op)))
(assert y$792)
(assert y$793)
(assert y$779)
(assert y$704)
(check-sat)
(exit)
